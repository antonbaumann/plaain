{"version":3,"sources":["serviceWorker.js","scenes/App/ForYou.js","models/Caption.js","models/Source.js","services/tmdb/GetMovie.js","services/tmdb/GetMovieCredits.js","services/tmdb/GetMovieVideos.js","models/Video.js","components/PlyrPlayer/PlyrCaption.js","components/PlyrPlayer/PlyrContinue.js","components/PlyrPlayer/PlyrSource.js","components/PlyrPlayer.js","scenes/App/Movies/Movie.js","scenes/App/Movies.js","scenes/App/Shows.js","scenes/App/Find.js","scenes/App/Settings.js","scenes/App.js","scenes/Home.js","scenes/NotFound.js","index.js","scenes/logo.svg"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ForYou","react_default","a","createElement","className","Component","Caption","label","src","src_lang","arguments","length","undefined","Object","classCallCheck","this","_label","_src","_src_lang","Source","require","type","size","_type","_size","Video","poster","sources","captions","time","_poster","_sources","_captions","_time","PlyrCaption","kind","props","caption","srcLang","srclang","default","index","PlyrContinue","document","querySelector","style","display","parent","player","play","currentTime","video","id","onClick","continueWatching","bind","PlyrSource","source","PlyrPlayer","_this","Plyr","debug","process","on","event","detail","plyr","crossOrigin","playsInline","controls","map","PlyrPlayer_PlyrSource","i","PlyrPlayer_PlyrCaption","href","download","PlyrPlayer_PlyrContinue","Movie","_ref","movie","params","fetch","src_components_PlyrPlayer","Movies","Route","path","concat","component","exact","render","Shows","Find","Settings","App","Home","NotFound","ReactDOM","BrowserRouter","Switch","getElementById","URL","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.77b06395.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\nimport './ForYou.scss'\n\nclass ForYou extends Component {\n  render() {\n    return (\n      <div className=\"ForYou\">\n      </div>\n    )\n  }\n}\n\nexport default ForYou\n","class Caption {\n  constructor(label, src, src_lang = \"en\") {\n    this._label = label\n    this._src = src\n    this._src_lang = src_lang\n  }\n\n  get label() {\n    return this._label\n  }\n\n  get src() {\n    return this._src\n  }\n\n  get srcLang() {\n    return this._src_lang\n  }\n}\n\nexport default Caption\n","class Source {\n  constructor(src, type, size = 1080) {\n    this._src = src\n    this._type = type\n    this._size = size\n  }\n\n  get src() {\n    return this._src\n  }\n\n  get type() {\n    return this._type\n  }\n\n  get size() {\n    return this._size\n  }\n}\n\nexport default Source\n","import { tmdb_options, tmdb_base_uri } from './../../config/tmdb'\n\nconst rp = require('request-promise')\n\nclass GetMovie {\n  constructor(id) {\n    this._id = id\n  }\n\n  perform() {\n    return rp({...tmdb_options, uri: `${tmdb_base_uri}/movie/${this.id}`})\n  }\n\n  get id() {\n    return this._id\n  }\n}\n\nexport default GetMovie\n","import { tmdb_options, tmdb_base_uri } from './../../config/tmdb'\n\nconst rp = require('request-promise')\n\nclass GetMovieCredits {\n  constructor(id) {\n    this._id = id\n  }\n\n  perform() {\n    return rp({...tmdb_options, uri: `${tmdb_base_uri}/movie/${this.id}/credits`})\n  }\n\n  get id() {\n    return this._id\n  }\n}\n\nexport default GetMovieCredits\n","import { tmdb_options, tmdb_base_uri } from './../../config/tmdb'\n\nconst rp = require('request-promise')\n\nclass GetMovieVideos {\n  constructor(id) {\n    this._id = id\n  }\n\n  perform() {\n    return rp({...tmdb_options, uri: `${tmdb_base_uri}/movie/${this.id}/videos`})\n  }\n\n  get id() {\n    return this._id\n  }\n}\n\nexport default GetMovieVideos\n","class Video {\n  constructor(poster, sources = [], captions = [], time = 0) {\n    this._poster = poster\n    this._sources = sources\n    this._captions = captions\n    this._time = time\n  }\n\n  get poster() {\n    return this._poster\n  }\n\n  get sources() {\n    return this._sources\n  }\n\n  get captions() {\n    return this._captions\n  }\n\n  get time() {\n    return this._time\n  }\n\n  set time(time) {\n    this._time = time\n  }\n}\n\nexport default Video\n","import React, { Component } from 'react'\n\nclass PlyrCaption extends Component {\n  render() {\n    return (\n      <track\n        kind=\"captions\"\n        label={this.props.caption.label}\n        src={this.props.caption.src}\n        srcLang={this.props.caption.srclang || \"en\"}\n        default={this.props.index === 0} />\n    )\n  }\n}\n\nexport default PlyrCaption\n","import React, { Component } from 'react'\n\nclass PlyrContinue extends Component {\n  continueWatching() {\n    document.querySelector('button#continue').style.display = 'none'\n    this.props.parent.player.play()\n    this.props.parent.player.currentTime = this.props.parent.props.video.time\n  }\n\n  render() {\n    if (this.props.parent.props.video.time === 0) {\n      return null\n    }\n\n    return (\n      <button\n        id=\"continue\"\n        onClick={this.continueWatching.bind(this)}>\n        Continue watching\n      </button>\n    )\n  }\n}\n\nexport default PlyrContinue\n","import React, { Component } from 'react'\n\nclass PlyrSource extends Component {\n  render() {\n    return (\n      <source\n        src={this.props.source.src}\n        type={this.props.source.type}\n        size={this.props.source.size} />\n    )\n  }\n}\n\nexport default PlyrSource\n","import React, { Component } from 'react'\nimport Plyr from 'plyr'\nimport './PlyrPlayer.scss'\n\nimport PlyrCaption from './PlyrPlayer/PlyrCaption'\nimport PlyrContinue from './PlyrPlayer/PlyrContinue'\nimport PlyrSource from './PlyrPlayer/PlyrSource'\n\nclass PlyrPlayer extends Component {\n  componentDidMount() {\n    this.player = new Plyr('#player', {\n      debug: process.env.NODE_ENV === 'development'\n    })\n    this.player.on('play', event => {\n      if (document.querySelector('button#continue')) {\n        document.querySelector('button#continue').style.display = 'none'\n      }\n    });\n    this.player.on('timeupdate', event => {\n      if (event.detail.plyr.currentTime !== 0) {\n        this.props.video.time = event.detail.plyr.currentTime\n      }\n    });\n  }\n\n  render() {\n    if (this.props.video.sources.length === 0) {\n      return null\n    }\n\n    return (\n      <div>\n        <video\n          poster={this.props.video.poster}\n          src={this.props.video.sources[0].src}\n          id=\"player\" crossOrigin=\"true\" playsInline controls>\n          {this.props.video.sources.map((source) => {\n            return (<PlyrSource source={source} />)\n          })}\n          {this.props.video.captions.map((caption, i) => {\n            return (<PlyrCaption caption={caption} index={i} />)\n          })}\n          <a href={this.props.video.sources[0].src} download>Download</a>\n        </video>\n        <PlyrContinue parent={this} />\n      </div>\n    )\n  }\n}\n\nexport default PlyrPlayer\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport './Movie.scss'\n\nimport Caption from './../../../models/Caption'\nimport { default as MovieModel } from './../../../models/Movie'\nimport Source from './../../../models/Source'\nimport Video from './../../../models/Video'\n\nimport PlyrPlayer from './../../../components/PlyrPlayer'\n\nclass Movie extends Component {\n  render({ match }) {\n    const video = new Video(\n      \"https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg\",\n      [\n        new Source(\"https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-576p.mp4\", \"video/mp4\", 576),\n        new Source(\"https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-720p.mp4\", \"video/mp4\", 720),\n        new Source(\"https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-1080p.mp4\", \"video/mp4\", 1080)\n      ],\n      [\n        new Caption(\"English\", \"https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt\", \"en\"),\n        new Caption(\"Français\", \"https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt\", \"fr\")\n      ]\n    )\n    // const movie = new Movie(299537, video).fetch()\n    const movie = new Movie(match.params.id, video).fetch()\n    console.log(movie)\n\n    return (\n      <div className=\"Movie\">\n        <PlyrPlayer video={video} />\n      </div>\n    )\n  }\n}\n\nexport default Movie\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport './Movies.scss'\n\nimport Movie from './Movies/Movie'\n\nclass Movies extends Component {\n  render({ match }) {\n    return (\n      <div className=\"Movies\">\n        <Route path={`${match.path}/:id`} component={Movie}/>\n        <Route\n          exact\n          path={match.path}\n          render={() => <h3>Please select a movie.</h3>} />\n      </div>\n    )\n  }\n}\n\nexport default Movies\n","import React, { Component } from 'react'\nimport './Shows.scss'\n\nclass Shows extends Component {\n  render() {\n    return (\n      <div className=\"Shows\">\n      </div>\n    )\n  }\n}\n\nexport default Shows\n","import React, { Component } from 'react'\nimport './Find.scss'\n\nclass Find extends Component {\n  render() {\n    return (\n      <div className=\"Find\">\n      </div>\n    )\n  }\n}\n\nexport default Find\n","import React, { Component } from 'react'\nimport './Settings.scss'\n\nclass Settings extends Component {\n  render() {\n    return (\n      <div className=\"Settings\">\n      </div>\n    )\n  }\n}\n\nexport default Settings\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport logo from './logo.svg'\nimport './App.scss'\n\nimport ForYou from './App/ForYou'\nimport Movies from './App/Movies'\nimport Shows from './App/Shows'\nimport Find from './App/Find'\nimport Settings from './App/Settings'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Route path=\"/\" exact component={ForYou} />\n        <Route path=\"/movies\" component={Movies} />\n        <Route path=\"/shows\" component={Shows} />\n        <Route path=\"/find\" component={Find} />\n        <Route path=\"/settings\" component={Settings} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './Home.scss'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './NotFound.scss'\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"NotFound\">\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './scenes/App'\nimport Home from './scenes/Home'\nimport NotFound from './scenes/NotFound'\n\nimport './index.scss'\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/app\" component={App} />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}
{"version":3,"sources":["services/auth/MicrosoftAuth.js","services/drives/OneDrive.js","constants.js","services/indexing/IndexFiles.js","services/indexing/IndexMovies.js","services/indexing/IndexEpisodes.js","services/indexing/IndexSeasons.js","services/indexing/IndexShows.js","services/indexing/IndexItems.js","services/fetching/FetchMovie.js","selectors/movies.js","actions/movies.js","services/fetching/FetchShow.js","selectors/shows.js","actions/shows.js","actions/indexing.js","actions/auth.js","reducers/auth.js","reducers/indexing.js","reducers/index.js","reducers/movies.js","reducers/shows.js","store.js","serviceWorker.js","scenes/ForYou.js","models/Caption.js","config/tmdb.js","services/tmdb/GetMovie.js","services/tmdb/GetMovieCredits.js","services/tmdb/GetMovieVideos.js","models/Movie.js","models/Source.js","models/Video.js","components/PlyrPlayer/PlyrCaption.js","components/PlyrPlayer/PlyrContinue.js","components/PlyrPlayer/PlyrSource.js","components/PlyrPlayer.js","scenes/Movies/Movie.js","scenes/Movies.js","scenes/Shows.js","scenes/Find.js","scenes/Welcome.js","scenes/NotFound.js","App.js","components/Loading.js","index.js"],"names":["MicrosoftAuth","Object","classCallCheck","this","_userAgentApplication","UserAgentApplication","config","clientID","_this","logIn","then","accessToken","token","user","userAgentApplication","getUser","_this2","loginPopup","graphScopes","acquireTokenSilent","catch","acquireTokenPopup","process","OneDrive","_client","Client","init","authProvider","done","client","api","get","itemId","concat","ITEM_STATES","ITEM_TYPES","FILE_TYPES","SOURCE_EXTENSIONS","CAPTION_EXTENSIONS","IndexFiles","oneDrive","folderId","_oneDrive","_folderId","children","response","value","map","item","index","filter","source","type","fileType","name","file","id","extension","fileExtension","information","fileInformation","mimeType","url","fileName","includes","split","pop","shift","IndexMovies","movies","folder","perform","files","state","length","IndexEpisodes","episodes","Promise","all","episode","childCount","Number","isNaN","episodeNumber","parseInt","IndexSeasons","seasons","season","seasonNumber","IndexShows","shows","IndexItems","movie","show","data","assign","FetchMovie","_movie","moviesSelector","addMovie","payload","fetchMovie","movieId","dispatch","getState","fetchMovieBegin","createSelector","movieSelector","FetchShow","_show","showsSelector","addShow","fetchShow","showId","fetchShowBegin","showSelector","indexBegin","auth","_ref","movieProgress","values","forEach","progress","moviesArr","episodeProgress","showsArr","indexSuccess","error","indexFailure","statusCode","logInBegin","logInSuccess","logInFailure","initialState","loading","rootReducer","combineReducers","persistReducer","key","storage","whitelist","debug","arguments","undefined","action","objectSpread","indexing","defineProperty","createStore","persistedReducer","applyMiddleware","thunk","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ForYou","react_default","a","createElement","className","Component","Caption","label","src","src_lang","_label","_src","_src_lang","tmdb_options","qs","api_key","language","headers","User-Agent","json","tmdb_base_uri","rp","require","GetMovie","_id","uri","GetMovieCredits","GetMovieVideos","Movie","video","_video","fetchDetails","fetchCredits","fetchVideos","_backdrop_path","backdrop_path","_overview","overview","_poster_path","poster_path","_release_date","release_date","_runtime","runtime","_title","title","_cast","cast","cast_member","character","_crew","crew","crew_member","job","_this3","videos","results","_trailer_key","Source","size","_type","_size","Video","poster","sources","captions","time","_poster","_sources","_captions","_time","PlyrCaption","kind","props","caption","srcLang","srclang","default","PlyrContinue","document","querySelector","style","display","parent","player","play","currentTime","onClick","continueWatching","bind","PlyrSource","PlyrPlayer","Plyr","on","event","detail","plyr","crossOrigin","playsInline","controls","PlyrPlayer_PlyrSource","PlyrPlayer_PlyrCaption","href","download","PlyrPlayer_PlyrContinue","MovieModel","params","fetch","src_components_PlyrPlayer","Movies","Route","path","component","exact","render","Shows","Find","Welcome","NotFound","App","possibleConstructorReturn","getPrototypeOf","call","BrowserRouter","Switch","connect","Loading","ReactDOM","es","store","integration_react","components_Loading","persistor","persistStore","src_App","getElementById","URL","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.87dbfbf7.chunk.js","sourcesContent":["import { UserAgentApplication } from 'msal'\n\nclass MicrosoftAuth {\n  static config = {\n    clientID: process.env.REACT_APP_MICROSOFT_CLIENT_ID,\n    graphScopes: ['user.read', 'files.read.all']\n  }\n\n  constructor() {\n    this._userAgentApplication = new UserAgentApplication(\n      MicrosoftAuth.config.clientID,\n      'https://login.microsoftonline.com/common',\n      null\n    )\n  }\n\n  perform() {\n    return this.logIn().then(accessToken => {\n      return {\n        token: accessToken,\n        user: this.userAgentApplication.getUser()\n      }\n    })\n  }\n\n  logIn() {\n    return this.userAgentApplication.loginPopup(MicrosoftAuth.config.graphScopes).then(() => {\n      return this.userAgentApplication.acquireTokenSilent(MicrosoftAuth.config.graphScopes).then(accessToken => {\n        return accessToken\n      }).catch(() => {\n        return this.userAgentApplication.acquireTokenPopup(MicrosoftAuth.config.graphScopes).then(accessToken => {\n          return accessToken\n        })\n      })\n    })\n  }\n\n  get userAgentApplication() {\n    return this._userAgentApplication\n  }\n}\n\nexport default MicrosoftAuth\n","import { Client } from '@microsoft/microsoft-graph-client'\n\nclass OneDrive {\n  constructor(accessToken) {\n    this._client = Client.init({\n      authProvider: done => done(null, accessToken)\n    })\n  }\n\n  movies() {\n    return this.client.api('/me/drive/root:/Plaain/Movies:/children').get()\n  }\n\n  shows() {\n    return this.client.api('/me/drive/root:/Plaain/Shows:/children').get()\n  }\n\n  children(itemId) {\n    return this.client.api(`/me/drive/items/${itemId}/children`).get()\n  }\n\n  get client() {\n    return this._client\n  }\n}\n\nexport default OneDrive\n","export const ITEM_STATES = {\n  INDEXED: 'indexed',\n  FETCHED: 'fetched',\n}\n\nexport const ITEM_TYPES = {\n  LIBRARY: 'library',\n  RECOMMENDED: 'recommended',\n}\n\nexport const FILE_TYPES = {\n  SOURCE: 'source',\n  CAPTION: 'caption'\n}\n\nexport const SOURCE_EXTENSIONS = ['mp4', 'm4v', 'mkv', 'webm']\nexport const CAPTION_EXTENSIONS = ['vtt']\n","import { FILE_TYPES, SOURCE_EXTENSIONS, CAPTION_EXTENSIONS } from '../../constants'\n\nclass IndexFiles {\n  constructor(oneDrive, folderId) {\n    this._oneDrive = oneDrive\n    this._folderId = folderId\n  }\n\n  perform() {\n    return this.oneDrive.children(this.folderId).then(response => {\n      return response.value.map(item => this.index(item)).filter(source => source != null)\n    })\n  }\n\n  index(item) {\n    const type = IndexFiles.fileType(item.name)\n    if (item.file == null || type == null) {\n      return null\n    }\n\n    return {\n      id: item.id,\n      type: type,\n      name: item.name,\n      extension: IndexFiles.fileExtension(item.name),\n      information: IndexFiles.fileInformation(item.name),\n      mimeType: item.file.mimeType,\n      url: item['@microsoft.graph.downloadUrl']\n    }\n  }\n\n  static fileType(fileName) {\n    if (SOURCE_EXTENSIONS.includes(IndexFiles.fileExtension(fileName))) {\n      return FILE_TYPES.SOURCE\n    } else if (CAPTION_EXTENSIONS.includes(IndexFiles.fileExtension(fileName))) {\n      return FILE_TYPES.CAPTION\n    } else {\n      return null\n    }\n  }\n\n  static fileExtension(fileName) {\n    return fileName.split('.').pop()\n  }\n\n  static fileInformation(fileName) {\n    return fileName.split('.').shift()\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get folderId() {\n    return this._folderId\n  }\n}\n\nexport default IndexFiles\n","import { ITEM_STATES, ITEM_TYPES } from '../../constants'\n\nimport IndexFiles from './IndexFiles'\n\nclass IndexMovies {\n  constructor(oneDrive) {\n    this._oneDrive = oneDrive\n  }\n\n  perform() {\n    return this.oneDrive.movies().then(response => {\n      return response.value.map(item => this.index(item))\n    })\n  }\n\n  async index(item) {\n    if (item.folder == null) {\n      return null\n    }\n\n    const files = await new IndexFiles(this.oneDrive, item.id).perform()\n\n    return {\n      state: ITEM_STATES.INDEXED,\n      type: files.length > 0 ? ITEM_TYPES.LIBRARY : ITEM_TYPES.RECOMMENDED,\n      id: item.id,\n      name: item.name,\n      files: files\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n}\n\nexport default IndexMovies\n","import { ITEM_STATES, ITEM_TYPES } from '../../constants'\n\nimport IndexFiles from './IndexFiles'\n\nclass IndexEpisodes {\n  constructor(oneDrive, folderId) {\n    this._oneDrive = oneDrive\n    this._folderId = folderId\n  }\n\n  perform() {\n    return this.oneDrive.children(this.folderId).then(response => {\n      return response.value.map(item => this.index(item))\n    }).then(episodes => {\n      return Promise.all(episodes).then(episodes => episodes.filter(episode => episode != null))\n    })\n  }\n\n  async index(item) {\n    if (item.folder == null || item.folder.childCount < 1 || Number.isNaN(item.name)) {\n      return null\n    }\n\n    const files = await new IndexFiles(this.oneDrive, item.id).perform()\n    if (files.length < 1) {\n      return null\n    }\n\n    return {\n      state: ITEM_STATES.INDEXED,\n      type: ITEM_TYPES.LIBRARY,\n      id: item.id,\n      episodeNumber: Number.parseInt(item.name),\n      files: files\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get folderId() {\n    return this._folderId\n  }\n}\n\nexport default IndexEpisodes\n","import { ITEM_STATES, ITEM_TYPES } from '../../constants'\n\nimport IndexEpisodes from './IndexEpisodes'\n\nclass IndexSeasons {\n  constructor(oneDrive, folderId) {\n    this._oneDrive = oneDrive\n    this._folderId = folderId\n  }\n\n  perform() {\n    return this.oneDrive.children(this.folderId).then(response => {\n      return response.value.map(item => this.index(item))\n    }).then(seasons => {\n      return Promise.all(seasons).then(seasons => seasons.filter(season => season != null))\n    })\n  }\n\n  async index(item) {\n    if (item.folder == null || Number.isNaN(item.name)) {\n      return null\n    }\n\n    const episodes = await new IndexEpisodes(this.oneDrive, item.id).perform()\n\n    return {\n      state: ITEM_STATES.INDEXED,\n      type: episodes.length > 0 ? ITEM_TYPES.LIBRARY : ITEM_TYPES.RECOMMENDED,\n      id: item.id,\n      seasonNumber: Number.parseInt(item.name),\n      episodes: episodes\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get folderId() {\n    return this._folderId\n  }\n}\n\nexport default IndexSeasons\n","import { ITEM_STATES, ITEM_TYPES } from '../../constants'\n\nimport IndexSeasons from './IndexSeasons'\n\nclass IndexShows {\n  constructor(oneDrive) {\n    this._oneDrive = oneDrive\n  }\n\n  perform() {\n    return this.oneDrive.shows().then(response => {\n      return response.value.map(item => this.index(item))\n    })\n  }\n\n  async index(item) {\n    if (item.folder == null) {\n      return null\n    }\n\n    const seasons = await new IndexSeasons(this.oneDrive, item.id).perform()\n\n    return {\n      state: ITEM_STATES.INDEXED,\n      type: seasons.length > 0 ? ITEM_TYPES.LIBRARY : ITEM_TYPES.RECOMMENDED,\n      id: item.id,\n      name: item.name,\n      seasons: seasons\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n}\n\nexport default IndexShows\n","import OneDrive from '../drives/OneDrive'\n\nimport IndexMovies from './IndexMovies'\nimport IndexShows from './IndexShows'\n\nclass IndexItems {\n  constructor(accessToken) {\n    this._oneDrive = new OneDrive(accessToken)\n  }\n\n  perform() {\n    return Promise.all([\n      new IndexMovies(this.oneDrive).perform().then(movies => ({ movies: Promise.all(movies).then(movies => movies.filter(movie => movie != null)) })),\n      new IndexShows(this.oneDrive).perform().then(shows => ({ shows: Promise.all(shows).then(shows => shows.filter(show => show != null)) }))\n    ]).then(data => Object.assign({}, data[0], data[1]))\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n}\n\nexport default IndexItems\n","class FetchMovie {\n  constructor(movie) {\n    this._movie = movie\n  }\n\n  perform() {\n    // return new Promise((resolve, reject) => {\n    //   resolve({...this.movie})\n    // })\n  }\n\n  get movie() {\n    return this._movie\n  }\n}\n\nexport default FetchMovie\n","import { createSelector } from 'reselect'\n\nconst moviesSelector = state => state.movies\n\nexport const movieSelector = movieId => {\n  return createSelector(\n    moviesSelector,\n    movies => movies[movieId]\n  )\n}\n","import FetchMovie from '../services/fetching/FetchMovie'\n\nimport { movieSelector } from '../selectors/movies'\n\nexport const ADD_MOVIE = 'ADD_MOVIE'\nexport const CLEAR_MOVIES = 'CLEAR_MOVIES'\nexport const FETCH_MOVIE = 'FETCH_MOVIE'\n\nexport const addMovie = movie => ({\n  type: ADD_MOVIE,\n  payload: movie\n})\n\nexport const clearMovies = () => ({\n  type: CLEAR_MOVIES\n})\n\nexport const fetchMovie = movieId => {\n  return (dispatch, getState) => {\n    dispatch(fetchMovieBegin(movieId))\n\n    const movie = movieSelector(movieId)(getState())\n    new FetchMovie(movie).perform().then(movie => {\n      dispatch(addMovie(movie))\n    }).catch(() => dispatch(fetchMovie(movieId)))\n  }\n}\n\nconst fetchMovieBegin = movieId => ({\n  type: FETCH_MOVIE,\n  payload: movieId\n})\n","class FetchShow {\n  constructor(show) {\n    this._show = show\n  }\n\n  perform() {\n    // return new Promise((resolve, reject) => {\n    //   resolve({...this.show})\n    // })\n  }\n\n  get show() {\n    return this._show\n  }\n}\n\nexport default FetchShow\n","import { createSelector } from 'reselect'\n\nconst showsSelector = state => state.shows\n\nexport const showSelector = showId => {\n  return createSelector(\n    showsSelector,\n    shows => shows[showId]\n  )\n}\n","import FetchShow from '../services/fetching/FetchShow'\n\nimport { showSelector } from '../selectors/shows'\n\nexport const ADD_SHOW = 'ADD_SHOW'\nexport const CLEAR_SHOWS = 'CLEAR_SHOWS'\nexport const FETCH_SHOW = 'FETCH_SHOW'\n\nexport const addShow = show => ({\n  type: ADD_SHOW,\n  payload: show\n})\n\nexport const clearShows = () => ({\n  type: CLEAR_SHOWS\n})\n\nexport const fetchShow = showId => {\n  return (dispatch, getState) => {\n    dispatch(fetchShowBegin(showId))\n\n    const show = showSelector(showId)(getState())\n    new FetchShow(show).perform().then(show => {\n      dispatch(addShow(show))\n    }).catch(() => dispatch(fetchShow(showId)))\n  }\n}\n\nconst fetchShowBegin = showId => ({\n  type: FETCH_SHOW,\n  payload: showId\n})\n","import IndexItems from '../services/indexing/IndexItems'\n\nimport { logIn } from './auth'\nimport { addMovie, clearMovies, fetchMovie } from './movies'\nimport { addShow, clearShows, fetchShow } from './shows'\n\nexport const INDEX_BEGIN = 'INDEX_BEGIN'\nexport const INDEX_SUCCESS = 'INDEX_SUCCESS'\nexport const INDEX_FAILURE = 'INDEX_FAILURE'\n\nexport const index = () => {\n  return (dispatch, getState) => {\n    dispatch(indexBegin())\n\n    new IndexItems(getState().auth.token).perform().then(({ movies, shows }) => {\n      const movieProgress = {}\n      Object.values(getState().movies).forEach(movie => movieProgress[movie.id] = movie.progress)\n      dispatch(clearMovies())\n      movies.then(moviesArr => {\n        moviesArr.forEach(movie => {\n          movie.progress = movieProgress[movie.id]\n          dispatch(addMovie(movie))\n          dispatch(fetchMovie(movie))\n        })\n      })\n\n      const episodeProgress = {}\n      Object.values(getState().shows).forEach(show => {\n        show.seasons.forEach(season => {\n          season.episodes.forEach(episode => episodeProgress[episode.id] = episode.progress)\n        })\n      })\n      dispatch(clearShows())\n      shows.then(showsArr => {\n        showsArr.forEach(show => {\n          show.seasons.forEach(season => {\n            season.episodes.forEach(episode => episode.progress = episodeProgress[episode.id])\n          })\n          dispatch(addShow(show))\n          dispatch(fetchShow(show))\n        })\n      })\n\n      dispatch(indexSuccess())\n    }).catch(error => {\n      dispatch(indexFailure(error))\n\n      if (error.statusCode === 401) {\n        dispatch(logIn())\n      }\n    })\n  }\n}\n\nconst indexBegin = () => ({\n  type: INDEX_BEGIN\n})\n\nconst indexSuccess = () => ({\n  type: INDEX_SUCCESS\n})\n\nconst indexFailure = error => ({\n  type: INDEX_FAILURE,\n  payload: error\n})\n","import MicrosoftAuth from '../services/auth/MicrosoftAuth'\n\nimport { index } from './indexing'\n\nexport const LOG_IN_BEGIN = 'LOG_IN_BEGIN'\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\n\nexport const logIn = () => {\n  return dispatch => {\n    dispatch(logInBegin())\n\n    new MicrosoftAuth().perform().then(auth => {\n      dispatch(logInSuccess(auth))\n      dispatch(index())\n    }).catch(error => dispatch(logInFailure(error)))\n  }\n}\n\nconst logInBegin = () => ({\n  type: LOG_IN_BEGIN\n})\n\nconst logInSuccess = auth => ({\n  type: LOG_IN_SUCCESS,\n  payload: auth\n})\n\nconst logInFailure = error => ({\n  type: LOG_IN_FAILURE,\n  payload: error\n})\n","import { LOG_IN_BEGIN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../actions/auth'\n\nconst initialState = {\n  token: null,\n  user: null,\n  loading: false,\n  error: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case LOG_IN_BEGIN:\n    return {\n      ...state,\n      loading: true,\n      error: null\n    }\n  case LOG_IN_SUCCESS:\n    return {\n      ...state,\n      token: action.payload.token,\n      user: action.payload.user,\n      loading: false\n    }\n  case LOG_IN_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      error: action.payload\n    }\n  default:\n    return state\n  }\n}\n","import { INDEX_BEGIN, INDEX_SUCCESS, INDEX_FAILURE } from '../actions/indexing'\n\nconst initialState = {\n  loading: false,\n  error: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case INDEX_BEGIN:\n    return {\n      ...state,\n      loading: true,\n      error: null\n    }\n  case INDEX_SUCCESS:\n    return {\n      ...state,\n      loading: false\n    }\n  case INDEX_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      error: action.payload\n    }\n  default:\n    return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport auth from './auth'\nimport indexing from './indexing'\nimport movies from './movies'\nimport shows from './shows'\n\nconst rootReducer = combineReducers({\n  auth: persistReducer({\n    key: 'auth',\n    storage: storage,\n    whitelist: ['token', 'user'],\n    debug: process.env.NODE_ENV === 'development'\n  }, auth),\n  indexing,\n  movies,\n  shows\n})\n\nexport default persistReducer({\n  key: 'root',\n  storage: storage,\n  whitelist: ['movies', 'shows'],\n  debug: process.env.NODE_ENV === 'development'\n}, rootReducer)\n","import { ITEM_STATES } from '../constants'\n\nimport { ADD_MOVIE, CLEAR_MOVIES, FETCH_MOVIE } from '../actions/movies'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case ADD_MOVIE:\n    return {\n      ...state,\n      [action.payload.id]: action.payload\n    }\n  case CLEAR_MOVIES:\n    return {}\n  case FETCH_MOVIE:\n    return {\n      ...state,\n      [action.payload]: {\n        ...state[action.payload],\n        state: ITEM_STATES.INDEXED\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { ITEM_STATES } from '../constants'\n\nimport { ADD_SHOW, CLEAR_SHOWS, FETCH_SHOW } from '../actions/shows'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case ADD_SHOW:\n    return {\n      ...state,\n      [action.payload.id]: action.payload\n    }\n  case CLEAR_SHOWS:\n    return {}\n  case FETCH_SHOW:\n    return {\n      ...state,\n      [action.payload]: {\n        ...state[action.payload],\n        state: ITEM_STATES.INDEXED\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport persistedReducer from './reducers'\n\nexport default createStore(\n  persistedReducer,\n  applyMiddleware(thunk)\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React, { Component } from 'react'\n// import './ForYou.scss'\n\nclass ForYou extends Component {\n  render() {\n    return (\n      <div className='ForYou'>\n      </div>\n    )\n  }\n}\n\nexport default ForYou\n","class Caption {\n  constructor(label, src, src_lang = 'en') {\n    this._label = label\n    this._src = src\n    this._src_lang = src_lang\n  }\n\n  get label() {\n    return this._label\n  }\n\n  get src() {\n    return this._src\n  }\n\n  get srcLang() {\n    return this._src_lang\n  }\n}\n\nexport default Caption\n","const tmdb_options = {\n  qs: {\n    api_key: process.env.REACT_APP_TMDB_API_KEY,\n    language: 'en-US'\n  },\n  headers: {\n    'User-Agent': 'Request-Promise'\n  },\n  json: true\n}\n\nconst tmdb_base_uri = 'https://api.themoviedb.org/3'\n\nexport { tmdb_options, tmdb_base_uri }\n","import { tmdb_options, tmdb_base_uri } from './../../config/tmdb'\n\nconst rp = require('request-promise')\n\nclass GetMovie {\n  constructor(id) {\n    this._id = id\n  }\n\n  perform() {\n    return rp({...tmdb_options, uri: `${tmdb_base_uri}/movie/${this.id}`})\n  }\n\n  get id() {\n    return this._id\n  }\n}\n\nexport default GetMovie\n","import { tmdb_options, tmdb_base_uri } from './../../config/tmdb'\n\nconst rp = require('request-promise')\n\nclass GetMovieCredits {\n  constructor(id) {\n    this._id = id\n  }\n\n  perform() {\n    return rp({...tmdb_options, uri: `${tmdb_base_uri}/movie/${this.id}/credits`})\n  }\n\n  get id() {\n    return this._id\n  }\n}\n\nexport default GetMovieCredits\n","import { tmdb_options, tmdb_base_uri } from './../../config/tmdb'\n\nconst rp = require('request-promise')\n\nclass GetMovieVideos {\n  constructor(id) {\n    this._id = id\n  }\n\n  perform() {\n    return rp({...tmdb_options, uri: `${tmdb_base_uri}/movie/${this.id}/videos`})\n  }\n\n  get id() {\n    return this._id\n  }\n}\n\nexport default GetMovieVideos\n","import GetMovie from './../services/tmdb/GetMovie'\nimport GetMovieCredits from './../services/tmdb/GetMovieCredits'\nimport GetMovieVideos from './../services/tmdb/GetMovieVideos'\n\nclass Movie {\n  constructor(id, video) {\n    this._id = id\n    this._video = video\n  }\n\n  fetch() {\n    this.fetchDetails()\n    this.fetchCredits()\n    this.fetchVideos()\n\n    return this\n  }\n\n  fetchDetails() {\n    new GetMovie(this.id).perform()\n      .then((response) => {\n        this._backdrop_path = response.backdrop_path\n        this._overview = response.overview\n        this._poster_path = response.poster_path\n        this._release_date = response.release_date\n        this._runtime = response.runtime\n        this._title = response.title\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  fetchCredits() {\n    new GetMovieCredits(this.id).perform()\n      .then((response) => {\n        this._cast = response.cast.map((cast_member) => {\n          return {\n            character: cast_member.character,\n            name: cast_member.name\n          }\n        })\n        this._crew = response.crew.map((crew_member) => {\n          return {\n            job: crew_member.job,\n            name: crew_member.name\n          }\n        })\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  fetchVideos() {\n    new GetMovieVideos(this.id).perform()\n      .then((response) => {\n        const videos = response.results.filter((video) => video.type === 'YouTube')\n        if (videos.length > 0) {\n          this._trailer_key = videos[0].key\n        }\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  get backdropUrl() {\n    return `https://image.tmdb.org/t/p/original${this._backdrop_path}`\n  }\n\n  get crew() {\n    return this._crew\n  }\n\n  get id() {\n    return this._id\n  }\n\n  get overview() {\n    return this._overview\n  }\n\n  get posterURL() {\n    return `https://image.tmdb.org/t/p/original${this._poster_path}`\n  }\n\n  get releaseDate() {\n    return this._release_date\n  }\n\n  get runtime() {\n    return this._runtime\n  }\n\n  get title() {\n    return this._title\n  }\n\n  get starring() {\n    return this._cast\n  }\n\n  get trailerUrl() {\n    if (this._trailer_key == null) {\n      return null\n    }\n\n    return `https://www.youtube.com/watch?v=${this._trailer_key}`\n  }\n\n  get video() {\n    return this._video\n  }\n}\n\nexport default Movie\n","class Source {\n  constructor(src, type, size = 1080) {\n    this._src = src\n    this._type = type\n    this._size = size\n  }\n\n  get src() {\n    return this._src\n  }\n\n  get type() {\n    return this._type\n  }\n\n  get size() {\n    return this._size\n  }\n}\n\nexport default Source\n","class Video {\n  constructor(poster, sources = [], captions = [], time = 0) {\n    this._poster = poster\n    this._sources = sources\n    this._captions = captions\n    this._time = time\n  }\n\n  get poster() {\n    return this._poster\n  }\n\n  get sources() {\n    return this._sources\n  }\n\n  get captions() {\n    return this._captions\n  }\n\n  get time() {\n    return this._time\n  }\n\n  set time(time) {\n    this._time = time\n  }\n}\n\nexport default Video\n","import React, { Component } from 'react'\n\nclass PlyrCaption extends Component {\n  render() {\n    return (\n      <track\n        kind='captions'\n        label={this.props.caption.label}\n        src={this.props.caption.src}\n        srcLang={this.props.caption.srclang || 'en'}\n        default={this.props.key === 0} />\n    )\n  }\n}\n\nexport default PlyrCaption\n","import React, { Component } from 'react'\n\nclass PlyrContinue extends Component {\n  continueWatching() {\n    document.querySelector('button#continue').style.display = 'none'\n    this.props.parent.player.play()\n    this.props.parent.player.currentTime = this.props.parent.props.video.time\n  }\n\n  render() {\n    if (this.props.parent.props.video.time === 0) {\n      return null\n    }\n\n    return (\n      <button\n        id='continue'\n        onClick={this.continueWatching.bind(this)}>\n        Continue watching\n      </button>\n    )\n  }\n}\n\nexport default PlyrContinue\n","import React, { Component } from 'react'\n\nclass PlyrSource extends Component {\n  render() {\n    return (\n      <source\n        src={this.props.source.src}\n        type={this.props.source.type}\n        size={this.props.source.size} />\n    )\n  }\n}\n\nexport default PlyrSource\n","import React, { Component } from 'react'\nimport Plyr from 'plyr'\nimport './PlyrPlayer.scss'\n\nimport PlyrCaption from './PlyrPlayer/PlyrCaption'\nimport PlyrContinue from './PlyrPlayer/PlyrContinue'\nimport PlyrSource from './PlyrPlayer/PlyrSource'\n\nclass PlyrPlayer extends Component {\n  componentDidMount() {\n    this.player = new Plyr('#player', {\n      debug: process.env.NODE_ENV === 'development'\n    })\n    this.player.on('play', () => {\n      if (document.querySelector('button#continue')) {\n        document.querySelector('button#continue').style.display = 'none'\n      }\n    })\n    this.player.on('timeupdate', event => {\n      if (event.detail.plyr.currentTime !== 0) {\n        this.props.video.time = event.detail.plyr.currentTime\n      }\n    })\n  }\n\n  render() {\n    if (this.props.video.sources.length === 0) {\n      return null\n    }\n\n    return (\n      <div className='PlyrPlayer'>\n        <video\n          poster={this.props.video.poster}\n          src={this.props.video.sources[0].src}\n          id='player' crossOrigin='true' playsInline controls>\n          {this.props.video.sources.map((source, index) => {\n            return (<PlyrSource source={source} key={index} />)\n          })}\n          {this.props.video.captions.map((caption, index) => {\n            return (<PlyrCaption caption={caption} key={index} />)\n          })}\n          <a href={this.props.video.sources[0].src} download>Download</a>\n        </video>\n        <PlyrContinue parent={this} />\n      </div>\n    )\n  }\n}\n\nexport default PlyrPlayer\n","import React, { Component } from 'react'\n// import './Movie.scss'\n\nimport Caption from '../../models/Caption'\nimport { default as MovieModel } from '../../models/Movie'\nimport Source from '../../models/Source'\nimport Video from '../../models/Video'\n\nimport PlyrPlayer from '../../components/PlyrPlayer'\n\nclass Movie extends Component {\n  render({ match }) {\n    const video = new Video(\n      'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg',\n      [\n        new Source('https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-576p.mp4', 'video/mp4', 576),\n        new Source('https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-720p.mp4', 'video/mp4', 720),\n        new Source('https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-1080p.mp4', 'video/mp4', 1080)\n      ],\n      [\n        new Caption('English', 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt', 'en'),\n        new Caption('Français', 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', 'fr')\n      ]\n    )\n    // const movie = new MovieModel(299537, video).fetch()\n    const movie = new MovieModel(match.params.id, video).fetch()\n    console.log(movie)\n\n    return (\n      <div className=\"Movie\">\n        <PlyrPlayer video={video} />\n      </div>\n    )\n  }\n}\n\nexport default Movie\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n// import './Movies.scss'\n\nimport Movie from './Movies/Movie'\n\nclass Movies extends Component {\n  render({ match }) {\n    return (\n      <div className='Movies'>\n        <Route path={`${match.path}/:id`} component={Movie}/>\n        <Route\n          exact\n          path={match.path}\n          render={() => <h3>Please select a movie.</h3>} />\n      </div>\n    )\n  }\n}\n\nexport default Movies\n","import React, { Component } from 'react'\n// import './Shows.scss'\n\nclass Shows extends Component {\n  render() {\n    return (\n      <div className='Shows'>\n      </div>\n    )\n  }\n}\n\nexport default Shows\n","import React, { Component } from 'react'\n// import './Find.scss'\n\nclass Find extends Component {\n  render() {\n    return (\n      <div className='Find'>\n      </div>\n    )\n  }\n}\n\nexport default Find\n","import React, { Component } from 'react'\n// import './Welcome.scss'\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <div className='Welcome'>\n      </div>\n    )\n  }\n}\n\nexport default Welcome\n","import React, { Component } from 'react'\n// import './NotFound.scss'\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className='NotFound'>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\n// import logo from './logo.svg'\n// import './App.scss'\n\nimport { logIn } from './actions/auth'\nimport { index } from './actions/indexing'\n\nimport MicrosoftAuth from './services/auth/MicrosoftAuth'\n\nimport ForYou from './scenes/ForYou'\nimport Movies from './scenes/Movies'\nimport Shows from './scenes/Shows'\nimport Find from './scenes/Find'\nimport Welcome from './scenes/Welcome'\nimport NotFound from './scenes/NotFound'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    // this required for the login popup to close (https://github.com/AzureAD/microsoft-authentication-library-for-js/issues/174)\n    new MicrosoftAuth()\n  }\n\n  render() {\n    if (this.props.user) {\n      return (\n        <div className='App'>\n          <button onClick={this.props.index}>Index</button>\n\n          <Router>\n            <Switch>\n              <Route path='/' exact component={ForYou} />\n              <Route path='/movies' component={Movies} />\n              <Route path='/shows' component={Shows} />\n              <Route path='/find' component={Find} />\n              <Route component={NotFound} />\n            </Switch>\n          </Router>\n        </div>\n      )\n    } else {\n      return (\n        <div className='App'>\n          <button onClick={this.props.logIn}>Launch</button>\n\n          <Router>\n            <Switch>\n              <Route path='/' exact component={Welcome} />\n              <Route component={NotFound} />\n            </Switch>\n          </Router>\n        </div>\n      )\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    user: state.auth.user\n  }),\n  { logIn, index }\n)(App)\n","import React, { Component } from 'react'\n// import './Loading.scss'\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className='Loading'>\n      </div>\n    )\n  }\n}\n\nexport default Loading\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport { persistStore } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './App'\nimport Loading from './components/Loading'\n\nimport './index.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loading />} persistor={persistStore(store)}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}
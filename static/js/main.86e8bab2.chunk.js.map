{"version":3,"sources":["constants.js","services/auth/MicrosoftAuth.js","services/drives/OneDrive.js","services/indexing/IndexFiles.js","services/indexing/IndexMovies.js","services/indexing/IndexShows.js","services/indexing/IndexSeasons.js","services/indexing/IndexEpisodes.js","services/databases/TMDb.js","services/fetching/FetchAllSeasons.js","services/fetching/FetchAllEpisodes.js","actions/loading.js","services/Parametrize.js","services/fetching/FetchMovie.js","actions/movies.js","services/fetching/FetchShow.js","actions/shows.js","services/fetching/FetchSeason.js","selectors/shows.js","actions/seasons.js","services/fetching/FetchEpisode.js","selectors/seasons.js","actions/episodes.js","actions/indexing.js","actions/version.js","actions/auth.js","reducers/auth.js","reducers/settings.js","reducers/indexing.js","reducers/episodes.js","reducers/index.js","reducers/version.js","actions/settings.js","reducers/loading.js","reducers/movies.js","reducers/shows.js","reducers/seasons.js","store.js","serviceWorker.js","services/AutomaticIndexing.js","services/IndexAfterUpdate.js","components/Cover.js","components/HorizontalSlide.js","selectors/movies.js","scenes/ForYou.js","components/ItemGrid.js","components/VerticalSlide.js","components/Nucleo/icons/zoom.jsx","scenes/Movies.js","scenes/NotFound.js","components/Backdrop.js","components/PersonList.js","components/PlyrPlayer/PlyrCaption.js","components/PlyrPlayer/PlyrSource.js","components/PlyrPlayer.js","scenes/Movie.js","scenes/Shows.js","scenes/Show.js","selectors/episodes.js","scenes/Season.js","selectors/people.js","scenes/Person.js","components/Nucleo/icons/add.jsx","components/Nucleo/icons/dropbox.jsx","components/Nucleo/icons/google.jsx","components/Nucleo/icons/microsoft.jsx","components/Banner.js","selectors/auth.js","scenes/Settings.js","scenes/Find.js","components/Nucleo/icons/soundWave.jsx","scenes/Loading.js","components/Nucleo/icons/popcorn.jsx","components/Nucleo/icons/movie.jsx","components/Nucleo/icons/show.jsx","components/Nucleo/icons/gear.jsx","components/Nav.js","App.js","scenes/Welcome.js","components/ScrollToTop.js","index.js"],"names":["AUTOMATIC_INDEXING","PROVIDERS","MICROSOFT","STORAGE_PROVIDERS","ITEM_TYPES","FILE_TYPES","SOURCE","CAPTION","SOURCE_EXTENSIONS","CAPTION_EXTENSIONS","MicrosoftAuth","this","_userAgentApplication","UserAgentApplication","auth","clientId","config","clientID","silentLogIn","userAgentApplication","acquireTokenSilent","scopes","then","response","accessToken","catch","error","console","log","popupLogIn","loginPopup","prompt","process","OneDrive","_client","Client","init","authProvider","done","client","api","get","itemId","IndexFiles","oneDrive","folderId","_oneDrive","_folderId","children","value","map","item","index","filter","source","type","fileType","name","file","provider","id","extension","fileExtension","information","fileInformation","mimeType","url","fileName","includes","split","pop","shift","IndexMovies","Promise","movies","movie","all","folder","perform","files","providerId","IndexShows","shows","show","IndexSeasons","seasons","_shows","_seasons","concat","performForShow","season","showId","find","Number","parseInt","IndexEpisodes","episodes","_episodes","performForSeason","handleResponse","episode","seasonId","rp","require","TMDb","query","rateLimiting","uri","base_uri","qs","results","length","seasonNumber","episodeNumber","resolve","setTimeout","api_key","language","headers","json","FetchAllSeasons","_tmdb","tmdb","season_number","FetchAllEpisodes","episode_number","loadingBegin","caption","payload","Parametrize","string","_string","toLowerCase","replace","FetchMovie","_movie","findMovie","fetch","path","fetchDetails","fetchCredits","backdropUrl","backdrop_path","overview","posterUrl","poster_path","releaseDate","release_date","runtime","title","trailerLink","movieCredits","cast","castMember","character","gender","profileUrl","profile_path","crew","crewMember","job","fetchMovie","dispatch","fetchedMovie","updateMovie","removeMovie","FetchShow","_show","findShow","firstAirDate","first_air_date","lastAirDate","last_air_date","fetchShow","fetchedShow","updateShow","removeShow","FetchSeason","showName","_season","airDate","air_date","seasonCredits","showsSelector","state","showSelector","createSelector","fetchSeason","getState","fetchedSeason","updateSeason","removeSeason","FetchEpisode","seasonName","_episode","seasonsSelector","seasonSelector","inProgressSeasonsSelector","Object","values","undefined","progress","sort","a","b","lastWatched","recentlyWatchedSeasonsSelector","date","getTime","seasonsByShowSelector","toString","seasonsByPersonSelector","seasonsCastMemberSelector","flat","seasonsCrewMemberSelector","fetchEpisode","fetchedEpisode","updateEpisode","removeEpisode","indexBegin","token","cleanupOldItems","keys","awaitFetching","version","updateVersion","indexSuccess","indexFailure","statusCode","logInExpired","newIds","oldIds","removeAction","forEach","items","fetchAction","logInFailure","logInBegin","logInSuccess","initialState","reduce","o","automaticIndexing","lastIndexed","rootReducer","combineReducers","action","settings","indexing","Date","loading","newState","persistReducer","key","storage","whitelist","debug","createStore","persistedReducer","applyMiddleware","thunk","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","newVersionAvailable","onUpdate","onSuccess","AutomaticIndexing","setting","indexAction","_setting","_lastIndexed","_indexAction","getFullYear","getMonth","getDate","IndexAfterUpdate","versionUsedForLastIndex","_versionUsedForLastIndex","Cover","className","src","props","alt","width","Component","HorizontalSlide","Swiper","document","querySelector","spaceBetween","slidesPerView","slidesOffsetBefore","slidesOffsetAfter","grabCursor","to","moviesSelector","movieSelector","inProgressMoviesSelector","recentlyWatchedMoviesSelector","moviesByPersonSelector","moviesCastMemberSelector","moviesCrewMemberSelector","ForYou","oneMonthAgo","setMonth","inProgress","recentlyWatched","classList","add","remove","entries","href","target","rel","onClick","connect","ItemGrid","VerticalSlide","direction","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","history","replaceState","data-history","height","viewBox","xmlns","fill","stroke","strokeLinecap","strokeWidth","x1","x2","y1","y2","cx","cy","r","Movies","innerWidth","NotFound","Backdrop","PersonList","wrapped","setState","people","slice","person","attribute","toggle","bind","PlyrCaption","kind","label","srcLang","ISO6391","getCode","default","PlyrSource","size","PlyrPlayer","player","Plyr","on","event","detail","plyr","currentTime","updateItemAction","component","dataset","preventExit","stop","style","display","exitedAction","fullscreen","exit","endedAction","crossOrigin","playsInline","controls","download","Movie","params","watch","enter","play","finishedMovie","Math","floor","continue","Shows","Show","episodesSelector","episodesBySeasonSelector","Season","watchableEpisodes","episodesWrapped","currentEpisodeNumber","stoppedEpisode","finishedEpisode","disabled","toDateString","toggleEpisodes","personSelector","moviesCast","moviesCrew","seasonsCast","seasonsCrew","personRolesSelector","Set","role","Person","roles","join","points","d","x","y","Banner","text","linkUrl","linkText","authSelector","authTokenSelector","authProviderSelector","authError","some","Settings","notAuthenticated","authenticationExpired","noMediaFound","updateSettings","authenticateMicrosoft","onChange","handleAutomaticIndexingChange","Find","moviesIndex","FlexSearch","showsIndex","URLSearchParams","search","result","autoFocus","placeholder","handleInputChange","strokeMiterlimit","strokeLinejoin","data-made-with","Loading","Nav","App","exact","Welcome","ScrollToTop","prevProps","scrollTo","withRouter","ReactDOM","render","store","persistor","persistStore","basename","getElementById","URL","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.86e8bab2.chunk.js","sourcesContent":["export const VERSION = '0.0.1'\n\nexport const AUTOMATIC_INDEXING = {\n  NEVER: 'never',\n  MONTHLY: 'monthly',\n  DAILY: 'daily',\n  ALWAYS: 'always'\n}\n\nexport const PROVIDERS = {\n  MICROSOFT: 'microsoft'\n}\n\nexport const STORAGE_PROVIDERS = {\n  [PROVIDERS.MICROSOFT]: 'OneDrive'\n}\n\nexport const ITEM_TYPES = {\n  MOVIE: 'movie',\n  SHOW: 'show',\n  SEASON: 'season',\n  EPISODE: 'episode'\n}\n\nexport const FILE_TYPES = {\n  SOURCE: 'source',\n  CAPTION: 'caption'\n}\n\nexport const SOURCE_EXTENSIONS = ['mp4', 'm4v', 'mkv', 'webm']\nexport const CAPTION_EXTENSIONS = ['vtt']\n","import { UserAgentApplication } from 'msal'\n\nclass MicrosoftAuth {\n  static config = {\n    clientID: process.env.REACT_APP_MICROSOFT_CLIENT_ID,\n    scopes: ['user.read', 'files.read.all']\n  }\n\n  constructor() {\n    this._userAgentApplication = new UserAgentApplication({\n      auth: {\n        clientId: MicrosoftAuth.config.clientID\n      }\n    })\n  }\n\n  perform() {\n    return this.silentLogIn()\n  }\n\n  silentLogIn() {\n    return this.userAgentApplication.acquireTokenSilent({\n      scopes: MicrosoftAuth.config.scopes\n    }).then(response => {\n      return response.accessToken\n    }).catch(error => {\n      console.log(error)\n      return this.popupLogIn()\n    })\n  }\n\n  popupLogIn() {\n    return this.userAgentApplication.loginPopup({\n      scopes: MicrosoftAuth.config.scopes,\n      prompt: 'select_account'\n    }).then(() => {\n      return this.userAgentApplication.acquireTokenSilent({\n        scopes: MicrosoftAuth.config.scopes\n      })\n    }).then(response => {\n      return response.accessToken\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  get userAgentApplication() {\n    return this._userAgentApplication\n  }\n}\n\nexport default MicrosoftAuth\n","import { Client } from '@microsoft/microsoft-graph-client'\n\nclass OneDrive {\n  constructor(accessToken) {\n    this._client = Client.init({\n      authProvider: done => done(null, accessToken)\n    })\n  }\n\n  movies() {\n    return this.client.api('/me/drive/root:/Plaain/Movies:/children').get()\n  }\n\n  shows() {\n    return this.client.api('/me/drive/root:/Plaain/Shows:/children').get()\n  }\n\n  children(itemId) {\n    return this.client.api(`/me/drive/items/${itemId}/children`).get()\n  }\n\n  get client() {\n    return this._client\n  }\n}\n\nexport default OneDrive\n","import {\n  PROVIDERS,\n  FILE_TYPES,\n  SOURCE_EXTENSIONS,\n  CAPTION_EXTENSIONS\n} from '../../constants'\n\nclass IndexFiles {\n  constructor(oneDrive, folderId) {\n    this._oneDrive = oneDrive\n    this._folderId = folderId\n  }\n\n  perform() {\n    return this.oneDrive.children(this.folderId).then(response => {\n      return response.value.map(item => this.index(item))\n        .filter(source => source != null)\n    })\n  }\n\n  index(item) {\n    const type = IndexFiles.fileType(item.name)\n    if (item.file == null || type == null) {\n      return null\n    }\n\n    return {\n      provider: PROVIDERS.MICROSOFT,\n      id: item.id,\n      type: type,\n      name: item.name,\n      extension: IndexFiles.fileExtension(item.name),\n      information: IndexFiles.fileInformation(item.name),\n      mimeType: item.file.mimeType,\n      url: item['@microsoft.graph.downloadUrl']\n    }\n  }\n\n  static fileType(fileName) {\n    if (SOURCE_EXTENSIONS.includes(IndexFiles.fileExtension(fileName))) {\n      return FILE_TYPES.SOURCE\n    } else if (\n      CAPTION_EXTENSIONS.includes(IndexFiles.fileExtension(fileName))\n    ) {\n      return FILE_TYPES.CAPTION\n    } else {\n      return null\n    }\n  }\n\n  static fileExtension(fileName) {\n    return fileName.split('.').pop()\n  }\n\n  static fileInformation(fileName) {\n    return fileName.split('.').shift()\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get folderId() {\n    return this._folderId\n  }\n}\n\nexport default IndexFiles\n","import { PROVIDERS, ITEM_TYPES } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nimport IndexFiles from './IndexFiles'\n\nclass IndexMovies {\n  constructor(accessToken) {\n    this._oneDrive = new OneDrive(accessToken)\n  }\n\n  async perform() {\n    return await Promise.all(await this.oneDrive.movies().then(response => {\n      return response.value.map(item => this.index(item))\n    })).then(movies => movies.filter(movie => movie !== null))\n  }\n\n  async index(item) {\n    if (item.folder == null) {\n      return null\n    }\n\n    const files = await new IndexFiles(this.oneDrive, item.id).perform()\n\n    return {\n      provider: PROVIDERS.MICROSOFT,\n      type: ITEM_TYPES.MOVIE,\n      providerId: item.id,\n      name: item.name,\n      files: files\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n}\n\nexport default IndexMovies\n","import { PROVIDERS, ITEM_TYPES } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nclass IndexShows {\n  constructor(accessToken) {\n    this._oneDrive = new OneDrive(accessToken)\n  }\n\n  async perform() {\n    return await Promise.all(await this.oneDrive.shows().then(response => {\n      return response.value.map(item => this.index(item))\n    })).then(shows => shows.filter(show => show !== null))\n  }\n\n  async index(item) {\n    if (item.folder == null) {\n      return null\n    }\n\n    return {\n      provider: PROVIDERS.MICROSOFT,\n      type: ITEM_TYPES.SHOW,\n      providerId: item.id,\n      name: item.name\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n}\n\nexport default IndexShows\n","import { PROVIDERS } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nclass IndexSeasons {\n  constructor(accessToken, shows, seasons) {\n    this._oneDrive = new OneDrive(accessToken)\n    this._shows = shows\n    this._seasons = seasons\n  }\n\n  async perform() {\n    return [].concat(...await Promise.all(\n      this.shows.map(show => this.performForShow(show, this.seasons))\n    ))\n  }\n\n  async performForShow(show, seasons) {\n    return await this.oneDrive.children(show.providerId).then(response => {\n      return seasons.filter(season => season.showId === show.id).map(season => {\n        const item = response.value.find(item => {\n          return season.id === `${show.id}-${Number.parseInt(item.name)}`\n        })\n\n        if (item) {\n          return {\n            ...season,\n            provider: PROVIDERS.MICROSOFT,\n            providerId: item.id\n          }\n        } else {\n          return season\n        }\n      })\n    })\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get shows() {\n    return this._shows\n  }\n\n  get seasons() {\n    return this._seasons\n  }\n}\n\nexport default IndexSeasons\n","import { PROVIDERS } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nimport IndexFiles from './IndexFiles'\n\nclass IndexEpisodes {\n  constructor(accessToken, seasons, episodes) {\n    this._oneDrive = new OneDrive(accessToken)\n    this._seasons = seasons\n    this._episodes = episodes\n  }\n\n  async perform() {\n    return [].concat(...await Promise.all(\n      this.seasons.map(season => this.performForSeason(season, this.episodes))\n    ))\n  }\n\n  async performForSeason(season, episodes) {\n    if (season.providerId) {\n      return await this.oneDrive.children(season.providerId)\n        .then(response => this.handleResponse(response, season, episodes))\n    } else {\n      return episodes.filter(episode => episode.seasonId === season.id)\n    }\n  }\n\n  async handleResponse(response, season, episodes) {\n    return await Promise.all(\n      episodes.filter(episode => episode.seasonId === season.id)\n        .map(episode => {\n          return this.index(\n            episode,\n            response.value.find(item => {\n              return episode.id === `${season.id}-${Number.parseInt(item.name)}`\n            })\n          )\n        })\n    )\n  }\n\n  async index(episode, item) {\n    if (item) {\n      const files = await new IndexFiles(this.oneDrive, item.id).perform()\n      return {\n        ...episode,\n        provider: PROVIDERS.MICROSOFT,\n        providerId: item.id,\n        files: files\n      }\n    } else {\n      return episode\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get seasons() {\n    return this._seasons\n  }\n\n  get episodes() {\n    return this._episodes\n  }\n}\n\nexport default IndexEpisodes\n","const rp = require('request-promise')\n\nclass TMDb {\n  static config = {\n    qs: {\n      api_key: process.env.REACT_APP_TMDB_API_KEY,\n      language: 'en-US'\n    },\n    headers: {\n      'User-Agent': 'Request-Promise'\n    },\n    json: true\n  }\n\n  static base_uri = 'https://api.themoviedb.org/3'\n\n  async findMovie(query) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/search/movie`,\n      qs: {...TMDb.config.qs, query}\n    }).then(response => {\n      if (response.results.length < 1) {\n        return null\n      }\n\n      return response.results[0].id\n    })\n  }\n\n  async findShow(query) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/search/tv`,\n      qs: {...TMDb.config.qs, query}\n    }).then(response => {\n      if (response.results.length < 1) {\n        return null\n      }\n\n      return response.results[0].id\n    })\n  }\n\n  async movie(id) {\n    await TMDb.rateLimiting()\n    return rp({...TMDb.config, uri: `${TMDb.base_uri}/movie/${id}`})\n  }\n\n  async movieCredits(id) {\n    await TMDb.rateLimiting()\n    return rp({...TMDb.config, uri: `${TMDb.base_uri}/movie/${id}/credits`})\n  }\n\n  async show(id) {\n    await TMDb.rateLimiting()\n    return rp({...TMDb.config, uri: `${TMDb.base_uri}/tv/${id}`})\n  }\n\n  async season(showId, seasonNumber) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/tv/${showId}/season/${seasonNumber}`\n    })\n  }\n\n  async seasonCredits(showId, seasonNumber) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/tv/${showId}/season/${seasonNumber}/credits`\n    })\n  }\n\n  async episode(showId, seasonNumber, episodeNumber) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/tv/${showId}/season/${seasonNumber}/episode` +\n           `/${episodeNumber}`\n    })\n  }\n\n  // TMDb only allows for up to 4 requests per second:\n  // https://developers.themoviedb.org/3/getting-started/request-rate-limiting\n  static async rateLimiting() {\n    await new Promise(resolve => setTimeout(resolve, 250))\n  }\n}\n\nexport default TMDb\n","import { ITEM_TYPES } from '../../constants'\n\nimport TMDb from '../databases/TMDb'\n\nclass FetchAllSeasons {\n  constructor(shows) {\n    this._shows = shows\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    return [].concat(...await Promise.all(\n      this.shows.map(show => {\n        return this.tmdb.show(show.id).then(response => {\n          return response.seasons.map(season => ({\n            id: `${show.id}-${season.season_number}`,\n            type: ITEM_TYPES.SEASON,\n            seasonNumber: season.season_number,\n            showId: show.id,\n            providerId: null\n          }))\n        })\n      })\n    ))\n  }\n\n  get shows() {\n    return this._shows\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchAllSeasons\n","import { ITEM_TYPES } from '../../constants'\n\nimport TMDb from '../databases/TMDb'\n\nclass FetchAllEpisodes {\n  constructor(seasons) {\n    this._seasons = seasons\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    return [].concat(...await Promise.all(\n      this.seasons.map(season => {\n        return this.tmdb.season(season.showId, season.seasonNumber)\n          .then(response => {\n            return response.episodes.map(episode => ({\n              id: `${season.id}-${episode.episode_number}`,\n              type: ITEM_TYPES.EPISODE,\n              episodeNumber: episode.episode_number,\n              seasonId: season.id,\n              providerId: null\n            }))\n          })\n      })\n    ))\n  }\n\n  get seasons() {\n    return this._seasons\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchAllEpisodes\n","export const LOADING_BEGIN = 'LOADING_BEGIN'\nexport const LOADING_STOP = 'LOADING_STOP'\n\nexport const loadingBegin = caption => ({\n  type: LOADING_BEGIN,\n  payload: caption\n})\n\nexport const loadingStop = () => ({\n  type: LOADING_STOP\n})\n","class Parametrize {\n  constructor(string) {\n    this._string = string\n  }\n\n  perform() {\n    return this.string.toLowerCase().replace(/\\s/g, '+')\n  }\n\n  get string() {\n    return this._string\n  }\n}\n\nexport default Parametrize\n","import TMDb from '../databases/TMDb'\nimport Parametrize from '../Parametrize'\n\nclass FetchMovie {\n  constructor(movie) {\n    this._movie = movie\n    this._tmdb = new TMDb()\n  }\n\n  perform() {\n    return this.tmdb.findMovie(this.movie.name)\n      .then(id => this.fetch(id))\n  }\n\n  async fetch(id) {\n    this.movie.id = id\n    this.movie.path = `/app/movie/${this.movie.id}`\n\n    if (this.movie.id === null) {\n      return\n    }\n\n    await Promise.all([\n      this.fetchDetails(),\n      this.fetchCredits()\n    ])\n\n    return this.movie\n  }\n\n  fetchDetails() {\n    return this.tmdb.movie(this.movie.id)\n      .then(response => {\n        this.movie.backdropUrl =\n          `https://image.tmdb.org/t/p/original${response.backdrop_path}`\n        this.movie.overview = response.overview\n        this.movie.posterUrl =\n          `https://image.tmdb.org/t/p/original${response.poster_path}`\n        this.movie.releaseDate = response.release_date\n        this.movie.runtime = response.runtime\n        this.movie.name = response.title\n        this.movie.trailerLink =\n          'https://www.youtube.com/results?search_query=' +\n          `${new Parametrize(this.movie.name).perform()}+official+trailer`\n      })\n  }\n\n  fetchCredits() {\n    return this.tmdb.movieCredits(this.movie.id)\n      .then(response => {\n        this.movie.cast = response.cast.map(castMember => ({\n          id: castMember.id,\n          character: castMember.character,\n          name: castMember.name,\n          gender: castMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${castMember.profile_path}`\n        }))\n        this.movie.crew = response.crew.map(crewMember => ({\n          id: crewMember.id,\n          job: crewMember.job,\n          name: crewMember.name,\n          gender: crewMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${crewMember.profile_path}`\n        }))\n      })\n  }\n\n  get movie() {\n    return this._movie\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchMovie\n","import FetchMovie from '../services/fetching/FetchMovie'\n\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE'\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE'\n\nexport const fetchMovie = movie => {\n  return dispatch => {\n    return new FetchMovie(movie).perform().then(fetchedMovie => {\n      dispatch(updateMovie(fetchedMovie))\n    }).catch(() => dispatch(fetchMovie(movie)))\n  }\n}\n\nexport const removeMovie = id => ({\n  type: REMOVE_MOVIE,\n  payload: id\n})\n\nexport const updateMovie = movie => ({\n  type: UPDATE_MOVIE,\n  payload: movie\n})\n","import TMDb from '../databases/TMDb'\n\nclass FetchShow {\n  constructor(show) {\n    this._show = show\n    this._tmdb = new TMDb()\n  }\n\n  perform() {\n    return this.tmdb.findShow(this.show.name).then(id => this.fetch(id))\n  }\n\n  async fetch(id) {\n    this.show.id = id\n    this.show.path = `/app/show/${this.show.id}`\n\n    if (this.show.id === null) {\n      return\n    }\n\n    await Promise.all([\n      this.fetchDetails()\n    ])\n\n    return this.show\n  }\n\n  fetchDetails() {\n    return this.tmdb.show(this.show.id)\n      .then(response => {\n        this.show.backdropUrl =\n          `https://image.tmdb.org/t/p/original${response.backdrop_path}`\n        this.show.firstAirDate = response.first_air_date\n        this.show.lastAirDate = response.last_air_date\n        this.show.name = response.name\n        this.show.overview = response.overview\n        this.show.posterUrl =\n          `https://image.tmdb.org/t/p/original${response.poster_path}`\n      })\n  }\n\n  get show() {\n    return this._show\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchShow\n","import FetchShow from '../services/fetching/FetchShow'\n\nexport const REMOVE_SHOW = 'REMOVE_SHOW'\nexport const UPDATE_SHOW = 'UPDATE_SHOW'\n\nexport const fetchShow = show => {\n  return dispatch => {\n    return new FetchShow(show).perform().then(fetchedShow => {\n      dispatch(updateShow(fetchedShow))\n    }).catch(() => dispatch(fetchShow(show)))\n  }\n}\n\nexport const removeShow = id => ({\n  type: REMOVE_SHOW,\n  payload: id\n})\n\nexport const updateShow = show => ({\n  type: UPDATE_SHOW,\n  payload: show\n})\n","import TMDb from '../databases/TMDb'\nimport Parametrize from '../Parametrize'\n\nclass FetchSeason {\n  constructor(showId, showName, season) {\n    this._show = { id: showId, name: showName }\n    this._season = season\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    this.season.id = `${this.show.id}-${this.season.seasonNumber}`\n    this.season.path = `/app/season/${this.season.id}`\n\n    await Promise.all([\n      this.fetchDetails(),\n      this.fetchCredits()\n    ])\n\n    return this.season\n  }\n\n  fetchDetails() {\n    return this.tmdb.season(this.show.id, this.season.seasonNumber)\n      .then(response => {\n        this.season.airDate = response.air_date\n        this.season.name = response.name\n        this.season.overview = response.overview\n        this.season.posterUrl =\n          `https://image.tmdb.org/t/p/original${response.poster_path}`\n        this.season.trailerLink =\n          'https://www.youtube.com/results?search_query=' +\n          `${new Parametrize(this.show.name).perform()}+` +\n          `${new Parametrize(this.season.name).perform()}+` +\n          'official+trailer&i=movies-tv'\n      })\n  }\n\n  fetchCredits() {\n    return this.tmdb.seasonCredits(this.show.id, this.season.seasonNumber)\n      .then(response => {\n        this.season.cast = response.cast.map(castMember => ({\n          id: castMember.id,\n          character: castMember.character,\n          name: castMember.name,\n          gender: castMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${castMember.profile_path}`\n        }))\n        this.season.crew = response.crew.map(crewMember => ({\n          id: crewMember.id,\n          job: crewMember.job,\n          name: crewMember.name,\n          gender: crewMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${crewMember.profile_path}`\n        }))\n      })\n  }\n\n  get show() {\n    return this._show\n  }\n\n  get season() {\n    return this._season\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchSeason\n","import { createSelector } from 'reselect'\n\nconst showsSelector = state => state.shows\n\nexport const showSelector = id => {\n  return createSelector(\n    showsSelector,\n    shows => shows[id]\n  )\n}\n","import FetchSeason from '../services/fetching/FetchSeason'\n\nimport { showSelector } from '../selectors/shows'\n\nexport const REMOVE_SEASON = 'REMOVE_SEASON'\nexport const UPDATE_SEASON = 'UPDATE_SEASON'\n\nexport const fetchSeason = season => {\n  return (dispatch, getState) => {\n    const show = showSelector(season.showId)(getState())\n    return new FetchSeason(\n      show.id,\n      show.name,\n      season\n    ).perform().then(fetchedSeason => {\n      dispatch(updateSeason(fetchedSeason))\n    }).catch(() => dispatch(fetchSeason(season)))\n  }\n}\n\nexport const removeSeason = id => ({\n  type: REMOVE_SEASON,\n  payload: id\n})\n\nexport const updateSeason = season => ({\n  type: UPDATE_SEASON,\n  payload: season\n})\n","import TMDb from '../databases/TMDb'\n\nclass FetchEpisode {\n  constructor(\n    showId,\n    showName,\n    seasonNumber,\n    seasonName,\n    episode\n  ) {\n    this._show = { id: showId, name: showName }\n    this._season = { seasonNumber, name: seasonName }\n    this._episode = episode\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    this.episode.id =\n      `${this.show.id}-${this.season.seasonNumber}-` +\n      `${this.episode.episodeNumber}`\n\n    await Promise.all([\n      this.fetchDetails()\n    ])\n\n    return this.episode\n  }\n\n  fetchDetails() {\n    return this.tmdb.episode(\n      this.show.id, this.season.seasonNumber, this.episode.episodeNumber\n    ).then(response => {\n      this.episode.airDate = response.air_date\n      this.episode.name = response.name\n      this.episode.overview = response.overview\n    })\n  }\n\n  get show() {\n    return this._show\n  }\n\n  get season() {\n    return this._season\n  }\n\n  get episode() {\n    return this._episode\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchEpisode\n","import { createSelector } from 'reselect'\n\nconst seasonsSelector = state => state.seasons\n\nexport const seasonSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => seasons[id]\n  )\n}\n\nexport const inProgressSeasonsSelector = () => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).filter(season => {\n        return season.progress !== undefined && season.progress !== 0\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const recentlyWatchedSeasonsSelector = date => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).filter(season => {\n        return season.lastWatched >= date.getTime() &&\n          (season.progress === undefined || season.progress === 0)\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const seasonsByShowSelector = showId => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons)\n        .filter(season => season.showId.toString() === showId)\n    }\n  )\n}\n\nexport const seasonsByPersonSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).filter(season => {\n        return season.cast.find(castMember => castMember.id === id) ||\n          season.crew.find(crewMember => crewMember.id === id)\n      })\n    }\n  )\n}\n\nexport const seasonsCastMemberSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).map(season => season.cast).flat()\n        .filter(castMember => castMember.id === id)\n    }\n  )\n}\n\nexport const seasonsCrewMemberSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).map(season => season.crew).flat()\n        .filter(crewMember => crewMember.id === id)\n    }\n  )\n}\n","import FetchEpisode from '../services/fetching/FetchEpisode'\n\nimport { seasonSelector } from '../selectors/seasons'\nimport { showSelector } from '../selectors/shows'\n\nexport const REMOVE_EPISODE = 'REMOVE_EPISODE'\nexport const UPDATE_EPISODE = 'UPDATE_EPISODE'\n\nexport const fetchEpisode = episode => {\n  return (dispatch, getState) => {\n    const season = seasonSelector(episode.seasonId)(getState())\n    const show = showSelector(season.showId)(getState())\n    return new FetchEpisode(\n      show.id,\n      show.name,\n      season.seasonNumber,\n      season.name,\n      episode\n    ).perform().then(fetchedEpisode => {\n      dispatch(updateEpisode(fetchedEpisode))\n    }).catch(() => dispatch(fetchEpisode(episode)))\n  }\n}\n\nexport const removeEpisode = id => ({\n  type: REMOVE_EPISODE,\n  payload: id\n})\n\nexport const updateEpisode = episode => ({\n  type: UPDATE_EPISODE,\n  payload: episode\n})\n","import { VERSION, PROVIDERS } from '../constants'\n\nimport IndexMovies from '../services/indexing/IndexMovies'\nimport IndexShows from '../services/indexing/IndexShows'\nimport IndexSeasons from '../services/indexing/IndexSeasons'\nimport IndexEpisodes from '../services/indexing/IndexEpisodes'\nimport FetchAllSeasons from '../services/fetching/FetchAllSeasons'\nimport FetchAllEpisodes from '../services/fetching/FetchAllEpisodes'\n\nimport { updateVersion } from './version'\nimport { logInExpired } from './auth'\nimport { loadingBegin, loadingStop } from './loading'\nimport { fetchMovie, removeMovie } from './movies'\nimport { fetchShow, removeShow } from './shows'\nimport { fetchSeason, removeSeason } from './seasons'\nimport { fetchEpisode, removeEpisode } from './episodes'\n\nexport const INDEX_BEGIN = 'INDEX_BEGIN'\nexport const INDEX_SUCCESS = 'INDEX_SUCCESS'\nexport const INDEX_FAILURE = 'INDEX_FAILURE'\n\nexport const index = () => {\n  return (dispatch, getState) => {\n    dispatch(loadingBegin('Indexing...'))\n    dispatch(indexBegin())\n\n    new IndexMovies(getState().auth[PROVIDERS.MICROSOFT].token).perform()\n      .then(movies => {\n        cleanupOldItems(\n          dispatch,\n          movies.map(movie => movie.id),\n          Object.keys(getState().movies),\n          removeMovie\n        )\n        return awaitFetching(dispatch, movies, fetchMovie)\n      }).then(() => {\n        return new IndexShows(\n          getState().auth[PROVIDERS.MICROSOFT].token\n        ).perform()\n      }).then(shows => {\n        cleanupOldItems(\n          dispatch,\n          shows.map(show => show.id),\n          Object.keys(getState().shows),\n          removeShow\n        )\n        return awaitFetching(dispatch, shows, fetchShow)\n      }).then(() => {\n        return new FetchAllSeasons(Object.values(getState().shows)).perform()\n      }).then(seasons => {\n        return new IndexSeasons(\n          getState().auth[PROVIDERS.MICROSOFT].token,\n          Object.values(getState().shows),\n          seasons\n        ).perform()\n      }).then(seasons => {\n        cleanupOldItems(\n          dispatch,\n          seasons.map(season => season.id),\n          Object.keys(getState().seasons),\n          removeSeason\n        )\n        return awaitFetching(dispatch, seasons, fetchSeason)\n      }).then(() => {\n        return new FetchAllEpisodes(Object.values(getState().seasons)).perform()\n      }).then(episodes => {\n        return new IndexEpisodes(\n          getState().auth[PROVIDERS.MICROSOFT].token,\n          Object.values(getState().seasons),\n          episodes\n        ).perform()\n      }).then(episodes => {\n        cleanupOldItems(\n          dispatch,\n          episodes.map(episode => episode.id),\n          Object.keys(getState().episodes),\n          removeEpisode\n        )\n        return awaitFetching(dispatch, episodes, fetchEpisode)\n      }).then(() => {\n        dispatch(updateVersion(VERSION))\n        dispatch(indexSuccess())\n        dispatch(loadingStop())\n      }).catch(error => {\n        console.log(error)\n        dispatch(indexFailure(error))\n        dispatch(loadingStop())\n\n        if (error.statusCode === 401) {\n          dispatch(logInExpired(PROVIDERS.MICROSOFT))\n        }\n      })\n  }\n}\n\nfunction cleanupOldItems(dispatch, newIds, oldIds, removeAction) {\n  oldIds.forEach(id => {\n    if (!newIds.includes(id)) {\n      dispatch(removeAction(id))\n    }\n  })\n}\n\nasync function awaitFetching(dispatch, items, fetchAction) {\n  await Promise.all(items.map(item => {\n    return dispatch(fetchAction(item))\n  }))\n  return items\n}\n\nconst indexBegin = () => ({\n  type: INDEX_BEGIN\n})\n\nconst indexSuccess = () => ({\n  type: INDEX_SUCCESS\n})\n\nconst indexFailure = error => ({\n  type: INDEX_FAILURE,\n  payload: error\n})\n","export const UPDATE_VERSION = 'UPDATE_VERSION'\n\nexport const updateVersion = version => ({\n  type: UPDATE_VERSION,\n  payload: version\n})\n","import { PROVIDERS } from '../constants'\n\nimport MicrosoftAuth from '../services/auth/MicrosoftAuth'\n\nimport { index } from './indexing'\nimport { loadingBegin, loadingStop } from './loading'\n\nexport const LOG_IN_BEGIN = 'LOG_IN_BEGIN'\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\n\nexport const authenticateMicrosoft = () => {\n  return dispatch => {\n    dispatch(loadingBegin('Authenticating...'))\n    dispatch(logInBegin(PROVIDERS.MICROSOFT))\n\n    new MicrosoftAuth().perform().then(token => {\n      dispatch(logInSuccess(PROVIDERS.MICROSOFT, token))\n      dispatch(index())\n    }).catch(error => {\n      dispatch(logInFailure(PROVIDERS.MICROSOFT, error))\n      dispatch(loadingStop())\n    })\n  }\n}\n\nexport const logInExpired = provider => {\n  return dispatch => dispatch(logInFailure(provider, 'expired'))\n}\n\nconst logInBegin = provider => ({\n  type: LOG_IN_BEGIN,\n  payload: provider\n})\n\nconst logInSuccess = (provider, token) => ({\n  type: LOG_IN_SUCCESS,\n  payload: { provider, token }\n})\n\nconst logInFailure = (provider, error) => ({\n  type: LOG_IN_FAILURE,\n  payload: { provider, error }\n})\n","import { PROVIDERS } from '../constants'\n\nimport { LOG_IN_BEGIN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../actions/auth'\n\nconst initialState = Object.values(PROVIDERS).reduce((o, provider) => ({\n  ...o,\n  [provider]: {\n    token: null,\n    error: null\n  }\n}), {})\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case LOG_IN_BEGIN:\n    return {\n      ...state,\n      [action.payload]: {\n        ...state[action.payload],\n        error: null\n      }\n    }\n  case LOG_IN_SUCCESS:\n    return {\n      ...state,\n      [action.payload.provider]: {\n        ...state[action.payload.provider],\n        token: action.payload.token,\n        error: null\n      }\n    }\n  case LOG_IN_FAILURE:\n    return {\n      ...state,\n      [action.payload.provider]: {\n        ...state[action.payload.provider],\n        error: action.payload.error\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { AUTOMATIC_INDEXING } from '../constants'\n\nimport { SETTINGS_UPDATE } from '../actions/settings'\n\nconst initialState = {\n  automaticIndexing: AUTOMATIC_INDEXING.NEVER\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case SETTINGS_UPDATE:\n    return {\n      ...state,\n      ...action.payload\n    }\n  default:\n    return state\n  }\n}\n","import { INDEX_BEGIN, INDEX_SUCCESS, INDEX_FAILURE } from '../actions/indexing'\n\nconst initialState = {\n  lastIndexed: 0,\n  error: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case INDEX_BEGIN:\n    return {\n      ...state,\n      error: null\n    }\n  case INDEX_SUCCESS:\n    return {\n      ...state,\n      lastIndexed: new Date().getTime()\n    }\n  case INDEX_FAILURE:\n    return {\n      ...state,\n      error: action.payload\n    }\n  default:\n    return state\n  }\n}\n","import { REMOVE_EPISODE, UPDATE_EPISODE } from '../actions/episodes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_EPISODE: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: episode, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_EPISODE:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport version from './version'\nimport auth from './auth'\nimport settings from './settings'\nimport indexing from './indexing'\nimport loading from './loading'\nimport movies from './movies'\nimport shows from './shows'\nimport seasons from './seasons'\nimport episodes from './episodes'\n\nconst rootReducer = combineReducers({\n  version,\n  auth,\n  settings,\n  indexing,\n  loading,\n  movies,\n  shows,\n  seasons,\n  episodes\n})\n\nexport default persistReducer({\n  key: 'root',\n  storage: storage,\n  whitelist: [\n    'version',\n    'auth',\n    'settings',\n    'indexing',\n    'movies',\n    'shows',\n    'seasons',\n    'episodes'\n  ],\n  debug: process.env.NODE_ENV === 'development'\n}, rootReducer)\n","import { VERSION } from '../constants'\n\nimport { UPDATE_VERSION } from '../actions/version'\n\nconst initialState = VERSION\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case UPDATE_VERSION:\n    return action.payload\n  default:\n    return state\n  }\n}\n","export const SETTINGS_UPDATE = 'SETTINGS_UPDATE'\n\nexport const updateSettings = settings => ({\n  type: SETTINGS_UPDATE,\n  payload: settings\n})\n","import { LOADING_BEGIN, LOADING_STOP } from '../actions/loading'\n\nconst initialState = false\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case LOADING_BEGIN:\n    return action.payload\n  case LOADING_STOP:\n    return false\n  default:\n    return state\n  }\n}\n","import { REMOVE_MOVIE, UPDATE_MOVIE } from '../actions/movies'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_MOVIE: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: movie, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_MOVIE:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { REMOVE_SHOW, UPDATE_SHOW } from '../actions/shows'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_SHOW: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: show, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_SHOW:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { REMOVE_SEASON, UPDATE_SEASON } from '../actions/seasons'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_SEASON: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: season, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_SEASON:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport persistedReducer from './reducers'\n\nexport default createStore(\n  persistedReducer,\n  applyMiddleware(thunk)\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still\n        // exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // This is used to notify users that a new version of the app will\n              // available after a reload.\n              window.newVersionAvailable = true\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { AUTOMATIC_INDEXING } from '../constants'\n\nclass AutomaticIndexing {\n  constructor(setting, lastIndexed, indexAction) {\n    this._setting = setting\n    this._lastIndexed = lastIndexed\n    this._indexAction = indexAction\n  }\n\n  perform() {\n    if (this.setting === AUTOMATIC_INDEXING.NEVER) {\n      return false\n    }\n\n    if (\n      this.setting === AUTOMATIC_INDEXING.ALWAYS ||\n      new Date().getFullYear() !== new Date(this.lastIndexed).getFullYear() ||\n      new Date().getMonth() !== new Date(this.lastIndexed).getMonth() ||\n      (this.setting !== AUTOMATIC_INDEXING.MONTHLY &&\n        new Date().getDate() !== new Date(this.lastIndexed).getDate())\n    ) {\n      this.indexAction()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  get setting() {\n    return this._setting\n  }\n\n  get lastIndexed() {\n    return this._lastIndexed\n  }\n\n  get indexAction() {\n    return this._indexAction\n  }\n}\n\nexport default AutomaticIndexing\n","import { VERSION } from '../constants'\n\nclass IndexAfterUpdate {\n  constructor(versionUsedForLastIndex, indexAction) {\n    this._versionUsedForLastIndex = versionUsedForLastIndex\n    this._indexAction = indexAction\n  }\n\n  perform() {\n    if (this.versionUsedForLastIndex !== VERSION) {\n      this.indexAction()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  get versionUsedForLastIndex() {\n    return this._versionUsedForLastIndex\n  }\n\n  get indexAction() {\n    return this._indexAction\n  }\n}\n\nexport default IndexAfterUpdate\n","import React, { Component } from 'react'\nimport './Cover.scss'\n\nclass Cover extends Component {\n  render() {\n    return (\n      <img className='Cover' src={this.props.url} alt={this.props.alt} width={this.props.width} />\n    )\n  }\n}\n\nexport default Cover\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Swiper from 'swiper'\nimport 'swiper/swiper.scss'\nimport './HorizontalSlide.scss'\n\nimport Cover from './Cover'\n\nclass HorizontalSlide extends Component {\n  componentDidMount() {\n    new Swiper(\n      document.querySelector(\n        `.HorizontalSlide#${this.props.id} .swiper-container`\n      ), {\n        spaceBetween: 15,\n        slidesPerView: 'auto',\n        slidesOffsetBefore: 20,\n        slidesOffsetAfter: 20,\n        grabCursor: true\n      }\n    )\n  }\n\n  render() {\n    return (\n      <div className='HorizontalSlide' id={this.props.id}>\n        <div className='swiper-container'>\n          <div className='swiper-wrapper'>\n            {this.props.items.length ? (\n              this.props.items.map(item => {\n                return (\n                  <div className='swiper-slide' key={item.id}>\n                    <Link to={item.path}>\n                      <Cover url={item.posterUrl || '/cover.png'} alt={item.name} width='100%' />\n                    </Link>\n                  </div>\n                )\n              })\n            ) : (\n              <div className='swiper-slide'>\n                <h3>Nothing found.</h3>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default HorizontalSlide\n","import { createSelector } from 'reselect'\n\nconst moviesSelector = state => state.movies\n\nexport const movieSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => movies[id]\n  )\n}\n\nexport const inProgressMoviesSelector = () => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).filter(movie => {\n        return movie.progress !== undefined &&\n          movie.progress !== 0 &&\n          movie.progress / 60 < movie.runtime * 0.95\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const recentlyWatchedMoviesSelector = date => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).filter(movie => {\n        return movie.lastWatched >= date.getTime() &&\n          (movie.progress === undefined ||\n            movie.progress === 0 ||\n            movie.progress / 60 >= movie.runtime * 0.95)\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const moviesByPersonSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).filter(movie => {\n        return movie.cast.find(castMember => castMember.id === id) ||\n          movie.crew.find(crewMember => crewMember.id === id)\n      })\n    }\n  )\n}\n\nexport const moviesCastMemberSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).map(movie => movie.cast).flat()\n        .filter(castMember => castMember.id === id)\n    }\n  )\n}\n\nexport const moviesCrewMemberSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).map(movie => movie.crew).flat()\n        .filter(crewMember => crewMember.id === id)\n    }\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './ForYou.scss'\n\nimport { PROVIDERS } from '../constants'\n\nimport { index } from '../actions/indexing'\n\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nimport {\n  inProgressMoviesSelector,\n  recentlyWatchedMoviesSelector\n} from '../selectors/movies'\nimport {\n  inProgressSeasonsSelector,\n  recentlyWatchedSeasonsSelector\n} from '../selectors/seasons'\n\nclass ForYou extends Component {\n  constructor(props) {\n    super(props)\n\n    const oneMonthAgo = new Date()\n    oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1)\n\n    this.state = {\n      inProgress: [\n        ...inProgressMoviesSelector()({ movies: this.props.movies }),\n        ...inProgressSeasonsSelector()({ seasons: this.props.seasons })\n      ].sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1),\n      recentlyWatched: [\n        ...recentlyWatchedMoviesSelector(oneMonthAgo)({\n          movies: this.props.movies\n        }),\n        ...recentlyWatchedSeasonsSelector(oneMonthAgo)({\n          seasons: this.props.seasons\n        })\n      ].sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  }\n\n  componentDidMount() {\n    document.querySelector('.Nav a:first-child').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:first-child').classList.remove('active')\n  }\n\n  render() {\n    if (\n      this.state.inProgress.length > 0 ||\n        this.state.recentlyWatched.length > 0\n    ) {\n      return (\n        <div className='ForYou'>\n          {this.state.inProgress.length > 0 && <section>\n            <h2>Continue watching</h2>\n            <HorizontalSlide items={this.state.inProgress} id='inProgress' />\n          </section>}\n\n          {this.state.recentlyWatched.length > 0 && <section>\n            <h2>Recently watched</h2>\n            <HorizontalSlide items={this.state.recentlyWatched} id='recentlyWatched' />\n          </section>}\n        </div>\n      )\n    } else if (\n      Object.values(PROVIDERS).filter(provider => {\n        return this.props.auth[provider].token !== null\n      }).length === 0\n    ) {\n      return (\n        <div className='ForYou'>\n          <h2>Get started</h2>\n          <p>To watch your movies and TV shows, you first have to sign in with the cloud service that hosts your media.</p>\n          <Link to='/app/settings' className='button'>\n            Authenticate\n          </Link>\n          <p className='small'>Note that Plaain may <span className='bold'>not</span> be used to stream pirated content or publicly share your private media library. You may only connect to your private cloud storage.</p>\n        </div>\n      )\n    } else if (\n      Object.entries(this.props.movies).length === 0 &&\n        Object.entries(this.props.shows).length === 0\n    ) {\n      return (\n        <div className='ForYou'>\n          <h2>Get started</h2>\n          <p>You signed into a cloud service, but we didn&apos;t find any movies or TV shows.</p>\n          <p>It&apos;s likely that you just have to move some of your files around and create some folders to make it work.</p>\n          <p>Reference the getting started guide to learn how to organize your files so that Plaain finds them. After you&apos;re done, just re-index.</p>\n          <div className='ForYou__buttons'>\n            <a className='button primary' href='https://github.com/jonhue/plaain#getting-started' target='_blank' rel='noopener noreferrer'>Getting started</a>\n            <button onClick={this.props.index}>Index</button>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className='ForYou'>\n          <h2>Get started</h2>\n          <p>Here, you&apos;ll be able to find your recently watched movie or the show you didn&apos;t finish yet.</p>\n          <div className='ForYou__buttons'>\n            {Object.entries(this.props.movies).length > 0 && <Link to='/app/movies' className='button'>\n              Discover your movies\n            </Link>}\n            {Object.entries(this.props.shows).length > 0 && <Link to='/app/shows' className='button'>\n              Discover your shows\n            </Link>}\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows,\n    seasons: state.seasons,\n    auth: state.auth\n  }),\n  { index }\n)(ForYou)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './ItemGrid.scss'\n\nimport Cover from './Cover'\n\nclass ItemGrid extends Component {\n  render() {\n    return (\n      <div className='ItemGrid' id={this.props.id}>\n        {this.props.items.length ? this.props.items.map(item => {\n          return (\n            <div className='ItemGrid__item' key={item.id}>\n              <Link to={item.path}>\n                <Cover url={item.posterUrl || '/cover.png'} alt={item.name} width='100%' />\n              </Link>\n            </div>\n          )\n        }) : (\n          <div className='ItemGrid__item'>\n            <h3>Nothing found.</h3>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default ItemGrid\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Swiper from 'swiper'\nimport 'swiper/swiper.scss'\nimport './VerticalSlide.scss'\n\nimport Cover from './Cover'\n\nclass VerticalSlide extends Component {\n  componentDidMount() {\n    new Swiper(\n      document.querySelector(\n        `.VerticalSlide#${this.props.id} .swiper-container`\n      ), {\n        direction: 'vertical',\n        slidesPerView: 'auto',\n        grabCursor: true,\n        effect: 'coverflow',\n        coverflowEffect: {\n          rotate: 0,\n          stretch: 425,\n          depth: 150,\n          modifier: 1,\n          slideShadows : false\n        },\n        history: {\n          replaceState: true,\n          key: this.props.path\n        }\n      }\n    )\n  }\n\n  render() {\n    return (\n      <div className='VerticalSlide' id={this.props.id}>\n        <div className='swiper-container'>\n          <div className='swiper-wrapper'>\n            {this.props.items.length ? this.props.items.map(item => {\n              return (\n                <div className='swiper-slide' data-history={item.id} key={item.id}>\n                  <Link to={item.path}>\n                    <Cover url={item.posterUrl || '/cover.png'} alt={item.name} width='100%' />\n                  </Link>\n                </div>\n              )\n            }) : (\n              <div className='swiper-slide'>\n                <h3>Nothing found.</h3>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default VerticalSlide\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>zoom</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"22\" x2=\"15.656\" y1=\"22\" y2=\"15.656\"/>\n  \t\t<circle cx=\"10\" cy=\"10\" fill=\"none\" r=\"8\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\"/>\n  \t</g>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Movies.scss'\n\nimport ItemGrid from '../components/ItemGrid'\nimport VerticalSlide from '../components/VerticalSlide'\nimport ZoomIcon from '../components/Nucleo/icons/zoom.jsx'\n\nclass Movies extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.remove('active')\n  }\n\n  render() {\n    return (\n      <div className='Movies'>\n        {Object.entries(this.props.movies).length > 0 && (\n          <div className='Movies__wrapper'>\n            <div className='Movies__find'>\n              <Link to='/app/find'>\n                <ZoomIcon width={24} height={24} />\n              </Link>\n            </div>\n            {window.innerWidth < 600 ? <VerticalSlide items={Object.values(this.props.movies).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='movies' path='movies' /> : <ItemGrid items={Object.values(this.props.movies).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='movies' />}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies\n  })\n)(Movies)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './NotFound.scss'\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className='NotFound'>\n        <h2>You want to get lost?</h2>\n        <p>This path went astray... If you do want to get lost, we recommend <a href='https://www.imdb.com/title/tt6969502/' target='_blank' rel='noopener noreferrer'>Get Lost! ny Mirjam de With</a>.</p>\n        <p>If all you&apos;re looking for is to get back on track: you can <Link to='/app'>find home this way</Link>.</p>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport './Backdrop.scss'\n\nclass Backdrop extends Component {\n  render() {\n    return (\n      <picture className='Backdrop'>\n        <img src={this.props.url} alt='backdrop' />\n      </picture>\n    )\n  }\n}\n\nexport default Backdrop\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './PersonList.scss'\n\nclass PersonList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      wrapped: true\n    }\n  }\n\n  toggle() {\n    this.setState({\n      wrapped: !this.state.wrapped\n    })\n  }\n\n  render() {\n    return (\n      <div className='PersonList'>\n        {this.props.people\n          .slice(0, this.state.wrapped ? 10 : this.props.people.length)\n          .map((person, index) => {\n            return <p key={index}><Link to={`/app/person/${person.id}`}>{person.name}</Link> · <span>{person[this.props.attribute]}</span></p>\n          })}\n        <span onClick={this.toggle.bind(this)}>{this.state.wrapped ? 'Show more' : 'Show less'}</span>\n      </div>\n    )\n  }\n}\n\nexport default PersonList\n","import React, { Component } from 'react'\nimport ISO6391 from 'iso-639-1'\n\nclass PlyrCaption extends Component {\n  render() {\n    return (\n      <track\n        kind='captions'\n        label={this.props.caption.information}\n        src={this.props.caption.url}\n        srcLang={ISO6391.getCode(this.props.caption.information) || 'en'}\n        default={this.props.default} />\n    )\n  }\n}\n\nexport default PlyrCaption\n","import React, { Component } from 'react'\n\nclass PlyrSource extends Component {\n  render() {\n    return (\n      <source\n        src={this.props.source.url}\n        type={this.props.source.mimeType}\n        size={this.props.source.information} />\n    )\n  }\n}\n\nexport default PlyrSource\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Plyr from 'plyr'\nimport './PlyrPlayer.scss'\n\nimport { FILE_TYPES } from '../constants'\n\nimport PlyrCaption from './PlyrPlayer/PlyrCaption'\nimport PlyrSource from './PlyrPlayer/PlyrSource'\n\nimport { logInExpired } from '../actions/auth'\n\nclass PlyrPlayer extends Component {\n  componentDidMount() {\n    this.player = new Plyr(document.querySelector('#player'), {\n      debug: process.env.NODE_ENV === 'development'\n    })\n\n    this.player.on('error', error => {\n      console.log(error)\n\n      this.props.logInExpired(this.props.item.provider)\n    })\n\n    this.player.on('timeupdate', event => {\n      if (event.detail.plyr.currentTime !== 0 ) {\n        this.props.updateItemAction({\n          id: this.props.item.id,\n          lastWatched: new Date().getTime(),\n          progress: event.detail.plyr.currentTime\n        })\n      }\n    })\n\n    this.player.on('exitfullscreen', () => {\n      const component = document.querySelector('.PlyrPlayer')\n\n      if (component && !component.dataset.preventExit) {\n        this.player.stop()\n        component.style.display = 'none'\n\n        if (this.props.exitedAction) {\n          this.props.exitedAction()\n        }\n      }\n    })\n\n    this.player.on('ended', () => {\n      this.player.fullscreen.exit()\n      document.querySelector('.PlyrPlayer').style.display = 'none'\n\n      if (this.props.endedAction) {\n        this.props.endedAction()\n      }\n    })\n  }\n\n  render() {\n    if (\n      this.props.item.files\n        .filter(file => file.type === FILE_TYPES.SOURCE).length === 0\n    ) {\n      return null\n    }\n\n    return (\n      <div className='PlyrPlayer'>\n        <video\n          src={this.props.item.files\n            .filter(file => file.type === FILE_TYPES.SOURCE)[0].url}\n          id='player' crossOrigin='true' playsInline controls>\n          {this.props.item.files.filter(file => file.type === FILE_TYPES.SOURCE)\n            .map((source, index) => {\n              return <PlyrSource source={source} key={index} />\n            })}\n          {this.props.item.files\n            .filter(file => file.type === FILE_TYPES.CAPTION)\n            .map((caption, index) => {\n              return (\n                <PlyrCaption\n                  caption={caption}\n                  default={index === 0}\n                  key={index} />\n              )\n            })}\n          <a href={this.props.item.files.filter(file => file.type === FILE_TYPES.SOURCE)[0].src} download>Download</a>\n        </video>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { logInExpired }\n)(PlyrPlayer)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Movie.scss'\n\nimport { FILE_TYPES, STORAGE_PROVIDERS } from '../constants'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport PersonList from '../components/PersonList'\nimport PlyrPlayer from '../components/PlyrPlayer'\n\nimport { updateMovie } from '../actions/movies'\n\nimport { movieSelector } from '../selectors/movies'\n\nclass Movie extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      movie: movieSelector(this.props.match.params.id)({\n        movies: this.props.movies\n      })\n    }\n  }\n\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.remove('active')\n  }\n\n  continue() {\n    this.watch(this.state.movie.progress)\n  }\n\n  watch(progress = 0) {\n    const player = document.querySelector('.PlyrPlayer')\n    const plyr = player.querySelector('#player').plyr\n    player.dataset.preventExit = true\n    // Wait until Plyr is ready to start playing\n    setTimeout(() => {\n      player.style.display = 'block'\n      plyr.fullscreen.enter()\n      plyr.play()\n      plyr.currentTime = progress\n      setTimeout(() => { delete player.dataset.preventExit}, 100) // Fixing #232\n    }, 100)\n  }\n\n  finishedMovie() {\n    this.props.updateMovie({\n      id: this.state.movie.id,\n      progress: 0\n    })\n  }\n\n  render() {\n    if (this.state.movie) {\n      return (\n        <div className='Movie'>\n          {this.state.movie.files.filter(file => file.type === FILE_TYPES.SOURCE).length > 0 && <PlyrPlayer item={this.state.movie} updateItemAction={this.props.updateMovie} endedAction={this.finishedMovie.bind(this)} />}\n          <Backdrop url={this.state.movie.backdropUrl} />\n          <div className='Movie__details'>\n            <Cover url={this.state.movie.posterUrl} alt='poster' width='50%' />\n            <h1>{this.state.movie.name}</h1>\n            <div className='Movie__information'>\n              <p className='small'>{new Date(this.state.movie.releaseDate).getFullYear()}</p>\n              <p className='small'>{Math.floor(this.state.movie.runtime / 60) !== 0 && `${Math.floor(this.state.movie.runtime / 60)}h`} {this.state.movie.runtime % 60 !== 0 && `${this.state.movie.runtime % 60}m`}</p>\n            </div>\n            <div className='Movie__actions'>\n              {this.state.movie.files.filter(file => file.type === FILE_TYPES.SOURCE).length > 0 && this.state.movie.progress !== undefined && this.state.movie.progress !== 0 && this.state.movie.progress / 60 < this.state.movie.runtime && <button className='primary' id='continue' onClick={this.continue.bind(this)}>Continue</button>}\n              {this.state.movie.files.filter(file => file.type === FILE_TYPES.SOURCE).length > 0 && <button className={this.state.movie.progress === undefined || this.state.movie.progress === 0 || this.state.movie.progress / 60 >= this.state.movie.runtime ? 'primary' : ''} id='watch' onClick={() => this.watch()}>Watch</button>}\n              <a className='button' id='trailer' href={this.state.movie.trailerLink} target='_blank' rel='noopener noreferrer'>Play trailer</a>\n            </div>\n            <p className='Movie__overview'>{this.state.movie.overview}</p>\n            <div className='Movie__people'>\n              <div className='Movie__people__cast'>\n                <h4>Starring</h4>\n                <PersonList people={this.state.movie.cast} attribute='character' />\n              </div>\n              <div className='Movie__people__crew'>\n                <h4>Crew</h4>\n                <PersonList people={this.state.movie.crew} attribute='job' />\n              </div>\n            </div>\n          </div>\n          <div className='Movie__sources'>\n            <h4>Sources</h4>\n            <p className='small'>Hosted on {STORAGE_PROVIDERS[this.state.movie.provider]}</p>\n            <div>\n              <div className='Movie__sources__versions'>\n                <h5>Versions</h5>\n                {this.state.movie.files\n                  .filter(file => file.type === FILE_TYPES.SOURCE)\n                  .map((file, index) => {\n                    return <p className='small' key={index}>{file.information}</p>\n                  })}\n                {this.state.movie.files\n                  .filter(file => file.type === FILE_TYPES.SOURCE)\n                  .length === 0 && <p className='small'>-</p>}\n              </div>\n              <div className='Movie__sources__captions'>\n                <h5>Subtitles</h5>\n                {this.state.movie.files\n                  .filter(file => file.type === FILE_TYPES.CAPTION)\n                  .map((file, index) => {\n                    return <p className='small' key={index}>{file.information}</p>\n                  })}\n                {this.state.movie.files\n                  .filter(file => file.type === FILE_TYPES.CAPTION)\n                  .length === 0 && <p className='small'>-</p>}\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies\n  }),\n  { updateMovie }\n)(Movie)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Shows.scss'\n\nimport ItemGrid from '../components/ItemGrid'\nimport VerticalSlide from '../components/VerticalSlide'\nimport ZoomIcon from '../components/Nucleo/icons/zoom.jsx'\n\nclass Shows extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.remove('active')\n  }\n\n  render() {\n    return (\n      <div className='Shows'>\n        {Object.entries(this.props.shows).length > 0 && (\n          <div className='Shows__wrapper'>\n            <div className='Shows__find'>\n              <Link to='/app/find'>\n                <ZoomIcon width={24} height={24} />\n              </Link>\n            </div>\n            {window.innerWidth < 600 ? <VerticalSlide items={Object.values(this.props.shows).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='shows' path='shows' /> : <ItemGrid items={Object.values(this.props.shows).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='shows' />}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    shows: state.shows\n  })\n)(Shows)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Show.scss'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nimport { showSelector } from '../selectors/shows'\nimport { seasonsByShowSelector } from '../selectors/seasons'\n\nclass Show extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      show: showSelector(this.props.match.params.id)({\n        shows: this.props.shows\n      }),\n      seasons: seasonsByShowSelector(this.props.match.params.id)({\n        seasons: this.props.seasons\n      })\n    }\n  }\n\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.remove('active')\n  }\n\n  render() {\n    if (this.state.show) {\n      return (\n        <div className='Show'>\n          <Backdrop url={this.state.show.backdropUrl} />\n          <div className='Show__details'>\n            <Cover url={this.state.show.posterUrl} alt='poster' width='50%' />\n            <h1>{this.state.show.name}</h1>\n            <div className='Show__information'>\n              <p className='small'>{new Date(this.state.show.firstAirDate).getFullYear()} - {new Date(this.state.show.lastAirDate).getFullYear()}</p>\n            </div>\n            <p className='Show__overview'>{this.state.show.overview}</p>\n          </div>\n          {this.state.seasons.length > 0 && <div className='Show__seasons'>\n            <h2>Seasons</h2>\n            <HorizontalSlide items={this.state.seasons.sort((a, b) => (a.seasonNumber < b.seasonNumber) ? -1 : 1)} id='seasons' />\n          </div>}\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    shows: state.shows,\n    seasons: state.seasons\n  })\n)(Show)\n","import { createSelector } from 'reselect'\n\nconst episodesSelector = state => state.episodes\n\nexport const episodeSelector = id => {\n  return createSelector(\n    episodesSelector,\n    episodes => episodes[id]\n  )\n}\n\nexport const episodesBySeasonSelector = seasonId => {\n  return createSelector(\n    episodesSelector,\n    episodes => {\n      return Object.values(episodes)\n        .filter(episode => episode.seasonId === seasonId)\n    }\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Season.scss'\n\nimport { FILE_TYPES } from '../constants'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport PersonList from '../components/PersonList'\nimport PlyrPlayer from '../components/PlyrPlayer'\n\nimport { updateSeason } from '../actions/seasons'\nimport { updateEpisode } from '../actions/episodes'\n\nimport { showSelector } from '../selectors/shows'\nimport { seasonSelector } from '../selectors/seasons'\nimport { episodesBySeasonSelector } from '../selectors/episodes'\n\nclass Season extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      season: seasonSelector(this.props.match.params.id)({\n        seasons: this.props.seasons\n      }),\n      episodes: episodesBySeasonSelector(this.props.match.params.id)({\n        episodes: this.props.episodes\n      }),\n      watchableEpisodes: episodesBySeasonSelector(this.props.match.params.id)({\n        episodes: this.props.episodes\n      }).filter(episode => {\n        return episode.provider !== undefined &&\n          episode.files.filter(file => file.type === FILE_TYPES.SOURCE)\n            .length !== 0\n      }),\n      episodesWrapped: true\n    }\n    this.state.currentEpisodeNumber =\n      this.state.watchableEpisodes.length > 0 &&\n      this.state.watchableEpisodes[0].episodeNumber\n  }\n\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.remove('active')\n  }\n\n  toggleEpisodes() {\n    this.setState({\n      episodesWrapped: !this.state.episodesWrapped\n    })\n  }\n\n  continue() {\n    this.watch(\n      this.state.season.progress || 0,\n      this.state.episodes[this.state.season.progress - 1].progress || 0\n    )\n  }\n\n  watch(episodeNumber, progress = 0) {\n    this.setState({\n      currentEpisodeNumber: episodeNumber\n    })\n\n    this.props.updateSeason({\n      id: this.state.season.id,\n      lastWatched: new Date().getTime(),\n      progress: episodeNumber\n    })\n\n    const player = document.querySelector('.PlyrPlayer')\n    const plyr = player.querySelector('#player').plyr\n    player.dataset.preventExit = true\n    // Wait until Plyr is ready to start playing after the sources changed\n    setTimeout(() => {\n      player.style.display = 'block'\n      plyr.fullscreen.enter()\n      plyr.play()\n      plyr.currentTime = progress\n      setTimeout(() => { delete player.dataset.preventExit}, 100) // Fixing #232\n    }, 100)\n  }\n\n  stoppedEpisode() {\n    // this.forceUpdate()\n  }\n\n  finishedEpisode() {\n    this.props.updateEpisode({\n      id: this.state.episodes[this.state.currentEpisodeNumber - 1].id,\n      progress: 0\n    })\n\n    let episodeNumber = 0\n    if (\n      this.state.episodes[this.state.currentEpisodeNumber].files\n        .filter(file => file.type === FILE_TYPES.SOURCE).length > 0\n    ) {\n      episodeNumber = this.state.currentEpisodeNumber + 1\n    }\n\n    this.props.updateSeason({\n      id: this.state.season.id,\n      progress: episodeNumber\n    })\n\n    // this.forceUpdate()\n  }\n\n  render() {\n    if (this.state.season) {\n      return (\n        <div className='Season'>\n          {this.state.watchableEpisodes.length > 0 && <PlyrPlayer item={this.state.episodes[this.state.currentEpisodeNumber - 1]} updateItemAction={this.props.updateEpisode} exitedAction={this.stoppedEpisode.bind(this)} endedAction={this.finishedEpisode.bind(this)} />}\n          <Backdrop url={showSelector(this.state.season.showId)({ shows: this.props.shows }).backdropUrl} />\n          <div className='Season__details'>\n            <Cover url={this.state.season.posterUrl} alt='poster' width='50%' />\n            <h1>Season {this.state.season.seasonNumber}</h1>\n            <div className='Season__information'>\n              <p className='small'>{showSelector(this.state.season.showId)({ shows: this.props.shows }).name}</p>\n              <p className='small'>{new Date(this.state.season.airDate).getFullYear()}</p>\n            </div>\n            <div className='Season__actions'>\n              {this.state.watchableEpisodes.length > 0 && this.state.movie.progress !== undefined && this.state.season.progress !== 0 && <button className='primary' id='continue' onClick={this.continue.bind(this)}>Continue episode {this.state.season.progress}</button>}\n              {this.state.watchableEpisodes.length > 0 && this.state.season.progress !== 1 && <button className={this.state.movie.progress === undefined || this.state.season.progress === 0 ? 'primary' : ''} id='watch' onClick={() => this.watch(this.state.watchableEpisodes[0].episodeNumber)}>Watch episode {this.state.watchableEpisodes[0].episodeNumber}</button>}\n              <a className='button' id='trailer' href={this.state.season.trailerLink} target='_blank' rel='noopener noreferrer'>Play trailer</a>\n            </div>\n            <div className='Season__episodes'>\n              {this.state.episodes\n                .sort((a, b) => (a.episodeNumber < b.episodeNumber) ? -1 : 1)\n                .slice(\n                  0,\n                  this.state.episodesWrapped ? 0 : this.state.episodes.length\n                )\n                .map((episode, index) => {\n                  return (\n                    <div disabled={this.state.episodes[episode.episodeNumber - 1].provider === undefined || this.state.episodes[episode.episodeNumber - 1].files.filter(file => file.type === FILE_TYPES.SOURCE).length === 0} className='Season__episodes__episode' onClick={() => this.watch(episode.episodeNumber)} key={index}>\n                      <div className='Season__episodes__episode__number'>{episode.episodeNumber}</div>\n                      <div className='Season__episodes__episode__details'>\n                        <h2>{episode.name}</h2>\n                        <p className='small'>Aired {new Date(episode.airDate).toDateString()}</p>\n                        <p>{episode.overview}</p>\n                      </div>\n                    </div>\n                  )\n                })}\n              {this.state.episodes.length > 0 && <span onClick={this.toggleEpisodes.bind(this)}>{this.state.episodesWrapped ? 'Show all episodes' : 'Hide episodes'}</span>}\n            </div>\n            <p className='Season__overview'>{this.state.season.overview}</p>\n            <div className='Season__people'>\n              <div className='Season__people__cast'>\n                <h4>Starring</h4>\n                <PersonList people={this.state.season.cast} attribute='character' />\n              </div>\n              <div className='Season__people__crew'>\n                <h4>Crew</h4>\n                <PersonList people={this.state.season.crew} attribute='job' />\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    shows: state.shows,\n    seasons: state.seasons,\n    episodes: state.episodes\n  }),\n  { updateSeason, updateEpisode }\n)(Season)\n","import { createSelector } from 'reselect'\n\nimport {\n  moviesCastMemberSelector,\n  moviesCrewMemberSelector\n} from '../selectors/movies'\nimport {\n  seasonsCastMemberSelector,\n  seasonsCrewMemberSelector\n} from '../selectors/seasons'\n\nexport const personSelector = id => {\n  return createSelector(\n    moviesCastMemberSelector(id),\n    moviesCrewMemberSelector(id),\n    seasonsCastMemberSelector(id),\n    seasonsCrewMemberSelector(id),\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      return [...moviesCast, ...moviesCrew, ...seasonsCast, ...seasonsCrew][0]\n    }\n  )\n}\n\nexport const personRolesSelector = (id, gender) => {\n  return createSelector(\n    moviesCastMemberSelector(id),\n    moviesCrewMemberSelector(id),\n    seasonsCastMemberSelector(id),\n    seasonsCrewMemberSelector(id),\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      return [\n        ...new Set([\n          ((moviesCast.length > 0 || seasonsCast.length > 0) ?\n            (gender === 1 ? 'Actress' : 'Actor') : null),\n          ...moviesCrew.map(crewMember => crewMember.job),\n          ...seasonsCrew.map(crewMember => crewMember.job)\n        ])\n      ].filter(role => role !== null)\n    }\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Person.scss'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nimport { moviesByPersonSelector } from '../selectors/movies'\nimport { seasonsByPersonSelector } from '../selectors/seasons'\nimport { personSelector, personRolesSelector } from '../selectors/people'\n\nclass Person extends Component {\n  constructor(props) {\n    super(props)\n\n    const id = Number.parseInt(this.props.match.params.id)\n\n    this.state = {\n      person: personSelector(id)({\n        movies: this.props.movies,\n        seasons: this.props.seasons\n      }),\n      movies: moviesByPersonSelector(id)({ movies: this.props.movies }),\n      seasons: seasonsByPersonSelector(id)({ seasons: this.props.seasons })\n    }\n    this.state.roles = personRolesSelector(id, this.state.person.gender)({\n      movies: this.props.movies,\n      seasons: this.props.seasons\n    })\n  }\n\n  render() {\n    if (this.state.person) {\n      return (\n        <div className='Person'>\n          <Backdrop url={(this.state.movies[0] || this.props.shows[this.state.seasons[0].showId]).backdropUrl} />\n          <div className='Person__details'>\n            <Cover url={this.state.person.profileUrl} alt='profile' width='50%' />\n            <h1>{this.state.person.name}</h1>\n            <h5>Known as</h5>\n            <p>{this.state.roles.join(', ')}</p>\n          </div>\n\n          {this.state.movies.length > 0 && <section>\n            <h2>Movies</h2>\n            <HorizontalSlide items={this.state.movies} id='movies' />\n          </section>}\n\n          {this.state.seasons.length > 0 && <section>\n            <h2>TV seasons</h2>\n            <HorizontalSlide items={this.state.seasons} id='seasons' />\n          </section>}\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows,\n    seasons: state.seasons\n  })\n)(Person)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>e add</title>\n  \t<g fill=\"#ffffff\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"3\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" x1=\"16\" x2=\"16\" y1=\"2\" y2=\"30\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" x1=\"30\" x2=\"2\" y1=\"16\" y2=\"16\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>logo dropbox 2</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<polygon fill=\"#ffffff\" points=\"9.41319,1.11824 0,7.26432 6.50879,12.47649 15.99985,6.61586 \"/>\n  \t\t<polygon fill=\"#ffffff\" points=\"0,17.68899 9.41319,23.83504 15.99985,18.33712 6.50879,12.47649 \"/>\n  \t\t<polygon fill=\"#ffffff\" points=\"15.99985,18.33712 22.58681,23.83504 32,17.68899 25.49121,12.47649 \"/>\n  \t\t<polygon fill=\"#ffffff\" points=\"32,7.26432 22.58681,1.11824 15.99985,6.61586 25.49121,12.47649 \"/>\n  \t\t<polygon points=\"16.01932,19.51992 9.41319,25.00165 6.58635,23.15606 6.58635,25.22512 16.01932,30.88176 25.45226,25.22512 25.45226,23.15606 22.62543,25.00165 \"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>google 2</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<path d=\"M30.383,13.273H16.065v6.136H24.18c-1.3,4.091-4.5,5.455-8.18,5.455a8.864,8.864,0,1,1,5.691-15.65L26.15,4.967A15,15,0,1,0,16,31C24.271,31,31.747,25.545,30.383,13.273Z\" fill=\"#ffffff\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>microsoft</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<rect height=\"14\" width=\"14\" fill=\"#ffffff\" x=\"1\" y=\"1\"/>\n  \t\t<rect height=\"14\" width=\"14\" x=\"17\" y=\"1\"/>\n  \t\t<rect height=\"14\" width=\"14\" x=\"1\" y=\"17\"/>\n  \t\t<rect height=\"14\" width=\"14\" fill=\"#ffffff\" x=\"17\" y=\"17\"/>\n  \t</g>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport './Banner.scss'\n\nclass Banner extends Component {\n  render() {\n    return (\n      <div className='Banner'>\n        <h2>{this.props.title}</h2>\n        <p>{this.props.text}</p>\n        {this.props.linkUrl && <a href={this.props.linkUrl} target='_blank' rel='noopener noreferrer'>{this.props.linkText || 'Help'}</a>}\n      </div>\n    )\n  }\n}\n\nexport default Banner\n","import { createSelector } from 'reselect'\n\nconst authSelector = state => state.auth\n\nexport const authProviderSelector = provider => {\n  return createSelector(\n    authSelector,\n    auth => auth[provider]\n  )\n}\n\nexport const authTokenSelector = provider => {\n  return createSelector(\n    authProviderSelector(provider),\n    authProvider => authProvider.token\n  )\n}\n\nexport const authError = () => {\n  return createSelector(\n    authSelector,\n    auth => Object.keys(auth).some(provider => auth[provider].error !== null)\n  )\n}\n\nexport const authProviderError = provider => {\n  return createSelector(\n    authSelector,\n    auth => auth[provider].error !== null\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Settings.scss'\n\nimport { VERSION, PROVIDERS, AUTOMATIC_INDEXING } from '../constants'\n\nimport { authenticateMicrosoft } from '../actions/auth'\nimport { index } from '../actions/indexing'\nimport { updateSettings } from '../actions/settings'\n\nimport AddIcon from '../components/Nucleo/icons/add.jsx'\nimport DropboxIcon from '../components/Nucleo/icons/dropbox.jsx'\nimport GoogleIcon from '../components/Nucleo/icons/google.jsx'\nimport MicrosoftIcon from '../components/Nucleo/icons/microsoft.jsx'\n\nimport Banner from '../components/Banner'\n\nimport {\n  authTokenSelector,\n  authError,\n  authProviderError\n} from '../selectors/auth'\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      newVersionAvailable: window.newVersionAvailable,\n      notAuthenticated: Object.values(PROVIDERS).filter(provider => {\n        return this.props.auth[provider].token !== null\n      }).length === 0,\n      authenticationExpired: authError()({ auth: this.props.auth }),\n      noMediaFound: Object.entries(this.props.movies).length === 0 &&\n        Object.entries(this.props.shows).length === 0\n    }\n  }\n\n  componentDidMount() {\n    document.querySelector('.Nav a:last-child').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:last-child').classList.remove('active')\n  }\n\n  index() {\n    this.props.index()\n  }\n\n  handleAutomaticIndexingChange(event) {\n    this.props.updateSettings({\n      ...this.props.settings,\n      automaticIndexing: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className='Settings'>\n        {this.state.newVersionAvailable && <Banner title='Update available!' text='Restart the app to apply the changes.' />}\n        {this.state.notAuthenticated && <Banner title='Authenticate with cloud service' text='To get started, authenticate with the cloud service that hosts your media.' />}\n        {this.state.noMediaFound && <Banner title='No media found!' text=\"We indexed all your authenticated services, but weren't able to find any source files.\" linkText='Getting started with Plaain' linkUrl='https://github.com/jonhue/plaain#getting-started' />}\n        {this.state.authenticationExpired && <Banner title='Authentication expired!' text='Reauthenticate with the failing service.' />}\n\n        <section className='Settings__auth'>\n          <h2>Authentication</h2>\n          <p>Sign into your cloud to add your movies and TV shows to your library.</p>\n          <div className='Settings__auth__scroll'>\n            <div className='Settings__auth__flex'>\n              <button className={`microsoft ${authTokenSelector(PROVIDERS.MICROSOFT)({ auth: this.props.auth }) && 'primary'} ${authProviderError(PROVIDERS.MICROSOFT)({ auth: this.props.auth }) && 'warn'}`} onClick={this.props.authenticateMicrosoft}>\n                <MicrosoftIcon width={32} height={32} />\n              </button>\n              <button disabled className='dropbox'>\n                <DropboxIcon width={32} height={32} />\n              </button>\n              <button disabled className='google'>\n                <GoogleIcon width={32} height={32} />\n              </button>\n              <a className='button' href='https://github.com/jonhue/plaain' target='_blank' rel='noopener noreferrer'>\n                <AddIcon width={32} height={32} />\n              </a>\n            </div>\n          </div>\n        </section>\n\n        <section className='Settings__indexing'>\n          <h2>Indexing</h2>\n          <p>Index to look for new media on your linked services and to fetch the latest metadata.</p>\n          <button onClick={this.index.bind(this)}>\n            Index\n          </button>\n          <h5>Automatic indexing</h5>\n          <p>Index automatically when you launch Plaain after a given time has passed.</p>\n          <select value={this.props.settings.automaticIndexing} onChange={this.handleAutomaticIndexingChange.bind(this)}>\n            <option value={AUTOMATIC_INDEXING.NEVER}>Never</option>\n            <option value={AUTOMATIC_INDEXING.MONTHLY}>Monthly</option>\n            <option value={AUTOMATIC_INDEXING.DAILY}>Daily</option>\n            <option value={AUTOMATIC_INDEXING.ALWAYS}>Always</option>\n          </select>\n        </section>\n\n        <section className='Settings__version'>\n          <h2>Version</h2>\n          <p>Plaain {VERSION}{!window.newVersionAvailable && ' (latest)'}.</p>\n          <p className='small'>\n            Plaain is <a href='https://github.com/jonhue/plaain' target='_blank' rel='noopener noreferrer'>open-source</a>. See the <a href='https://github.com/jonhue/plaain/releases' target='_blank' rel='noopener noreferrer'>changelog</a>.\n          </p>\n          <p className='small'>Note that Plaain may <span className='bold'>not</span> be used to stream pirated content or publicly share your private media library. You may only connect to your private cloud storage.</p>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    auth: state.auth,\n    settings: state.settings,\n    movies: state.movies,\n    shows: state.shows\n  }),\n  { authenticateMicrosoft, index, updateSettings }\n)(Settings)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport FlexSearch from 'flexsearch'\nimport './Find.scss'\n\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nclass Find extends Component {\n  constructor(props) {\n    super(props)\n\n    this.moviesIndex = new FlexSearch()\n    Object.values(this.props.movies).forEach(movie => {\n      this.moviesIndex.add(movie.id, `${movie.name};${movie.overview}`)\n    })\n    this.showsIndex = new FlexSearch()\n    Object.values(this.props.shows).forEach(show => {\n      this.showsIndex.add(show.id, `${show.name};${show.overview}`)\n    })\n\n    this.state = {\n      query: new URLSearchParams(this.props.location.search).get('q') || '',\n      movies: [],\n      shows: [],\n    }\n  }\n\n  componentDidMount() {\n    this.search(new URLSearchParams(this.props.location.search).get('q'))\n  }\n\n  search(query) {\n    this.setState({\n      query: query || '',\n      movies: this.moviesIndex.search(query || '')\n        .map(result => this.props.movies[result]),\n      shows: this.showsIndex.search(query || '')\n        .map(result => this.props.shows[result])\n    })\n  }\n\n  handleInputChange(event) {\n    this.props.history.replace(`/app/find?q=${event.target.value}`)\n    this.search(event.target.value)\n  }\n\n  render() {\n    return (\n      <div className='Find'>\n        <form>\n          <input autoFocus value={this.state.query} placeholder=\"Search your library\" onChange={this.handleInputChange.bind(this)} />\n        </form>\n\n        {this.state.movies.length > 0 && <section>\n          <h2>Movies</h2>\n          <HorizontalSlide items={this.state.movies} id='movies' />\n        </section>}\n\n        {this.state.shows.length > 0 && <section>\n          <h2>TV shows</h2>\n          <HorizontalSlide items={this.state.shows} id='shows' />\n        </section>}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows\n  })\n)(Find)\n","import React from 'react'\n\nexport default props => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height}>\n    <path fill=\"none\" strokeMiterlimit=\"10\" d=\"M2.5 26.5h4l4-6 8 20 10-32 8 26 6-8h4\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#ff2fc1\" className=\"unPUVPIZ_0\"></path>\n    <style data-made-with=\"vivus-instant\">{`.unPUVPIZ_0{stroke-dasharray:108 110;stroke-dashoffset:109;animation:unPUVPIZ_draw_0 750ms ease-in-out 0ms infinite,unPUVPIZ_fade 750ms linear 0ms infinite;}@keyframes unPUVPIZ_draw{100%{stroke-dashoffset:0;}}@keyframes unPUVPIZ_fade{0%{stroke-opacity:1;}100%{stroke-opacity:1;}100%{stroke-opacity:0;}}@keyframes unPUVPIZ_draw_0{0%{stroke-dashoffset: 109}66.66666666666666%{ stroke-dashoffset: 0;}100%{ stroke-dashoffset: 0;}}`}</style>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport './Loading.scss'\n\nimport SoundWaveIcon from '../components/Nucleo/icons/soundWave.jsx'\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className='Loading'>\n        <div className='Loading__wrapper'>\n          <SoundWaveIcon width={48} height={48} />\n          {this.props.caption && <p className='small'>{this.props.caption}</p>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Loading\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>popcorn</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<polygon fill=\"none\" points=\"21 7 3 7 5 23 19 23 21 7\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\"/>\n  \t\t<path d=\"M19,5a3,3,0,0,0-3-3,2.97,2.97,0,0,0-1.47.4,2.986,2.986,0,0,0-5.06,0A2.97,2.97,0,0,0,8,2,3,3,0,0,0,5,5\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"9\" x2=\"8\" y1=\"23\" y2=\"7\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"15\" x2=\"16\" y1=\"23\" y2=\"7\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>movie 61</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"1\" y1=\"1\" y2=\"23\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"23\" x2=\"23\" y1=\"1\" y2=\"23\"/>\n  \t\t<rect height=\"22\" width=\"14\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x=\"5\" y=\"1\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"23\" y1=\"12\" y2=\"12\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"8\" y2=\"8\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"4\" y2=\"4\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"8\" y2=\"8\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"4\" y2=\"4\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"20\" y2=\"20\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"16\" y2=\"16\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"20\" y2=\"20\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"16\" y2=\"16\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>desktop screen</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"12\" x2=\"12\" y1=\"22\" y2=\"18\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"6\" x2=\"18\" y1=\"22\" y2=\"22\"/>\n  \t\t<rect height=\"16\" width=\"22\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x=\"1\" y=\"2\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>settings gear</title>\n  \t<g fill=\"#ffffff\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\">\n  \t\t<circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"3\"/>\n  \t\t<path d=\"M20,12a8.049,8.049,0,0,0-.188-1.713l2.714-2.055-2-3.464L17.383,6.094a7.987,7.987,0,0,0-2.961-1.719L14,1H10L9.578,4.375A7.987,7.987,0,0,0,6.617,6.094L3.474,4.768l-2,3.464,2.714,2.055a7.9,7.9,0,0,0,0,3.426L1.474,15.768l2,3.464,3.143-1.326a7.987,7.987,0,0,0,2.961,1.719L10,23h4l.422-3.375a7.987,7.987,0,0,0,2.961-1.719l3.143,1.326,2-3.464-2.714-2.055A8.049,8.049,0,0,0,20,12Z\" fill=\"none\" stroke=\"#ffffff\"/>\n  \t</g>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Nav.scss'\n\nimport PopcornIcon from './Nucleo/icons/popcorn.jsx'\nimport MovieIcon from './Nucleo/icons/movie.jsx'\nimport ShowIcon from './Nucleo/icons/show.jsx'\nimport GearIcon from './Nucleo/icons/gear.jsx'\n\nclass Nav extends Component {\n  render() {\n    return (\n      <div className='Nav'>\n        <Link to='/app'>\n          <PopcornIcon width={24} height={24} />\n          <p>For you</p>\n        </Link>\n        <Link disabled={Object.entries(this.props.movies).length === 0} to='/app/movies'>\n          <MovieIcon width={24} height={24} />\n          <p>Movies</p>\n        </Link>\n        <Link disabled={Object.entries(this.props.shows).length === 0} to='/app/shows'>\n          <ShowIcon width={24} height={24} />\n          <p>Shows</p>\n        </Link>\n        <Link to='/app/settings'>\n          <GearIcon width={24} height={24} />\n          <p>Settings</p>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows\n  })\n)(Nav)\n","import React, { Component } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport './App.scss'\n\nimport { index } from './actions/indexing'\n\nimport AutomaticIndexing from './services/AutomaticIndexing'\nimport IndexAfterUpdate from './services/IndexAfterUpdate'\nimport MicrosoftAuth from './services/auth/MicrosoftAuth'\n\nimport ForYou from './scenes/ForYou'\nimport Movies from './scenes/Movies'\nimport Movie from './scenes/Movie'\nimport Shows from './scenes/Shows'\nimport Show from './scenes/Show'\nimport Season from './scenes/Season'\nimport Person from './scenes/Person'\nimport Settings from './scenes/Settings'\nimport Find from './scenes/Find'\nimport Loading from './scenes/Loading'\nimport NotFound from './scenes/NotFound'\n\nimport Nav from './components/Nav'\n\nimport { authError } from './selectors/auth'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    // this is required for the login popup to close;\n    // see https://github.com/AzureAD/microsoft-authentication-library-for-js/issues/174\n    new MicrosoftAuth()\n  }\n\n  componentDidMount() {\n    new IndexAfterUpdate(this.props.version, this.props.index).perform() ||\n      new AutomaticIndexing(\n        this.props.automaticIndexing,\n        this.props.lastIndexed,\n        this.props.index\n      ).perform()\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <Loading caption={this.props.loading} />\n    } else {\n      return (\n        <div className='App'>\n          {authError()({ auth: this.props.auth }) && <Redirect to={`${this.props.match.path}/settings`} />}\n\n          <Switch>\n            <Route path={`${this.props.match.path}/`} exact component={ForYou} />\n            <Route path={`${this.props.match.path}/movies`} component={Movies} />\n            <Route path={`${this.props.match.path}/movie/:id`} exact component={Movie} />\n            <Route path={`${this.props.match.path}/shows`} component={Shows} />\n            <Route path={`${this.props.match.path}/show/:id`} exact component={Show} />\n            <Route path={`${this.props.match.path}/season/:id`} exact component={Season} />\n            <Route path={`${this.props.match.path}/person/:id`} exact component={Person} />\n            <Route path={`${this.props.match.path}/settings`} exact component={Settings} />\n            <Route path={`${this.props.match.path}/find`} exact component={Find} />\n            <Route component={NotFound} />\n          </Switch>\n\n          <Nav />\n        </div>\n      )\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    loading: state.loading,\n    version: state.version,\n    auth: state.auth,\n    lastIndexed: state.indexing.lastIndexed,\n    automaticIndexing: state.settings.automaticIndexing\n  }),\n  { index }\n)(App)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Welcome.scss'\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <div className='Welcome'>\n        <h1>Your movies & TV shows. Anywhere.</h1>\n        <div className='Welcome__details'>\n          <h3>Plaain lets you stream and maintain your media library from anywhere. No server needed, no fee required.</h3>\n          <Link to='/app' className='button primary'>Launch</Link>\n          <a href='https://github.com/jonhue/plaain#getting-started' target='_blank' rel='noopener noreferrer' className='button'>How it works</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Welcome\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default withRouter(ScrollToTop)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport { persistStore } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './App'\nimport Welcome from './scenes/Welcome'\nimport NotFound from './scenes/NotFound'\nimport Loading from './scenes/Loading'\n\nimport ScrollToTop from './components/ScrollToTop'\n\nimport './index.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loading caption='Loading...' />} persistor={persistStore(store)}>\n      <Router basename='/plaain'>\n        <ScrollToTop>\n          <Switch>\n            <Route path='/' exact component={Welcome} />\n            <Route path='/app' component={App} />\n            <Route component={NotFound} />\n          </Switch>\n        </ScrollToTop>\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}
{"version":3,"sources":["constants.js","services/auth/MicrosoftAuth.js","actions/loading.js","services/drives/OneDrive.js","services/indexing/IndexFiles.js","services/indexing/IndexMovies.js","services/indexing/IndexShows.js","services/indexing/IndexSeasons.js","services/indexing/IndexEpisodes.js","services/databases/TMDb.js","services/fetching/FetchAllSeasons.js","services/fetching/FetchAllEpisodes.js","services/Parametrize.js","services/fetching/FetchMovie.js","actions/movies.js","services/fetching/FetchShow.js","actions/shows.js","services/fetching/FetchSeason.js","selectors/shows.js","actions/seasons.js","services/fetching/FetchEpisode.js","selectors/seasons.js","actions/episodes.js","actions/indexing.js","actions/version.js","actions/auth.js","reducers/auth.js","reducers/settings.js","reducers/indexing.js","reducers/index.js","reducers/version.js","actions/settings.js","reducers/loading.js","reducers/movies.js","reducers/shows.js","reducers/seasons.js","reducers/episodes.js","store.js","serviceWorker.js","services/AutomaticIndexing.js","services/IndexAfterUpdate.js","components/Cover.js","components/HorizontalSlide.js","selectors/movies.js","scenes/ForYou.js","components/ItemGrid.js","components/VerticalSlide.js","components/Nucleo/icons/zoom.jsx","scenes/Movies.js","scenes/NotFound.js","components/Backdrop.js","components/PersonList.js","components/PlyrPlayer/PlyrCaption.js","components/PlyrPlayer/PlyrSource.js","components/PlyrPlayer.js","scenes/Movie.js","scenes/Shows.js","scenes/Show.js","selectors/episodes.js","scenes/Season.js","scenes/Person.js","selectors/people.js","components/Nucleo/icons/add.jsx","components/Nucleo/icons/dropbox.jsx","components/Nucleo/icons/google.jsx","components/Nucleo/icons/microsoft.jsx","components/Banner.js","selectors/auth.js","scenes/Settings.js","scenes/Find.js","components/Nucleo/icons/soundWave.jsx","scenes/Loading.js","components/Nucleo/icons/popcorn.jsx","components/Nucleo/icons/movie.jsx","components/Nucleo/icons/show.jsx","components/Nucleo/icons/gear.jsx","components/Nav.js","App.js","scenes/Welcome.js","components/ScrollToTop.js","index.js"],"names":["AUTOMATIC_INDEXING","PROVIDERS","MICROSOFT","STORAGE_PROVIDERS","ITEM_TYPES","FILE_TYPES","SOURCE","CAPTION","SOURCE_EXTENSIONS","CAPTION_EXTENSIONS","MicrosoftAuth","this","_userAgentApplication","UserAgentApplication","auth","clientId","config","clientID","silentLogIn","userAgentApplication","acquireTokenSilent","scopes","then","response","accessToken","catch","error","console","log","popupLogIn","loginPopup","prompt","process","loadingBegin","caption","type","payload","OneDrive","_client","Client","init","authProvider","done","client","api","get","itemId","IndexFiles","oneDrive","folderId","_oneDrive","_folderId","children","value","map","item","index","filter","source","fileType","name","file","provider","id","extension","fileExtension","information","fileInformation","mimeType","url","fileName","includes","split","pop","shift","IndexMovies","Promise","movies","movie","all","folder","perform","files","providerId","IndexShows","shows","show","IndexSeasons","seasons","_shows","_seasons","concat","performForShow","season","showId","find","Number","parseInt","IndexEpisodes","episodes","_episodes","performForSeason","handleResponse","episode","seasonId","rp","require","TMDb","query","rateLimiting","uri","base_uri","qs","results","length","seasonNumber","episodeNumber","resolve","setTimeout","api_key","language","headers","json","FetchAllSeasons","_tmdb","tmdb","season_number","FetchAllEpisodes","episode_number","Parametrize","string","_string","toLowerCase","replace","FetchMovie","_movie","findMovie","fetch","path","fetchDetails","fetchCredits","backdropUrl","backdrop_path","overview","posterUrl","poster_path","releaseDate","release_date","runtime","title","trailerLink","movieCredits","cast","castMember","character","gender","profileUrl","profile_path","crew","crewMember","job","fetchMovie","dispatch","fetchedMovie","updateMovie","removeMovie","FetchShow","_show","findShow","firstAirDate","first_air_date","lastAirDate","last_air_date","fetchShow","fetchedShow","updateShow","removeShow","FetchSeason","showName","_season","airDate","air_date","seasonCredits","showsSelector","state","showSelector","createSelector","fetchSeason","getState","fetchedSeason","updateSeason","removeSeason","FetchEpisode","seasonName","_episode","seasonsSelector","seasonSelector","seasonsCastMemberSelector","Object","values","flat","seasonsCrewMemberSelector","fetchEpisode","fetchedEpisode","updateEpisode","removeEpisode","indexBegin","token","cleanupOldItems","keys","awaitFetching","version","updateVersion","indexSuccess","indexFailure","statusCode","logInExpired","newIds","oldIds","removeAction","forEach","items","fetchAction","a","async","logInFailure","logInBegin","logInSuccess","initialState","reduce","o","automaticIndexing","lastIndexed","rootReducer","combineReducers","action","settings","indexing","Date","getTime","loading","newState","persistReducer","key","storage","whitelist","debug","createStore","persistedReducer","applyMiddleware","thunk","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","newVersionAvailable","onUpdate","onSuccess","AutomaticIndexing","setting","indexAction","_setting","_lastIndexed","_indexAction","getFullYear","getMonth","getDate","IndexAfterUpdate","versionUsedForLastIndex","_versionUsedForLastIndex","Cover","className","src","props","alt","width","Component","HorizontalSlide","Swiper","document","querySelector","spaceBetween","slidesPerView","slidesOffsetBefore","slidesOffsetAfter","grabCursor","to","moviesSelector","movieSelector","moviesCastMemberSelector","moviesCrewMemberSelector","ForYou","classList","add","remove","oneMonthAgo","setMonth","date","inProgress","undefined","progress","sort","b","lastWatched","inProgressMoviesSelector","inProgressSeasonsSelector","recentlyWatched","recentlyWatchedSeasonsSelector","entries","href","target","rel","onClick","connect","ItemGrid","VerticalSlide","direction","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","history","replaceState","data-history","height","viewBox","xmlns","fill","stroke","strokeLinecap","strokeWidth","x1","x2","y1","y2","cx","cy","r","Movies","innerWidth","NotFound","Backdrop","PersonList","wrapped","setState","people","slice","person","attribute","toggle","bind","PlyrCaption","kind","label","srcLang","ISO6391","getCode","default","PlyrSource","size","PlyrPlayer","player","Plyr","on","event","detail","plyr","currentTime","updateItemAction","component","dataset","preventExit","stop","style","display","exitedAction","fullscreen","exit","endedAction","crossOrigin","playsInline","controls","download","Movie","params","watch","enter","play","finishedMovie","Math","floor","continue","Shows","Show","toString","episodesSelector","episodesBySeasonSelector","Season","watchableEpisodes","episodesWrapped","currentEpisodeNumber","stoppedEpisode","finishedEpisode","disabled","toDateString","toggleEpisodes","Person","moviesCast","moviesCrew","seasonsCast","seasonsCrew","personSelector","moviesByPersonSelector","seasonsByPersonSelector","roles","Set","role","personRolesSelector","join","points","d","x","y","Banner","text","linkUrl","linkText","authSelector","authTokenSelector","authProviderSelector","authError","some","Settings","updateSettings","notAuthenticated","authenticationExpired","noMediaFound","authenticateMicrosoft","onChange","handleAutomaticIndexingChange","Find","moviesIndex","FlexSearch","showsIndex","URLSearchParams","search","result","autoFocus","placeholder","handleInputChange","strokeMiterlimit","strokeLinejoin","data-made-with","Loading","Nav","App","exact","Welcome","ScrollToTop","prevProps","scrollTo","withRouter","ReactDOM","render","store","persistor","persistStore","basename","getElementById","URL","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"61BAEaA,EACJ,QADIA,EAEF,UAFEA,EAGJ,QAHIA,EAIH,SAGGC,EAAY,CACvBC,UAAW,aAGAC,EAAiB,eAC3BF,EAAUC,UAAY,YAGZE,EACJ,QADIA,EAEL,OAFKA,EAGH,SAHGA,EAIF,UAGEC,EAAa,CACxBC,OAAQ,SACRC,QAAS,WAGEC,EAAoB,CAAC,MAAO,MAAO,MAAO,QAC1CC,EAAqB,CAAC,O,8BC5B7BC,E,WAMJ,aAAe,oBACbC,KAAKC,sBAAwB,IAAIC,IAAqB,CACpDC,KAAM,CACJC,SAAUL,EAAcM,OAAOC,Y,sDAMnC,OAAON,KAAKO,gB,oCAGC,IAAD,OACZ,OAAOP,KAAKQ,qBAAqBC,mBAAmB,CAClDC,OAAQX,EAAcM,OAAOK,SAC5BC,MAAK,SAAAC,GACN,OAAOA,EAASC,eACfC,OAAM,SAAAC,GAEP,OADAC,QAAQC,IAAIF,GACL,EAAKG,kB,mCAIF,IAAD,OACX,OAAOlB,KAAKQ,qBAAqBW,WAAW,CAC1CT,OAAQX,EAAcM,OAAOK,OAC7BU,OAAQ,mBACPT,MAAK,WACN,OAAO,EAAKH,qBAAqBC,mBAAmB,CAClDC,OAAQX,EAAcM,OAAOK,YAE9BC,MAAK,SAAAC,GACN,OAAOA,EAASC,iB,2CAKlB,OAAOb,KAAKC,0B,KA3CVF,EACGM,OAAS,CACdC,SAAUe,uCACVX,OAAQ,CAAC,YAAa,mBA4CXX,QC9CFuB,EAAe,SAAAC,GAAO,MAAK,CACtCC,KAJ2B,gBAK3BC,QAASF,I,yBCqBIG,E,WAvBb,WAAYb,GAAc,oBACxBb,KAAK2B,QAAUC,IAAOC,KAAK,CACzBC,aAAc,SAAAC,GAAI,OAAIA,EAAK,KAAMlB,M,qDAKnC,OAAOb,KAAKgC,OAAOC,IAAI,2CAA2CC,Q,8BAIlE,OAAOlC,KAAKgC,OAAOC,IAAI,0CAA0CC,Q,+BAG1DC,GACP,OAAOnC,KAAKgC,OAAOC,IAAZ,0BAAmCE,EAAnC,cAAsDD,Q,6BAI7D,OAAOlC,KAAK2B,Y,KC6CDS,E,WA3Db,WAAYC,EAAUC,GAAW,oBAC/BtC,KAAKuC,UAAYF,EACjBrC,KAAKwC,UAAYF,E,sDAGR,IAAD,OACR,OAAOtC,KAAKqC,SAASI,SAASzC,KAAKsC,UAAU3B,MAAK,SAAAC,GAChD,OAAOA,EAAS8B,MAAMC,KAAI,SAAAC,GAAI,OAAI,EAAKC,MAAMD,MAC1CE,QAAO,SAAAC,GAAM,OAAc,MAAVA,U,4BAIlBH,GACJ,IAAMpB,EAAOY,EAAWY,SAASJ,EAAKK,MACtC,OAAiB,MAAbL,EAAKM,MAAwB,MAAR1B,EAChB,KAGF,CACL2B,SAAU7D,EAAUC,UACpB6D,GAAIR,EAAKQ,GACT5B,KAAMA,EACNyB,KAAML,EAAKK,KACXI,UAAWjB,EAAWkB,cAAcV,EAAKK,MACzCM,YAAanB,EAAWoB,gBAAgBZ,EAAKK,MAC7CQ,SAAUb,EAAKM,KAAKO,SACpBC,IAAKd,EAAK,mC,+BAyBZ,OAAO5C,KAAKuC,Y,+BAIZ,OAAOvC,KAAKwC,a,gCAzBEmB,GACd,OAAI9D,EAAkB+D,SAASxB,EAAWkB,cAAcK,IAC/CjE,EAAWC,OAElBG,EAAmB8D,SAASxB,EAAWkB,cAAcK,IAE9CjE,EAAWE,QAEX,O,oCAIU+D,GACnB,OAAOA,EAASE,MAAM,KAAKC,Q,sCAGNH,GACrB,OAAOA,EAASE,MAAM,KAAKE,Y,KCjBhBC,E,WA/Bb,WAAYnD,GAAc,oBACxBb,KAAKuC,UAAY,IAAIb,EAASb,G,wJAIjBoD,Q,mBAAkBjE,KAAKqC,SAAS6B,SAASvD,MAAK,SAAAC,GACzD,OAAOA,EAAS8B,MAAMC,KAAI,SAAAC,GAAI,OAAI,EAAKC,MAAMD,U,+BACtC,SAAAsB,GAAM,OAAIA,EAAOpB,QAAO,SAAAqB,GAAK,OAAc,OAAVA,M,UAFrBC,I,gBAEjBzD,K,gKAGMiC,G,2EACS,MAAfA,EAAKyB,O,yCACA,M,iCAGW,IAAIjC,EAAWpC,KAAKqC,SAAUO,EAAKQ,IAAIkB,W,cAArDC,E,yBAEC,CACLpB,SAAU7D,EAAUC,UACpBiC,KAAM/B,EACN+E,WAAY5B,EAAKQ,GACjBH,KAAML,EAAKK,KACXsB,MAAOA,I,gFAKT,OAAOvE,KAAKuC,c,KCDDkC,E,WA5Bb,WAAY5D,GAAc,oBACxBb,KAAKuC,UAAY,IAAIb,EAASb,G,wJAIjBoD,Q,mBAAkBjE,KAAKqC,SAASqC,QAAQ/D,MAAK,SAAAC,GACxD,OAAOA,EAAS8B,MAAMC,KAAI,SAAAC,GAAI,OAAI,EAAKC,MAAMD,U,+BACtC,SAAA8B,GAAK,OAAIA,EAAM5B,QAAO,SAAA6B,GAAI,OAAa,OAATA,M,UAFlBP,I,gBAEjBzD,K,gKAGMiC,G,qEACS,MAAfA,EAAKyB,O,yCACA,M,gCAGF,CACLlB,SAAU7D,EAAUC,UACpBiC,KAAM/B,EACN+E,WAAY5B,EAAKQ,GACjBH,KAAML,EAAKK,O,sEAKb,OAAOjD,KAAKuC,c,aCqBDqC,E,WA7Cb,WAAY/D,EAAa6D,EAAOG,GAAU,oBACxC7E,KAAKuC,UAAY,IAAIb,EAASb,GAC9Bb,KAAK8E,OAASJ,EACd1E,KAAK+E,SAAWF,E,oJAIT,IAAGG,O,mCAAgBf,QAAQG,IAChCpE,KAAK0E,MAAM/B,KAAI,SAAAgC,GAAI,OAAI,EAAKM,eAAeN,EAAM,EAAKE,c,uLAIrCF,EAAME,G,4FACZ7E,KAAKqC,SAASI,SAASkC,EAAKH,YAAY7D,MAAK,SAAAC,GACxD,OAAOiE,EAAQ/B,QAAO,SAAAoC,GAAM,OAAIA,EAAOC,SAAWR,EAAKvB,MAAIT,KAAI,SAAAuC,GAC7D,IAAMtC,EAAOhC,EAAS8B,MAAM0C,MAAK,SAAAxC,GAC/B,OAAOsC,EAAO9B,KAAP,UAAiBuB,EAAKvB,GAAtB,YAA4BiC,OAAOC,SAAS1C,EAAKK,UAG1D,OAAIL,EACK,eACFsC,EADL,CAEE/B,SAAU7D,EAAUC,UACpBiF,WAAY5B,EAAKQ,KAGZ8B,S,wHAOb,OAAOlF,KAAKuC,Y,4BAIZ,OAAOvC,KAAK8E,S,8BAIZ,OAAO9E,KAAK+E,a,KCuBDQ,E,WA9Db,WAAY1E,EAAagE,EAASW,GAAW,oBAC3CxF,KAAKuC,UAAY,IAAIb,EAASb,GAC9Bb,KAAK+E,SAAWF,EAChB7E,KAAKyF,UAAYD,E,oJAIV,IAAGR,O,mCAAgBf,QAAQG,IAChCpE,KAAK6E,QAAQlC,KAAI,SAAAuC,GAAM,OAAI,EAAKQ,iBAAiBR,EAAQ,EAAKM,e,yLAI3CN,EAAQM,G,iFACzBN,EAAOV,W,0CACIxE,KAAKqC,SAASI,SAASyC,EAAOV,YACxC7D,MAAK,SAAAC,GAAQ,OAAI,EAAK+E,eAAe/E,EAAUsE,EAAQM,O,wEAEnDA,EAAS1C,QAAO,SAAA8C,GAAO,OAAIA,EAAQC,WAAaX,EAAO9B,O,sFAI7CxC,EAAUsE,EAAQM,G,uGACxBvB,QAAQG,IACnBoB,EAAS1C,QAAO,SAAA8C,GAAO,OAAIA,EAAQC,WAAaX,EAAO9B,MACpDT,KAAI,SAAAiD,GACH,OAAO,EAAK/C,MACV+C,EACAhF,EAAS8B,MAAM0C,MAAK,SAAAxC,GAClB,OAAOgD,EAAQxC,KAAR,UAAkB8B,EAAO9B,GAAzB,YAA+BiC,OAAOC,SAAS1C,EAAKK,gB,2GAO3D2C,EAAShD,G,4EACfA,E,0CACkB,IAAIR,EAAWpC,KAAKqC,SAAUO,EAAKQ,IAAIkB,W,cAArDC,E,wCAEDqB,E,CACHzC,SAAU7D,EAAUC,UACpBiF,WAAY5B,EAAKQ,GACjBmB,MAAOA,K,gCAGFqB,G,gFAKT,OAAO5F,KAAKuC,Y,8BAIZ,OAAOvC,KAAK+E,W,+BAIZ,OAAO/E,KAAKyF,c,KCjEVK,EAAKC,EAAQ,KAEbC,E,kGAcYC,G,4FACRD,EAAKE,gB,gCACJJ,EAAG,eACLE,EAAK3F,OADD,CAEP8F,IAAI,GAAD,OAAKH,EAAKI,SAAV,iBACHC,GAAG,eAAKL,EAAK3F,OAAOgG,GAAlB,CAAsBJ,aACvBtF,MAAK,SAAAC,GACN,OAAIA,EAAS0F,QAAQC,OAAS,EACrB,KAGF3F,EAAS0F,QAAQ,GAAGlD,O,sEAIhB6C,G,4FACPD,EAAKE,gB,gCACJJ,EAAG,eACLE,EAAK3F,OADD,CAEP8F,IAAI,GAAD,OAAKH,EAAKI,SAAV,cACHC,GAAG,eAAKL,EAAK3F,OAAOgG,GAAlB,CAAsBJ,aACvBtF,MAAK,SAAAC,GACN,OAAIA,EAAS0F,QAAQC,OAAS,EACrB,KAGF3F,EAAS0F,QAAQ,GAAGlD,O,mEAInBA,G,4FACJ4C,EAAKE,gB,gCACJJ,EAAG,eAAIE,EAAK3F,OAAV,CAAkB8F,IAAI,GAAD,OAAKH,EAAKI,SAAV,kBAA4BhD,O,0EAGzCA,G,4FACX4C,EAAKE,gB,gCACJJ,EAAG,eAAIE,EAAK3F,OAAV,CAAkB8F,IAAI,GAAD,OAAKH,EAAKI,SAAV,kBAA4BhD,EAA5B,gB,kEAGrBA,G,4FACH4C,EAAKE,gB,gCACJJ,EAAG,eAAIE,EAAK3F,OAAV,CAAkB8F,IAAI,GAAD,OAAKH,EAAKI,SAAV,eAAyBhD,O,oEAG5C+B,EAAQqB,G,4FACbR,EAAKE,gB,gCACJJ,EAAG,eACLE,EAAK3F,OADD,CAEP8F,IAAI,GAAD,OAAKH,EAAKI,SAAV,eAAyBjB,EAAzB,mBAA0CqB,O,2EAI7BrB,EAAQqB,G,4FACpBR,EAAKE,gB,gCACJJ,EAAG,eACLE,EAAK3F,OADD,CAEP8F,IAAI,GAAD,OAAKH,EAAKI,SAAV,eAAyBjB,EAAzB,mBAA0CqB,EAA1C,gB,qEAIOrB,EAAQqB,EAAcC,G,4FAC5BT,EAAKE,gB,gCACJJ,EAAG,eACLE,EAAK3F,OADD,CAEP8F,IAAK,UAAGH,EAAKI,SAAR,eAAuBjB,EAAvB,mBAAwCqB,EAAxC,uBACIC,O,0KAOL,IAAIxC,SAAQ,SAAAyC,GAAO,OAAIC,WAAWD,EAAS,S,8CAvF/CV,EACG3F,OAAS,CACdgG,GAAI,CACFO,QAASvF,mCACTwF,SAAU,SAEZC,QAAS,CACP,aAAc,mBAEhBC,MAAM,GATJf,EAYGI,SAAW,+BA+ELJ,QC1DAgB,E,WA9Bb,WAAYtC,GAAQ,oBAClB1E,KAAK8E,OAASJ,EACd1E,KAAKiH,MAAQ,IAAIjB,E,oJAIV,IAAGhB,O,mCAAgBf,QAAQG,IAChCpE,KAAK0E,MAAM/B,KAAI,SAAAgC,GACb,OAAO,EAAKuC,KAAKvC,KAAKA,EAAKvB,IAAIzC,MAAK,SAAAC,GAClC,OAAOA,EAASiE,QAAQlC,KAAI,SAAAuC,GAAM,MAAK,CACrC9B,GAAG,GAAD,OAAKuB,EAAKvB,GAAV,YAAgB8B,EAAOiC,eACzB3F,KAAM/B,EACN+G,aAActB,EAAOiC,cACrBhC,OAAQR,EAAKvB,GACboB,WAAY,iB,8KAQpB,OAAOxE,KAAK8E,S,2BAIZ,OAAO9E,KAAKiH,U,KCKDG,E,WA/Bb,WAAYvC,GAAU,oBACpB7E,KAAK+E,SAAWF,EAChB7E,KAAKiH,MAAQ,IAAIjB,E,oJAIV,IAAGhB,O,mCAAgBf,QAAQG,IAChCpE,KAAK6E,QAAQlC,KAAI,SAAAuC,GACf,OAAO,EAAKgC,KAAKhC,OAAOA,EAAOC,OAAQD,EAAOsB,cAC3C7F,MAAK,SAAAC,GACJ,OAAOA,EAAS4E,SAAS7C,KAAI,SAAAiD,GAAO,MAAK,CACvCxC,GAAG,GAAD,OAAK8B,EAAO9B,GAAZ,YAAkBwC,EAAQyB,gBAC5B7F,KAAM/B,EACNgH,cAAeb,EAAQyB,eACvBxB,SAAUX,EAAO9B,GACjBoB,WAAY,iB,gLAQtB,OAAOxE,KAAK+E,W,2BAIZ,OAAO/E,KAAKiH,U,KClBDK,E,WAbb,WAAYC,GAAS,oBACnBvH,KAAKwH,QAAUD,E,sDAIf,OAAOvH,KAAKuH,OAAOE,cAAcC,QAAQ,MAAO,O,6BAIhD,OAAO1H,KAAKwH,Y,KCkEDG,E,WAxEb,WAAYxD,GAAQ,oBAClBnE,KAAK4H,OAASzD,EACdnE,KAAKiH,MAAQ,IAAIjB,E,sDAGR,IAAD,OACR,OAAOhG,KAAKkH,KAAKW,UAAU7H,KAAKmE,MAAMlB,MACnCtC,MAAK,SAAAyC,GAAE,OAAI,EAAK0E,MAAM1E,Q,4BAGfA,G,qEACVpD,KAAKmE,MAAMf,GAAKA,EAChBpD,KAAKmE,MAAM4D,KAAX,qBAAgC/H,KAAKmE,MAAMf,IAErB,OAAlBpD,KAAKmE,MAAMf,G,2EAITa,QAAQG,IAAI,CAChBpE,KAAKgI,eACLhI,KAAKiI,kB,gCAGAjI,KAAKmE,O,sFAGE,IAAD,OACb,OAAOnE,KAAKkH,KAAK/C,MAAMnE,KAAKmE,MAAMf,IAC/BzC,MAAK,SAAAC,GACJ,EAAKuD,MAAM+D,YAAX,6CACwCtH,EAASuH,eACjD,EAAKhE,MAAMiE,SAAWxH,EAASwH,SAC/B,EAAKjE,MAAMkE,UAAX,6CACwCzH,EAAS0H,aACjD,EAAKnE,MAAMoE,YAAc3H,EAAS4H,aAClC,EAAKrE,MAAMsE,QAAU7H,EAAS6H,QAC9B,EAAKtE,MAAMlB,KAAOrC,EAAS8H,MAC3B,EAAKvE,MAAMwE,YACT,0DACG,IAAIrB,EAAY,EAAKnD,MAAMlB,MAAMqB,UADpC,0B,qCAKQ,IAAD,OACb,OAAOtE,KAAKkH,KAAK0B,aAAa5I,KAAKmE,MAAMf,IACtCzC,MAAK,SAAAC,GACJ,EAAKuD,MAAM0E,KAAOjI,EAASiI,KAAKlG,KAAI,SAAAmG,GAAU,MAAK,CACjD1F,GAAI0F,EAAW1F,GACf2F,UAAWD,EAAWC,UACtB9F,KAAM6F,EAAW7F,KACjB+F,OAAQF,EAAWE,OACnBC,WAAW,sCAAD,OAAwCH,EAAWI,kBAE/D,EAAK/E,MAAMgF,KAAOvI,EAASuI,KAAKxG,KAAI,SAAAyG,GAAU,MAAK,CACjDhG,GAAIgG,EAAWhG,GACfiG,IAAKD,EAAWC,IAChBpG,KAAMmG,EAAWnG,KACjB+F,OAAQI,EAAWJ,OACnBC,WAAW,sCAAD,OAAwCG,EAAWF,uB,4BAMnE,OAAOlJ,KAAK4H,S,2BAIZ,OAAO5H,KAAKiH,U,KCnEHqC,EAAa,SAAbA,EAAanF,GACxB,OAAO,SAAAoF,GACL,OAAO,IAAI5B,EAAWxD,GAAOG,UAAU3D,MAAK,SAAA6I,GAC1CD,EAASE,GAAYD,OACpB1I,OAAM,kBAAMyI,EAASD,EAAWnF,SAI1BuF,GAAc,SAAAtG,GAAE,MAAK,CAChC5B,KAZ0B,eAa1BC,QAAS2B,IAGEqG,GAAc,SAAAtF,GAAK,MAAK,CACnC3C,KAhB0B,eAiB1BC,QAAS0C,IC8BIwF,G,WA/Cb,WAAYhF,GAAO,oBACjB3E,KAAK4J,MAAQjF,EACb3E,KAAKiH,MAAQ,IAAIjB,E,sDAGR,IAAD,OACR,OAAOhG,KAAKkH,KAAK2C,SAAS7J,KAAK2E,KAAK1B,MAAMtC,MAAK,SAAAyC,GAAE,OAAI,EAAK0E,MAAM1E,Q,4BAGtDA,G,qEACVpD,KAAK2E,KAAKvB,GAAKA,EACfpD,KAAK2E,KAAKoD,KAAV,oBAA8B/H,KAAK2E,KAAKvB,IAEnB,OAAjBpD,KAAK2E,KAAKvB,G,2EAIRa,QAAQG,IAAI,CAChBpE,KAAKgI,kB,gCAGAhI,KAAK2E,M,sFAGE,IAAD,OACb,OAAO3E,KAAKkH,KAAKvC,KAAK3E,KAAK2E,KAAKvB,IAC7BzC,MAAK,SAAAC,GACJ,EAAK+D,KAAKuD,YAAV,6CACwCtH,EAASuH,eACjD,EAAKxD,KAAKmF,aAAelJ,EAASmJ,eAClC,EAAKpF,KAAKqF,YAAcpJ,EAASqJ,cACjC,EAAKtF,KAAK1B,KAAOrC,EAASqC,KAC1B,EAAK0B,KAAKyD,SAAWxH,EAASwH,SAC9B,EAAKzD,KAAK0D,UAAV,6CACwCzH,EAAS0H,kB,2BAKrD,OAAOtI,KAAK4J,Q,2BAIZ,OAAO5J,KAAKiH,U,KCzCHiD,GAAY,SAAZA,EAAYvF,GACvB,OAAO,SAAA4E,GACL,OAAO,IAAII,GAAUhF,GAAML,UAAU3D,MAAK,SAAAwJ,GACxCZ,EAASa,GAAWD,OACnBrJ,OAAM,kBAAMyI,EAASW,EAAUvF,SAIzB0F,GAAa,SAAAjH,GAAE,MAAK,CAC/B5B,KAZyB,cAazBC,QAAS2B,IAGEgH,GAAa,SAAAzF,GAAI,MAAK,CACjCnD,KAhByB,cAiBzBC,QAASkD,ICmDI2F,G,WAnEb,WAAYnF,EAAQoF,EAAUrF,GAAS,oBACrClF,KAAK4J,MAAQ,CAAExG,GAAI+B,EAAQlC,KAAMsH,GACjCvK,KAAKwK,QAAUtF,EACflF,KAAKiH,MAAQ,IAAIjB,E,+HAIjBhG,KAAKkF,OAAO9B,GAAZ,UAAoBpD,KAAK2E,KAAKvB,GAA9B,YAAoCpD,KAAKkF,OAAOsB,cAChDxG,KAAKkF,OAAO6C,KAAZ,sBAAkC/H,KAAKkF,OAAO9B,I,mBAExCa,QAAQG,IAAI,CAChBpE,KAAKgI,eACLhI,KAAKiI,kB,gCAGAjI,KAAKkF,Q,sFAGE,IAAD,OACb,OAAOlF,KAAKkH,KAAKhC,OAAOlF,KAAK2E,KAAKvB,GAAIpD,KAAKkF,OAAOsB,cAC/C7F,MAAK,SAAAC,GACJ,EAAKsE,OAAOuF,QAAU7J,EAAS8J,SAC/B,EAAKxF,OAAOjC,KAAOrC,EAASqC,KAC5B,EAAKiC,OAAOkD,SAAWxH,EAASwH,SAChC,EAAKlD,OAAOmD,UAAZ,6CACwCzH,EAAS0H,aACjD,EAAKpD,OAAOyD,YACV,0DACG,IAAIrB,EAAY,EAAK3C,KAAK1B,MAAMqB,UADnC,eAEG,IAAIgD,EAAY,EAAKpC,OAAOjC,MAAMqB,UAFrC,KAGA,oC,qCAIQ,IAAD,OACb,OAAOtE,KAAKkH,KAAKyD,cAAc3K,KAAK2E,KAAKvB,GAAIpD,KAAKkF,OAAOsB,cACtD7F,MAAK,SAAAC,GACJ,EAAKsE,OAAO2D,KAAOjI,EAASiI,KAAKlG,KAAI,SAAAmG,GAAU,MAAK,CAClD1F,GAAI0F,EAAW1F,GACf2F,UAAWD,EAAWC,UACtB9F,KAAM6F,EAAW7F,KACjB+F,OAAQF,EAAWE,OACnBC,WAAW,sCAAD,OAAwCH,EAAWI,kBAE/D,EAAKhE,OAAOiE,KAAOvI,EAASuI,KAAKxG,KAAI,SAAAyG,GAAU,MAAK,CAClDhG,GAAIgG,EAAWhG,GACfiG,IAAKD,EAAWC,IAChBpG,KAAMmG,EAAWnG,KACjB+F,OAAQI,EAAWJ,OACnBC,WAAW,sCAAD,OAAwCG,EAAWF,uB,2BAMnE,OAAOlJ,KAAK4J,Q,6BAIZ,OAAO5J,KAAKwK,U,2BAIZ,OAAOxK,KAAKiH,U,cCjEV2D,GAAgB,SAAAC,GAAK,OAAIA,EAAMnG,OAExBoG,GAAe,SAAA1H,GAC1B,OAAO2H,aACLH,IACA,SAAAlG,GAAK,OAAIA,EAAMtB,OCAN4H,GAAc,SAAdA,EAAc9F,GACzB,OAAO,SAACqE,EAAU0B,GAChB,IAAMtG,EAAOmG,GAAa5F,EAAOC,OAApB2F,CAA4BG,KACzC,OAAO,IAAIX,GACT3F,EAAKvB,GACLuB,EAAK1B,KACLiC,GACAZ,UAAU3D,MAAK,SAAAuK,GACf3B,EAAS4B,GAAaD,OACrBpK,OAAM,kBAAMyI,EAASyB,EAAY9F,SAI3BkG,GAAe,SAAAhI,GAAE,MAAK,CACjC5B,KAjB2B,gBAkB3BC,QAAS2B,IAGE+H,GAAe,SAAAjG,GAAM,MAAK,CACrC1D,KArB2B,gBAsB3BC,QAASyD,IC4BImG,G,WApDb,WACElG,EACAoF,EACA/D,EACA8E,EACA1F,GACC,oBACD5F,KAAK4J,MAAQ,CAAExG,GAAI+B,EAAQlC,KAAMsH,GACjCvK,KAAKwK,QAAU,CAAEhE,eAAcvD,KAAMqI,GACrCtL,KAAKuL,SAAW3F,EAChB5F,KAAKiH,MAAQ,IAAIjB,E,+HAIjBhG,KAAK4F,QAAQxC,GACX,UAAGpD,KAAK2E,KAAKvB,GAAb,YAAmBpD,KAAKkF,OAAOsB,aAA/B,eACGxG,KAAK4F,QAAQa,e,mBAEZxC,QAAQG,IAAI,CAChBpE,KAAKgI,kB,gCAGAhI,KAAK4F,S,sFAGE,IAAD,OACb,OAAO5F,KAAKkH,KAAKtB,QACf5F,KAAK2E,KAAKvB,GAAIpD,KAAKkF,OAAOsB,aAAcxG,KAAK4F,QAAQa,eACrD9F,MAAK,SAAAC,GACL,EAAKgF,QAAQ6E,QAAU7J,EAAS8J,SAChC,EAAK9E,QAAQ3C,KAAOrC,EAASqC,KAC7B,EAAK2C,QAAQwC,SAAWxH,EAASwH,c,2BAKnC,OAAOpI,KAAK4J,Q,6BAIZ,OAAO5J,KAAKwK,U,8BAIZ,OAAOxK,KAAKuL,W,2BAIZ,OAAOvL,KAAKiH,U,KCjDVuE,GAAkB,SAAAX,GAAK,OAAIA,EAAMhG,SAE1B4G,GAAiB,SAAArI,GAC5B,OAAO2H,aACLS,IACA,SAAA3G,GAAO,OAAIA,EAAQzB,OAiDVsI,GAA4B,SAAAtI,GACvC,OAAO2H,aACLS,IACA,SAAA3G,GACE,OAAO8G,OAAOC,OAAO/G,GAASlC,KAAI,SAAAuC,GAAM,OAAIA,EAAO2D,QAAMgD,OACtD/I,QAAO,SAAAgG,GAAU,OAAIA,EAAW1F,KAAOA,SAKnC0I,GAA4B,SAAA1I,GACvC,OAAO2H,aACLS,IACA,SAAA3G,GACE,OAAO8G,OAAOC,OAAO/G,GAASlC,KAAI,SAAAuC,GAAM,OAAIA,EAAOiE,QAAM0C,OACtD/I,QAAO,SAAAsG,GAAU,OAAIA,EAAWhG,KAAOA,SC/DnC2I,GAAe,SAAfA,EAAenG,GAC1B,OAAO,SAAC2D,EAAU0B,GAChB,IAAM/F,EAASuG,GAAe7F,EAAQC,SAAvB4F,CAAiCR,KAC1CtG,EAAOmG,GAAa5F,EAAOC,OAApB2F,CAA4BG,KACzC,OAAO,IAAII,GACT1G,EAAKvB,GACLuB,EAAK1B,KACLiC,EAAOsB,aACPtB,EAAOjC,KACP2C,GACAtB,UAAU3D,MAAK,SAAAqL,GACfzC,EAAS0C,GAAcD,OACtBlL,OAAM,kBAAMyI,EAASwC,EAAanG,SAI5BsG,GAAgB,SAAA9I,GAAE,MAAK,CAClC5B,KApB4B,iBAqB5BC,QAAS2B,IAGE6I,GAAgB,SAAArG,GAAO,MAAK,CACvCpE,KAxB4B,iBAyB5BC,QAASmE,ICVE/C,GAAQ,WACnB,OAAO,SAAC0G,EAAU0B,GAChB1B,EAASjI,EAAa,gBACtBiI,EAAS4C,MAET,IAAInI,EAAYiH,IAAW9K,KAAKb,EAAUC,WAAW6M,OAAO9H,UACzD3D,MAAK,SAAAuD,GAOJ,OANAmI,GACE9C,EACArF,EAAOvB,KAAI,SAAAwB,GAAK,OAAIA,EAAMf,MAC1BuI,OAAOW,KAAKrB,IAAW/G,QACvBwF,IAEK6C,GAAchD,EAAUrF,EAAQoF,MACtC3I,MAAK,WACN,OAAO,IAAI8D,EACTwG,IAAW9K,KAAKb,EAAUC,WAAW6M,OACrC9H,aACD3D,MAAK,SAAA+D,GAON,OANA2H,GACE9C,EACA7E,EAAM/B,KAAI,SAAAgC,GAAI,OAAIA,EAAKvB,MACvBuI,OAAOW,KAAKrB,IAAWvG,OACvB2F,IAEKkC,GAAchD,EAAU7E,EAAOwF,OACrCvJ,MAAK,WACN,OAAO,IAAIqG,EAAgB2E,OAAOC,OAAOX,IAAWvG,QAAQJ,aAC3D3D,MAAK,SAAAkE,GACN,OAAO,IAAID,EACTqG,IAAW9K,KAAKb,EAAUC,WAAW6M,MACrCT,OAAOC,OAAOX,IAAWvG,OACzBG,GACAP,aACD3D,MAAK,SAAAkE,GAON,OANAwH,GACE9C,EACA1E,EAAQlC,KAAI,SAAAuC,GAAM,OAAIA,EAAO9B,MAC7BuI,OAAOW,KAAKrB,IAAWpG,SACvBuG,IAEKmB,GAAchD,EAAU1E,EAASmG,OACvCrK,MAAK,WACN,OAAO,IAAIyG,EAAiBuE,OAAOC,OAAOX,IAAWpG,UAAUP,aAC9D3D,MAAK,SAAA6E,GACN,OAAO,IAAID,EACT0F,IAAW9K,KAAKb,EAAUC,WAAW6M,MACrCT,OAAOC,OAAOX,IAAWpG,SACzBW,GACAlB,aACD3D,MAAK,SAAA6E,GAON,OANA6G,GACE9C,EACA/D,EAAS7C,KAAI,SAAAiD,GAAO,OAAIA,EAAQxC,MAChCuI,OAAOW,KAAKrB,IAAWzF,UACvB0G,IAEKK,GAAchD,EAAU/D,EAAUuG,OACxCpL,MAAK,WACN4I,EC9EqB,SAAAiD,GAAO,MAAK,CACvChL,KAH4B,iBAI5BC,QAAS+K,GD4EMC,CvBhFM,UuBiFflD,EAASmD,MACTnD,ErB1E0B,CAChC/H,KAR0B,oBqBkFnBV,OAAM,SAAAC,GACPC,QAAQC,IAAIF,GACZwI,EAASoD,GAAa5L,IACtBwI,ErB9E0B,CAChC/H,KAR0B,iBqBuFK,MAArBT,EAAM6L,YACRrD,EAASsD,GAAavN,EAAUC,iBAM1C,SAAS8M,GAAgB9C,EAAUuD,EAAQC,EAAQC,GACjDD,EAAOE,SAAQ,SAAA7J,GACR0J,EAAOlJ,SAASR,IACnBmG,EAASyD,EAAa5J,OAK5B,SAAemJ,GAAchD,EAAU2D,EAAOC,GAA9C,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACQnJ,QAAQG,IAAI8I,EAAMvK,KAAI,SAAAC,GAC1B,OAAO2G,EAAS4D,EAAYvK,SAFhC,gCAISsK,GAJT,qCAOA,IAAMf,GAAa,iBAAO,CACxB3K,KA9FyB,gBAiGrBkL,GAAe,iBAAO,CAC1BlL,KAjG2B,kBAoGvBmL,GAAe,SAAA5L,GAAK,MAAK,CAC7BS,KApG2B,gBAqG3BC,QAASV,IE1FE8L,GAAe,SAAA1J,GAC1B,OAAO,SAAAoG,GAAQ,OAAIA,EAAS+D,GAAanK,EAAU,cAG/CoK,GAAa,SAAApK,GAAQ,MAAK,CAC9B3B,KA5B0B,eA6B1BC,QAAS0B,IAGLqK,GAAe,SAACrK,EAAUiJ,GAAX,MAAsB,CACzC5K,KAhC4B,iBAiC5BC,QAAS,CAAE0B,WAAUiJ,WAGjBkB,GAAe,SAACnK,EAAUpC,GAAX,MAAsB,CACzCS,KApC4B,iBAqC5BC,QAAS,CAAE0B,WAAUpC,WC1CjB0M,GAAe9B,OAAOC,OAAOtM,GAAWoO,QAAO,SAACC,EAAGxK,GAAJ,sBAChDwK,EADgD,eAElDxK,EAAW,CACViJ,MAAO,KACPrL,MAAO,UAEP,ICNE0M,GAAe,CACnBG,kBAAmBvO,GCHfoO,GAAe,CACnBI,YAAa,EACb9M,MAAO,M,kBCSH+M,GAAcC,YAAgB,CAClCvB,QCRa,WAAmC,IAAlC3B,EAAiC,uD9BN1B,Q8BMemD,EAAW,uCAC/C,OAAQA,EAAOxM,MACf,INR4B,iBMS1B,OAAOwM,EAAOvM,QAChB,QACE,OAAOoJ,IDIT1K,KHHa,WAAmC,IAAlC0K,EAAiC,uDAAzB4C,GAAcO,EAAW,uCAC/C,OAAQA,EAAOxM,MACf,IDP0B,eCQxB,OAAO,eACFqJ,EADL,eAEGmD,EAAOvM,QAFV,eAGOoJ,EAAMmD,EAAOvM,SAHpB,CAIIV,MAAO,SAGb,IDd4B,iBCe1B,OAAO,eACF8J,EADL,eAEGmD,EAAOvM,QAAQ0B,SAFlB,eAGO0H,EAAMmD,EAAOvM,QAAQ0B,UAH5B,CAIIiJ,MAAO4B,EAAOvM,QAAQ2K,MACtBrL,MAAO,SAGb,IDtB4B,iBCuB1B,OAAO,eACF8J,EADL,eAEGmD,EAAOvM,QAAQ0B,SAFlB,eAGO0H,EAAMmD,EAAOvM,QAAQ0B,UAH5B,CAIIpC,MAAOiN,EAAOvM,QAAQV,UAG5B,QACE,OAAO8J,IGxBToD,SFRa,WAAmC,IAAlCpD,EAAiC,uDAAzB4C,GAAcO,EAAW,uCAC/C,OAAQA,EAAOxM,MACf,IIV6B,kBJW3B,OAAO,eACFqJ,EADL,GAEKmD,EAAOvM,SAEd,QACE,OAAOoJ,IECTqD,SDVa,WAAmC,IAAlCrD,EAAiC,uDAAzB4C,GAAcO,EAAW,uCAC/C,OAAQA,EAAOxM,MACf,ILQyB,cKPvB,OAAO,eACFqJ,EADL,CAEE9J,MAAO,OAEX,ILI2B,gBKHzB,OAAO,eACF8J,EADL,CAEEgD,aAAa,IAAIM,MAAOC,YAE5B,ILA2B,gBKCzB,OAAO,eACFvD,EADL,CAEE9J,MAAOiN,EAAOvM,UAElB,QACE,OAAOoJ,ICPTwD,QGda,WAAmC,IAAlCxD,EAAiC,wDAAXmD,EAAW,uCAC/C,OAAQA,EAAOxM,MACf,I9BN2B,gB8BOzB,OAAOwM,EAAOvM,QAChB,I9BP0B,e8BQxB,OAAO,EACT,QACE,OAAOoJ,IHQT3G,OIjBa,WAAyB,IAAxB2G,EAAuB,uDAAf,GAAImD,EAAW,uCACrC,OAAQA,EAAOxM,MACf,InBF0B,emBEP,MAERwM,EAAOvM,QAAoB6M,GAAazD,EAFhC,gBAEgCA,EAFhC,gBAIjB,OAAOyD,EAET,InBP0B,emBQxB,OAAO,eACFzD,EADL,eAEGmD,EAAOvM,QAAQ2B,GAFlB,eAGOyH,EAAMmD,EAAOvM,QAAQ2B,IAH5B,GAIO4K,EAAOvM,WAGhB,QACE,OAAOoJ,IJCTnG,MKlBa,WAAyB,IAAxBmG,EAAuB,uDAAf,GAAImD,EAAW,uCACrC,OAAQA,EAAOxM,MACf,IlBFyB,ckBEP,MAEPwM,EAAOvM,QAAmB6M,GAAazD,EAFhC,gBAEgCA,EAFhC,gBAIhB,OAAOyD,EAET,IlBPyB,ckBQvB,OAAO,eACFzD,EADL,eAEGmD,EAAOvM,QAAQ2B,GAFlB,eAGOyH,EAAMmD,EAAOvM,QAAQ2B,IAH5B,GAIO4K,EAAOvM,WAGhB,QACE,OAAOoJ,ILEThG,QMnBa,WAAyB,IAAxBgG,EAAuB,uDAAf,GAAImD,EAAW,uCACrC,OAAQA,EAAOxM,MACf,IhBA2B,gBgBAP,MAETwM,EAAOvM,QAAqB6M,GAAazD,EAFhC,gBAEgCA,EAFhC,gBAIlB,OAAOyD,EAET,IhBL2B,gBgBMzB,OAAO,eACFzD,EADL,eAEGmD,EAAOvM,QAAQ2B,GAFlB,eAGOyH,EAAMmD,EAAOvM,QAAQ2B,IAH5B,GAIO4K,EAAOvM,WAGhB,QACE,OAAOoJ,INGTrF,SOpBa,WAAyB,IAAxBqF,EAAuB,uDAAf,GAAImD,EAAW,uCACrC,OAAQA,EAAOxM,MACf,IdC4B,iBcDP,MAEVwM,EAAOvM,QAAsB6M,GAAazD,EAFhC,gBAEgCA,EAFhC,gBAInB,OAAOyD,EAET,IdJ4B,iBcK1B,OAAO,eACFzD,EADL,eAEGmD,EAAOvM,QAAQ2B,GAFlB,eAGOyH,EAAMmD,EAAOvM,QAAQ2B,IAH5B,GAIO4K,EAAOvM,WAGhB,QACE,OAAOoJ,MPMI0D,eAAe,CAC5BC,IAAK,OACLC,QAASA,IACTC,UAAW,CACT,UACA,OACA,WACA,WACA,SACA,QACA,UACA,YAEFC,OAAOtN,GACNyM,IQnCYc,eACbC,GACAC,YAAgBC,M,UCMZC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAwCN,SAASC,GAAgBC,EAAOlP,GAC9BmP,UAAUC,cACPC,SAASH,GACT5O,MAAK,SAAAgP,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhF,QACf2E,UAAUC,cAAcO,YAI1BhP,QAAQC,IACN,iHAMFiO,OAAOe,qBAAsB,EAGzB5P,GAAUA,EAAO6P,UACnB7P,EAAO6P,SAASP,KAMlB3O,QAAQC,IAAI,sCAGRZ,GAAUA,EAAO8P,WACnB9P,EAAO8P,UAAUR,WAO5B7O,OAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA,M,4BC7DlDqP,I,kBAtCb,WAAYC,EAASxC,EAAayC,GAAc,oBAC9CtQ,KAAKuQ,SAAWF,EAChBrQ,KAAKwQ,aAAe3C,EACpB7N,KAAKyQ,aAAeH,E,sDAIpB,OAAItQ,KAAKqQ,UAAYhR,KAKnBW,KAAKqQ,UAAYhR,IACjB,IAAI8O,MAAOuC,gBAAkB,IAAIvC,KAAKnO,KAAK6N,aAAa6C,gBACxD,IAAIvC,MAAOwC,aAAe,IAAIxC,KAAKnO,KAAK6N,aAAa8C,YACpD3Q,KAAKqQ,UAAYhR,IAChB,IAAI8O,MAAOyC,YAAc,IAAIzC,KAAKnO,KAAK6N,aAAa+C,aAEtD5Q,KAAKsQ,eACE,M,8BAOT,OAAOtQ,KAAKuQ,W,kCAIZ,OAAOvQ,KAAKwQ,e,kCAIZ,OAAOxQ,KAAKyQ,iB,MCXDI,G,WAvBb,WAAYC,EAAyBR,GAAc,oBACjDtQ,KAAK+Q,yBAA2BD,EAChC9Q,KAAKyQ,aAAeH,E,sDAIpB,MxCTmB,UwCSftQ,KAAK8Q,0BACP9Q,KAAKsQ,eACE,K,8CAOT,OAAOtQ,KAAK+Q,2B,kCAIZ,OAAO/Q,KAAKyQ,iB,uBCXDO,I,yMANX,OACE,yBAAKC,UAAU,QAAQC,IAAKlR,KAAKmR,MAAMzN,IAAK0N,IAAKpR,KAAKmR,MAAMC,IAAKC,MAAOrR,KAAKmR,MAAME,Y,GAHrEC,cC+CLC,G,+LAxCX,IAAIC,KACFC,SAASC,cAAT,2BACsB1R,KAAKmR,MAAM/N,GADjC,uBAEG,CACDuO,aAAc,GACdC,cAAe,OACfC,mBAAoB,GACpBC,kBAAmB,GACnBC,YAAY,M,+BAMhB,OACE,yBAAKd,UAAU,kBAAkB7N,GAAIpD,KAAKmR,MAAM/N,IAC9C,yBAAK6N,UAAU,oBACb,yBAAKA,UAAU,kBACZjR,KAAKmR,MAAMjE,MAAM3G,OAChBvG,KAAKmR,MAAMjE,MAAMvK,KAAI,SAAAC,GACnB,OACE,yBAAKqO,UAAU,eAAezC,IAAK5L,EAAKQ,IACtC,kBAAC,IAAD,CAAM4O,GAAIpP,EAAKmF,MACb,kBAAC,GAAD,CAAOrE,IAAKd,EAAKyF,WAAa,aAAc+I,IAAKxO,EAAKK,KAAMoO,MAAM,cAM1E,yBAAKJ,UAAU,gBACb,sD,GAhCcK,aCNxBW,GAAiB,SAAApH,GAAK,OAAIA,EAAM3G,QAEzBgO,GAAgB,SAAA9O,GAC3B,OAAO2H,aACLkH,IACA,SAAA/N,GAAM,OAAIA,EAAOd,OA2CR+O,GAA2B,SAAA/O,GACtC,OAAO2H,aACLkH,IACA,SAAA/N,GACE,OAAOyH,OAAOC,OAAO1H,GAAQvB,KAAI,SAAAwB,GAAK,OAAIA,EAAM0E,QAAMgD,OACnD/I,QAAO,SAAAgG,GAAU,OAAIA,EAAW1F,KAAOA,SAKnCgP,GAA2B,SAAAhP,GACtC,OAAO2H,aACLkH,IACA,SAAA/N,GACE,OAAOyH,OAAOC,OAAO1H,GAAQvB,KAAI,SAAAwB,GAAK,OAAIA,EAAMgF,QAAM0C,OACnD/I,QAAO,SAAAsG,GAAU,OAAIA,EAAWhG,KAAOA,SC7C1CiP,G,+LAEFZ,SAASC,cAAc,sBAAsBY,UAAUC,IAAI,Y,6CAI3Dd,SAASC,cAAc,sBAAsBY,UAAUE,OAAO,Y,+BAGtD,IAAD,OACDC,EAAc,IAAItE,KACxBsE,EAAYC,SAASD,EAAY9B,WAAa,GAC9C,IDRyCgC,ECQnCC,EAAa,sBDpBd7H,aACLkH,IACA,SAAA/N,GACE,OAAOyH,OAAOC,OAAO1H,GAAQpB,QAAO,SAAAqB,GAClC,YAA0B0O,IAAnB1O,EAAM2O,UACQ,IAAnB3O,EAAM2O,UACN3O,EAAM2O,SAAW,GAAqB,IAAhB3O,EAAMsE,WAC7BsK,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAE6F,YAAcD,EAAEC,aAAgB,EAAI,OCctDC,CAA2B,CAAEhP,OAAQlE,KAAKmR,MAAMjN,UADlC,YvBpBd6G,aACLS,IACA,SAAA3G,GACE,OAAO8G,OAAOC,OAAO/G,GAAS/B,QAAO,SAAAoC,GACnC,YAA2B2N,IAApB3N,EAAO4N,UAA8C,IAApB5N,EAAO4N,YAC9CC,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAE6F,YAAcD,EAAEC,aAAgB,EAAI,OuBiBtDE,CAA4B,CAAEtO,QAAS7E,KAAKmR,MAAMtM,YACrDkO,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAE6F,YAAcD,EAAEC,aAAgB,EAAI,KAClDG,EAAkB,uBDZiBT,ECaNF,EDZ9B1H,aACLkH,IACA,SAAA/N,GACE,OAAOyH,OAAOC,OAAO1H,GAAQpB,QAAO,SAAAqB,GAClC,OAAOA,EAAM8O,aAAeN,EAAKvE,iBACXyE,IAAnB1O,EAAM2O,UACc,IAAnB3O,EAAM2O,UACN3O,EAAM2O,SAAW,IAAsB,IAAhB3O,EAAMsE,YAChCsK,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAE6F,YAAcD,EAAEC,aAAgB,EAAI,SCIX,CAC5C/O,OAAQlE,KAAKmR,MAAMjN,UAFC,YvBdkB,SAAAyO,GAC5C,OAAO5H,aACLS,IACA,SAAA3G,GACE,OAAO8G,OAAOC,OAAO/G,GAAS/B,QAAO,SAAAoC,GACnC,OAAOA,EAAO+N,aAAeN,EAAKvE,iBACXyE,IAApB3N,EAAO4N,UAA8C,IAApB5N,EAAO4N,aAC1CC,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAE6F,YAAcD,EAAEC,aAAgB,EAAI,QuBWtDI,CAA+BZ,EAA/BY,CAA4C,CAC7CxO,QAAS7E,KAAKmR,MAAMtM,YAEtBkO,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAE6F,YAAcD,EAAEC,aAAgB,EAAI,KAExD,OACEL,EAAWrM,OAAS,GAClB6M,EAAgB7M,OAAS,EAGzB,yBAAK0K,UAAU,UACZ2B,EAAWrM,OAAS,GAAK,iCACxB,iDACA,kBAAC,GAAD,CAAiB2G,MAAO0F,EAAYxP,GAAG,gBAGxCgQ,EAAgB7M,OAAS,GAAK,iCAC7B,gDACA,kBAAC,GAAD,CAAiB2G,MAAOkG,EAAiBhQ,GAAG,sBAOpC,IAFduI,OAAOC,OAAOtM,GAAWwD,QAAO,SAAAK,GAC9B,OAA2C,OAApC,EAAKgO,MAAMhR,KAAKgD,GAAUiJ,SAChC7F,OAGD,yBAAK0K,UAAU,UACb,2CACA,yIACA,kBAAC,IAAD,CAAMe,GAAG,gBAAgBf,UAAU,UAAnC,gBAGA,uBAAGA,UAAU,SAAb,wBAA0C,0BAAMA,UAAU,QAAhB,OAA1C,yIAIyC,IAA7CtF,OAAO2H,QAAQtT,KAAKmR,MAAMjN,QAAQqC,QACY,IAA5CoF,OAAO2H,QAAQtT,KAAKmR,MAAMzM,OAAO6B,OAGjC,yBAAK0K,UAAU,UACb,2CACA,0GACA,wIACA,mKACA,yBAAKA,UAAU,mBACb,uBAAGA,UAAU,iBAAiBsC,KAAK,mDAAmDC,OAAO,SAASC,IAAI,uBAA1G,mBACA,4BAAQC,QAAS1T,KAAKmR,MAAMtO,OAA5B,WAMJ,yBAAKoO,UAAU,UACb,2CACA,0HACA,yBAAKA,UAAU,mBACZtF,OAAO2H,QAAQtT,KAAKmR,MAAMjN,QAAQqC,OAAS,GAAK,kBAAC,IAAD,CAAMyL,GAAG,cAAcf,UAAU,UAAjC,wBAGhDtF,OAAO2H,QAAQtT,KAAKmR,MAAMzM,OAAO6B,OAAS,GAAK,kBAAC,IAAD,CAAMyL,GAAG,aAAaf,UAAU,UAAhC,6B,GAlFvCK,aA4FNqC,gBACb,SAAA9I,GAAK,MAAK,CACR3G,OAAQ2G,EAAM3G,OACdQ,MAAOmG,EAAMnG,MACbG,QAASgG,EAAMhG,QACf1E,KAAM0K,EAAM1K,QAEd,CAAE0C,UAPW8Q,CAQbtB,IC5FauB,I,kMApBX,OACE,yBAAK3C,UAAU,WAAW7N,GAAIpD,KAAKmR,MAAM/N,IACtCpD,KAAKmR,MAAMjE,MAAM3G,OAASvG,KAAKmR,MAAMjE,MAAMvK,KAAI,SAAAC,GAC9C,OACE,yBAAKqO,UAAU,iBAAiBzC,IAAK5L,EAAKQ,IACxC,kBAAC,IAAD,CAAM4O,GAAIpP,EAAKmF,MACb,kBAAC,GAAD,CAAOrE,IAAKd,EAAKyF,WAAa,aAAc+I,IAAKxO,EAAKK,KAAMoO,MAAM,cAKxE,yBAAKJ,UAAU,kBACb,oD,GAdWK,cCoDRuC,I,sMAhDX,IAAIrC,KACFC,SAASC,cAAT,yBACoB1R,KAAKmR,MAAM/N,GAD/B,uBAEG,CACD0Q,UAAW,WACXlC,cAAe,OACfG,YAAY,EACZgC,OAAQ,YACRC,gBAAiB,CACfC,OAAQ,EACRC,QAAS,IACTC,MAAO,IACPC,SAAU,EACVC,cAAe,GAEjBC,QAAS,CACPC,cAAc,EACd/F,IAAKxO,KAAKmR,MAAMpJ,U,+BAOtB,OACE,yBAAKkJ,UAAU,gBAAgB7N,GAAIpD,KAAKmR,MAAM/N,IAC5C,yBAAK6N,UAAU,oBACb,yBAAKA,UAAU,kBACZjR,KAAKmR,MAAMjE,MAAM3G,OAASvG,KAAKmR,MAAMjE,MAAMvK,KAAI,SAAAC,GAC9C,OACE,yBAAKqO,UAAU,eAAeuD,eAAc5R,EAAKQ,GAAIoL,IAAK5L,EAAKQ,IAC7D,kBAAC,IAAD,CAAM4O,GAAIpP,EAAKmF,MACb,kBAAC,GAAD,CAAOrE,IAAKd,EAAKyF,WAAa,aAAc+I,IAAKxO,EAAKK,KAAMoO,MAAM,cAKxE,yBAAKJ,UAAU,gBACb,sD,GAxCYK,cCNb,YAAAH,GAAK,OAClB,yBAAKsD,OAAQtD,EAAMsD,OAAQpD,MAAOF,EAAME,MAAOqD,QAAQ,YAAYC,MAAM,8BACxE,uCACA,uBAAGC,KAAK,WACP,0BAAMA,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,KAAKC,GAAG,SAASC,GAAG,KAAKC,GAAG,WACxG,4BAAQC,GAAG,KAAKC,GAAG,KAAKT,KAAK,OAAOU,EAAE,IAAIT,OAAO,UAAUC,cAAc,QAAQC,YAAY,SCE3FQ,G,+LAEF9D,SAASC,cAAc,uBAAuBY,UAAUC,IAAI,Y,6CAI5Dd,SAASC,cAAc,uBAAuBY,UAAUE,OAAO,Y,+BAI/D,OACE,yBAAKvB,UAAU,UACZtF,OAAO2H,QAAQtT,KAAKmR,MAAMjN,QAAQqC,OAAS,GAC1C,yBAAK0K,UAAU,mBACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMe,GAAG,aACP,kBAAC,GAAD,CAAUX,MAAO,GAAIoD,OAAQ,OAGhCvF,OAAOsG,WAAa,IAAM,kBAAC,GAAD,CAAetI,MAAOvB,OAAOC,OAAO5L,KAAKmR,MAAMjN,QAAQ6O,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAEnK,KAAO+P,EAAE/P,MAAS,EAAI,KAAIG,GAAG,SAAS2E,KAAK,WAAc,kBAAC,GAAD,CAAUmF,MAAOvB,OAAOC,OAAO5L,KAAKmR,MAAMjN,QAAQ6O,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAEnK,KAAO+P,EAAE/P,MAAS,EAAI,KAAIG,GAAG,iB,GAnBrPkO,aA2BNqC,gBACb,SAAA9I,GAAK,MAAK,CACR3G,OAAQ2G,EAAM3G,UAFHyP,CAIb4B,ICxBaE,I,kMAVX,OACE,yBAAKxE,UAAU,YACb,qDACA,gGAAqE,uBAAGsC,KAAK,wCAAwCC,OAAO,SAASC,IAAI,uBAApE,+BAArE,KACA,yFAAmE,kBAAC,IAAD,CAAMzB,GAAG,QAAT,sBAAnE,U,GANeV,cCSRoE,I,2LARX,OACE,6BAASzE,UAAU,YACjB,yBAAKC,IAAKlR,KAAKmR,MAAMzN,IAAK0N,IAAI,kB,GAJfE,cC8BRqE,I,mBA5Bb,WAAYxE,GAAQ,IAAD,8BACjB,8CAAMA,KAEDtG,MAAQ,CACX+K,SAAS,GAJM,E,uEASjB5V,KAAK6V,SAAS,CACZD,SAAU5V,KAAK6K,MAAM+K,Y,+BAIf,IAAD,OACP,OACE,yBAAK3E,UAAU,cACZjR,KAAKmR,MAAM2E,OACTC,MAAM,EAAG/V,KAAK6K,MAAM+K,QAAU,GAAK5V,KAAKmR,MAAM2E,OAAOvP,QACrD5D,KAAI,SAACqT,EAAQnT,GACZ,OAAO,uBAAG2L,IAAK3L,GAAO,kBAAC,IAAD,CAAMmP,GAAE,sBAAiBgE,EAAO5S,KAAO4S,EAAO/S,MAA7D,SAA4E,8BAAO+S,EAAO,EAAK7E,MAAM8E,gBAEhH,0BAAMvC,QAAS1T,KAAKkW,OAAOC,KAAKnW,OAAQA,KAAK6K,MAAM+K,QAAU,YAAc,kB,GAvB1DtE,c,wCCYV8E,G,oLAXX,OACE,2BACEC,KAAK,WACLC,MAAOtW,KAAKmR,MAAM5P,QAAQgC,YAC1B2N,IAAKlR,KAAKmR,MAAM5P,QAAQmC,IACxB6S,QAASC,KAAQC,QAAQzW,KAAKmR,MAAM5P,QAAQgC,cAAgB,KAC5DmT,QAAS1W,KAAKmR,MAAMuF,c,GARFpF,aCUXqF,G,oLATX,OACE,4BACEzF,IAAKlR,KAAKmR,MAAMpO,OAAOW,IACvBlC,KAAMxB,KAAKmR,MAAMpO,OAAOU,SACxBmT,KAAM5W,KAAKmR,MAAMpO,OAAOQ,kB,GANP+N,aCUnBuF,G,+LACiB,IAAD,OAClB7W,KAAK8W,OAAS,IAAIC,KAAKtF,SAASC,cAAc,WAAY,CACxD/C,OAAOtN,IAGTrB,KAAK8W,OAAOE,GAAG,SAAS,SAAAjW,GACtBC,QAAQC,IAAIF,GAEZ,EAAKoQ,MAAMtE,aAAa,EAAKsE,MAAMvO,KAAKO,aAG1CnD,KAAK8W,OAAOE,GAAG,cAAc,SAAAC,GACW,IAAlCA,EAAMC,OAAOC,KAAKC,aACpB,EAAKjG,MAAMkG,iBAAiB,CAC1BjU,GAAI,EAAK+N,MAAMvO,KAAKQ,GACpB6P,aAAa,IAAI9E,MAAOC,UACxB0E,SAAUmE,EAAMC,OAAOC,KAAKC,iBAKlCpX,KAAK8W,OAAOE,GAAG,kBAAkB,WAC/B,IAAMM,EAAY7F,SAASC,cAAc,eAErC4F,IAAcA,EAAUC,QAAQC,cAClC,EAAKV,OAAOW,OACZH,EAAUI,MAAMC,QAAU,OAEtB,EAAKxG,MAAMyG,cACb,EAAKzG,MAAMyG,mBAKjB5X,KAAK8W,OAAOE,GAAG,SAAS,WACtB,EAAKF,OAAOe,WAAWC,OACvBrG,SAASC,cAAc,eAAegG,MAAMC,QAAU,OAElD,EAAKxG,MAAM4G,aACb,EAAK5G,MAAM4G,mB,+BAMf,OAEgE,IAD9D/X,KAAKmR,MAAMvO,KAAK2B,MACbzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UAAQ4G,OAE5C,KAIP,yBAAK0K,UAAU,cACb,2BACEC,IAAKlR,KAAKmR,MAAMvO,KAAK2B,MAClBzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UAAQ,GAAG+D,IACtDN,GAAG,SAAS4U,YAAY,OAAOC,aAAW,EAACC,UAAQ,GAClDlY,KAAKmR,MAAMvO,KAAK2B,MAAMzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UAC5DgD,KAAI,SAACI,EAAQF,GACZ,OAAO,kBAAC,GAAD,CAAYE,OAAQA,EAAQyL,IAAK3L,OAE3C7C,KAAKmR,MAAMvO,KAAK2B,MACdzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWE,WACxC+C,KAAI,SAACpB,EAASsB,GACb,OACE,kBAAC,GAAD,CACEtB,QAASA,EACTmV,QAAmB,IAAV7T,EACT2L,IAAK3L,OAGb,uBAAG0Q,KAAMvT,KAAKmR,MAAMvO,KAAK2B,MAAMzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UAAQ,GAAGuR,IAAKiH,UAAQ,GAA/F,kB,GAzEe7G,aAgFVqC,eACb,KACA,CAAE9G,iBAFW8G,CAGbkD,IC9EIuB,G,YACJ,WAAYjH,GAAQ,IAAD,8BACjB,8CAAMA,KAEDtG,MAAQ,CACX1G,MAAO+N,GAAc,EAAKf,MAAM9B,MAAMgJ,OAAOjV,GAAtC8O,CAA0C,CAC/ChO,OAAQ,EAAKiN,MAAMjN,UALN,E,kFAWjBuN,SAASC,cAAc,uBAAuBY,UAAUC,IAAI,Y,6CAI5Dd,SAASC,cAAc,uBAAuBY,UAAUE,OAAO,Y,iCAI/DxS,KAAKsY,MAAMtY,KAAK6K,MAAM1G,MAAM2O,Y,8BAGT,IAAfA,EAAc,uDAAH,EACTgE,EAASrF,SAASC,cAAc,eAChCyF,EAAOL,EAAOpF,cAAc,WAAWyF,KAC7CL,EAAOS,QAAQC,aAAc,EAE7B7Q,YAAW,WACTmQ,EAAOY,MAAMC,QAAU,QACvBR,EAAKU,WAAWU,QAChBpB,EAAKqB,OACLrB,EAAKC,YAActE,EACnBnM,YAAW,kBAAemQ,EAAOS,QAAQC,cAAc,OACtD,O,sCAIHxX,KAAKmR,MAAM1H,YAAY,CACrBrG,GAAIpD,KAAK6K,MAAM1G,MAAMf,GACrB0P,SAAU,M,+BAIJ,IAAD,OACP,OAAI9S,KAAK6K,MAAM1G,MAEX,yBAAK8M,UAAU,SACZjR,KAAK6K,MAAM1G,MAAMI,MAAMzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UAAQ4G,OAAS,GAAK,kBAAC,GAAD,CAAY3D,KAAM5C,KAAK6K,MAAM1G,MAAOkT,iBAAkBrX,KAAKmR,MAAM1H,YAAasO,YAAa/X,KAAKyY,cAActC,KAAKnW,QACzM,kBAAC,GAAD,CAAU0D,IAAK1D,KAAK6K,MAAM1G,MAAM+D,cAChC,yBAAK+I,UAAU,kBACb,kBAAC,GAAD,CAAOvN,IAAK1D,KAAK6K,MAAM1G,MAAMkE,UAAW+I,IAAI,SAASC,MAAM,QAC3D,4BAAKrR,KAAK6K,MAAM1G,MAAMlB,MACtB,yBAAKgO,UAAU,sBACb,uBAAGA,UAAU,SAAS,IAAI9C,KAAKnO,KAAK6K,MAAM1G,MAAMoE,aAAamI,eAC7D,uBAAGO,UAAU,SAAuD,IAA9CyH,KAAKC,MAAM3Y,KAAK6K,MAAM1G,MAAMsE,QAAU,KAAtC,UAAsDiQ,KAAKC,MAAM3Y,KAAK6K,MAAM1G,MAAMsE,QAAU,IAA5F,KAAtB,IAA2HzI,KAAK6K,MAAM1G,MAAMsE,QAAU,KAAO,GAAlC,UAA0CzI,KAAK6K,MAAM1G,MAAMsE,QAAU,GAArE,OAE7H,yBAAKwI,UAAU,kBACZjR,KAAK6K,MAAM1G,MAAMI,MAAMzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UAAQ4G,OAAS,QAAmCsM,IAA9B7S,KAAK6K,MAAM1G,MAAM2O,UAAwD,IAA9B9S,KAAK6K,MAAM1G,MAAM2O,UAAkB9S,KAAK6K,MAAM1G,MAAM2O,SAAW,GAAK9S,KAAK6K,MAAM1G,MAAMsE,SAAW,4BAAQwI,UAAU,UAAU7N,GAAG,WAAWsQ,QAAS1T,KAAK4Y,SAASzC,KAAKnW,OAAtE,YAChOA,KAAK6K,MAAM1G,MAAMI,MAAMzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UAAQ4G,OAAS,GAAK,4BAAQ0K,eAAyC4B,IAA9B7S,KAAK6K,MAAM1G,MAAM2O,UAAwD,IAA9B9S,KAAK6K,MAAM1G,MAAM2O,UAAkB9S,KAAK6K,MAAM1G,MAAM2O,SAAW,IAAM9S,KAAK6K,MAAM1G,MAAMsE,QAAU,UAAY,GAAIrF,GAAG,QAAQsQ,QAAS,kBAAM,EAAK4E,UAA7M,SACtF,uBAAGrH,UAAU,SAAS7N,GAAG,UAAUmQ,KAAMvT,KAAK6K,MAAM1G,MAAMwE,YAAa6K,OAAO,SAASC,IAAI,uBAA3F,iBAEF,uBAAGxC,UAAU,mBAAmBjR,KAAK6K,MAAM1G,MAAMiE,UACjD,yBAAK6I,UAAU,iBACb,yBAAKA,UAAU,uBACb,wCACA,kBAAC,GAAD,CAAY6E,OAAQ9V,KAAK6K,MAAM1G,MAAM0E,KAAMoN,UAAU,eAEvD,yBAAKhF,UAAU,uBACb,oCACA,kBAAC,GAAD,CAAY6E,OAAQ9V,KAAK6K,MAAM1G,MAAMgF,KAAM8M,UAAU,WAI3D,yBAAKhF,UAAU,kBACb,6BACE,uCACA,uBAAGA,UAAU,SAAb,aAAgCzR,EAAkBQ,KAAK6K,MAAM1G,MAAMhB,WACnE,6BACE,yBAAK8N,UAAU,4BACb,wCACCjR,KAAK6K,MAAM1G,MAAMI,MACfzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UACxCgD,KAAI,SAACO,EAAML,GACV,OAAO,uBAAGoO,UAAU,QAAQzC,IAAK3L,GAAQK,EAAKK,gBAIpC,IAFbvD,KAAK6K,MAAM1G,MAAMI,MACfzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UACxC4G,QAAgB,uBAAG0K,UAAU,SAAb,MAErB,yBAAKA,UAAU,4BACb,yCACCjR,KAAK6K,MAAM1G,MAAMI,MACfzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWE,WACxC+C,KAAI,SAACO,EAAML,GACV,OAAO,uBAAGoO,UAAU,QAAQzC,IAAK3L,GAAQK,EAAKK,gBAIpC,IAFbvD,KAAK6K,MAAM1G,MAAMI,MACfzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWE,WACxC2G,QAAgB,uBAAG0K,UAAU,SAAb,UAQxB,kBAAC,GAAD,U,GA3GOK,aAgHLqC,gBACb,SAAA9I,GAAK,MAAK,CACR3G,OAAQ2G,EAAM3G,UAEhB,CAAEuF,gBAJWkK,CAKbyE,IC7HIS,I,sMAEFpH,SAASC,cAAc,uBAAuBY,UAAUC,IAAI,Y,6CAI5Dd,SAASC,cAAc,uBAAuBY,UAAUE,OAAO,Y,+BAI/D,OACE,yBAAKvB,UAAU,SACZtF,OAAO2H,QAAQtT,KAAKmR,MAAMzM,OAAO6B,OAAS,GACzC,yBAAK0K,UAAU,kBACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAMe,GAAG,aACP,kBAAC,GAAD,CAAUX,MAAO,GAAIoD,OAAQ,OAGhCvF,OAAOsG,WAAa,IAAM,kBAAC,GAAD,CAAetI,MAAOvB,OAAOC,OAAO5L,KAAKmR,MAAMzM,OAAOqO,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAEnK,KAAO+P,EAAE/P,MAAS,EAAI,KAAIG,GAAG,QAAQ2E,KAAK,UAAa,kBAAC,GAAD,CAAUmF,MAAOvB,OAAOC,OAAO5L,KAAKmR,MAAMzM,OAAOqO,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAEnK,KAAO+P,EAAE/P,MAAS,EAAI,KAAIG,GAAG,gB,GAnBlPkO,cA2BLqC,gBACb,SAAA9I,GAAK,MAAK,CACRnG,MAAOmG,EAAMnG,SAFFiP,CAIbkF,IC3BIC,I,sMAEFrH,SAASC,cAAc,uBAAuBY,UAAUC,IAAI,Y,6CAI5Dd,SAASC,cAAc,uBAAuBY,UAAUE,OAAO,Y,+BAI/D,IpCWiCrN,EoCX3BR,EAAOmG,GAAa9K,KAAKmR,MAAM9B,MAAMgJ,OAAOjV,GAArC0H,CAAyC,CACpDpG,MAAO1E,KAAKmR,MAAMzM,QAEdG,GpCQ2BM,EoCRKnF,KAAKmR,MAAM9B,MAAMgJ,OAAOjV,GpCSzD2H,aACLS,IACA,SAAA3G,GACE,OAAO8G,OAAOC,OAAO/G,GAClB/B,QAAO,SAAAoC,GAAM,OAAIA,EAAOC,OAAO4T,aAAe5T,SoCbe,CAChEN,QAAS7E,KAAKmR,MAAMtM,UAGtB,OAAIF,EAEA,yBAAKsM,UAAU,QACb,kBAAC,GAAD,CAAUvN,IAAKiB,EAAKuD,cACpB,yBAAK+I,UAAU,iBACb,kBAAC,GAAD,CAAOvN,IAAKiB,EAAK0D,UAAW+I,IAAI,SAASC,MAAM,QAC/C,4BAAK1M,EAAK1B,MACV,yBAAKgO,UAAU,qBACb,uBAAGA,UAAU,SAAS,IAAI9C,KAAKxJ,EAAKmF,cAAc4G,cAAlD,MAAoE,IAAIvC,KAAKxJ,EAAKqF,aAAa0G,gBAEjG,uBAAGO,UAAU,kBAAkBtM,EAAKyD,WAErCvD,EAAQ0B,OAAS,GAAK,yBAAK0K,UAAU,iBACpC,uCACA,kBAAC,GAAD,CAAiB/D,MAAOrI,EAAQkO,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAE5G,aAAewM,EAAExM,cAAiB,EAAI,KAAIpD,GAAG,cAK9F,kBAAC,GAAD,U,GApCMkO,cAyCJqC,gBACb,SAAA9I,GAAK,MAAK,CACRnG,MAAOmG,EAAMnG,MACbG,QAASgG,EAAMhG,WAHJ8O,CAKbmF,ICzDIE,I,OAAmB,SAAAnO,GAAK,OAAIA,EAAMrF,WAS3ByT,GAA2B,SAAApT,GACtC,OAAOkF,aACLiO,IACA,SAAAxT,GACE,OAAOmG,OAAOC,OAAOpG,GAClB1C,QAAO,SAAA8C,GAAO,OAAIA,EAAQC,WAAaA,SCI1CqT,G,YACJ,WAAY/H,GAAQ,IAAD,8BACjB,8CAAMA,KAEDtG,MAAQ,CACX3F,OAAQuG,GAAe,EAAK0F,MAAM9B,MAAMgJ,OAAOjV,GAAvCqI,CAA2C,CACjD5G,QAAS,EAAKsM,MAAMtM,UAEtBW,SAAUyT,GAAyB,EAAK9H,MAAM9B,MAAMgJ,OAAOjV,GAAjD6V,CAAqD,CAC7DzT,SAAU,EAAK2L,MAAM3L,WAEvB2T,kBAAmBF,GAAyB,EAAK9H,MAAM9B,MAAMgJ,OAAOjV,GAAjD6V,CAAqD,CACtEzT,SAAU,EAAK2L,MAAM3L,WACpB1C,QAAO,SAAA8C,GACR,YAA4BiN,IAArBjN,EAAQzC,UAEC,IADdyC,EAAQrB,MAAMzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UACnD4G,UAEP6S,iBAAiB,GAEnB,EAAKvO,MAAMwO,qBACT,EAAKxO,MAAMsO,kBAAkB5S,OAAS,GACtC,EAAKsE,MAAMsO,kBAAkB,GAAG1S,cArBjB,E,kFAyBjBgL,SAASC,cAAc,uBAAuBY,UAAUC,IAAI,Y,6CAI5Dd,SAASC,cAAc,uBAAuBY,UAAUE,OAAO,Y,uCAI/DxS,KAAK6V,SAAS,CACZuD,iBAAkBpZ,KAAK6K,MAAMuO,oB,iCAK/BpZ,KAAKsY,MACHtY,KAAK6K,MAAM3F,OAAO4N,UAAY,EAC9B9S,KAAK6K,MAAMrF,SAASxF,KAAK6K,MAAM3F,OAAO4N,SAAW,GAAGA,UAAY,K,4BAI9DrM,GAA8B,IAAfqM,EAAc,uDAAH,EAC9B9S,KAAK6V,SAAS,CACZwD,qBAAsB5S,IAGxBzG,KAAKmR,MAAMhG,aAAa,CACtB/H,GAAIpD,KAAK6K,MAAM3F,OAAO9B,GACtB6P,aAAa,IAAI9E,MAAOC,UACxB0E,SAAUrM,IAGZ,IAAMqQ,EAASrF,SAASC,cAAc,eAChCyF,EAAOL,EAAOpF,cAAc,WAAWyF,KAC7CL,EAAOS,QAAQC,aAAc,EAE7B7Q,YAAW,WACTmQ,EAAOY,MAAMC,QAAU,QACvBR,EAAKU,WAAWU,QAChBpB,EAAKqB,OACLrB,EAAKC,YAActE,EACnBnM,YAAW,kBAAemQ,EAAOS,QAAQC,cAAc,OACtD,O,kFAQHxX,KAAKmR,MAAMlF,cAAc,CACvB7I,GAAIpD,KAAK6K,MAAMrF,SAASxF,KAAK6K,MAAMwO,qBAAuB,GAAGjW,GAC7D0P,SAAU,IAGZ,IAAIrM,EAAgB,EAElBzG,KAAK6K,MAAMrF,SAASxF,KAAK6K,MAAMwO,sBAAsB9U,MAClDzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UAAQ4G,OAAS,IAE5DE,EAAgBzG,KAAK6K,MAAMwO,qBAAuB,GAGpDrZ,KAAKmR,MAAMhG,aAAa,CACtB/H,GAAIpD,KAAK6K,MAAM3F,OAAO9B,GACtB0P,SAAUrM,M,+BAMJ,IAAD,OACP,OAAIzG,KAAK6K,MAAM3F,OAEX,yBAAK+L,UAAU,UACZjR,KAAK6K,MAAMsO,kBAAkB5S,OAAS,GAAK,kBAAC,GAAD,CAAY3D,KAAM5C,KAAK6K,MAAMrF,SAASxF,KAAK6K,MAAMwO,qBAAuB,GAAIhC,iBAAkBrX,KAAKmR,MAAMlF,cAAe2L,aAAc5X,KAAKsZ,eAAenD,KAAKnW,MAAO+X,YAAa/X,KAAKuZ,gBAAgBpD,KAAKnW,QACzP,kBAAC,GAAD,CAAU0D,IAAKoH,GAAa9K,KAAK6K,MAAM3F,OAAOC,OAA/B2F,CAAuC,CAAEpG,MAAO1E,KAAKmR,MAAMzM,QAASwD,cACnF,yBAAK+I,UAAU,mBACb,kBAAC,GAAD,CAAOvN,IAAK1D,KAAK6K,MAAM3F,OAAOmD,UAAW+I,IAAI,SAASC,MAAM,QAC5D,sCAAYrR,KAAK6K,MAAM3F,OAAOsB,cAC9B,yBAAKyK,UAAU,uBACb,uBAAGA,UAAU,SAASnG,GAAa9K,KAAK6K,MAAM3F,OAAOC,OAA/B2F,CAAuC,CAAEpG,MAAO1E,KAAKmR,MAAMzM,QAASzB,MAC1F,uBAAGgO,UAAU,SAAS,IAAI9C,KAAKnO,KAAK6K,MAAM3F,OAAOuF,SAASiG,gBAE5D,yBAAKO,UAAU,mBACZjR,KAAK6K,MAAMsO,kBAAkB5S,OAAS,QAAmCsM,IAA9B7S,KAAK6K,MAAM1G,MAAM2O,UAAyD,IAA/B9S,KAAK6K,MAAM3F,OAAO4N,UAAkB,4BAAQ7B,UAAU,UAAU7N,GAAG,WAAWsQ,QAAS1T,KAAK4Y,SAASzC,KAAKnW,OAAtE,oBAA+FA,KAAK6K,MAAM3F,OAAO4N,UAC3O9S,KAAK6K,MAAMsO,kBAAkB5S,OAAS,GAAoC,IAA/BvG,KAAK6K,MAAM3F,OAAO4N,UAAkB,4BAAQ7B,eAAyC4B,IAA9B7S,KAAK6K,MAAM1G,MAAM2O,UAAyD,IAA/B9S,KAAK6K,MAAM3F,OAAO4N,SAAiB,UAAY,GAAI1P,GAAG,QAAQsQ,QAAS,kBAAM,EAAK4E,MAAM,EAAKzN,MAAMsO,kBAAkB,GAAG1S,iBAAtL,iBAAqNzG,KAAK6K,MAAMsO,kBAAkB,GAAG1S,eACrU,uBAAGwK,UAAU,SAAS7N,GAAG,UAAUmQ,KAAMvT,KAAK6K,MAAM3F,OAAOyD,YAAa6K,OAAO,SAASC,IAAI,uBAA5F,iBAEF,yBAAKxC,UAAU,oBACb,6BACGjR,KAAK6K,MAAMrF,SACTuN,MAAK,SAAC3F,EAAG4F,GAAJ,OAAW5F,EAAE3G,cAAgBuM,EAAEvM,eAAkB,EAAI,KAC1DsP,MACC,EACA/V,KAAK6K,MAAMuO,gBAAkB,EAAIpZ,KAAK6K,MAAMrF,SAASe,QAEtD5D,KAAI,SAACiD,EAAS/C,GACb,OACE,yBAAK2W,cAAsE3G,IAA5D,EAAKhI,MAAMrF,SAASI,EAAQa,cAAgB,GAAGtD,UAA0I,IAAhH,EAAK0H,MAAMrF,SAASI,EAAQa,cAAgB,GAAGlC,MAAMzB,QAAO,SAAAI,GAAI,OAAIA,EAAK1B,OAAS9B,EAAWC,UAAQ4G,OAAc0K,UAAU,kBAAkByC,QAAS,kBAAM,EAAK4E,MAAM1S,EAAQa,gBAAgB+H,IAAK3L,GAC5R,yBAAKoO,UAAU,2BAA2BrL,EAAQa,eAClD,yBAAKwK,UAAU,4BACb,4BAAKrL,EAAQ3C,MACb,uBAAGgO,UAAU,SAAb,SAA4B,IAAI9C,KAAKvI,EAAQ6E,SAASgP,gBACtD,2BAAI7T,EAAQwC,gBAMvBpI,KAAK6K,MAAMrF,SAASe,OAAS,GAAK,0BAAMmN,QAAS1T,KAAK0Z,eAAevD,KAAKnW,OAAQA,KAAK6K,MAAMuO,gBAAkB,oBAAsB,kBAExI,uBAAGnI,UAAU,oBAAoBjR,KAAK6K,MAAM3F,OAAOkD,UACnD,yBAAK6I,UAAU,kBACb,yBAAKA,UAAU,wBACb,wCACA,kBAAC,GAAD,CAAY6E,OAAQ9V,KAAK6K,MAAM3F,OAAO2D,KAAMoN,UAAU,eAExD,yBAAKhF,UAAU,wBACb,oCACA,kBAAC,GAAD,CAAY6E,OAAQ9V,KAAK6K,MAAM3F,OAAOiE,KAAM8M,UAAU,YAOzD,kBAAC,GAAD,U,GAxJQ3E,aA6JNqC,gBACb,SAAA9I,GAAK,MAAK,CACRnG,MAAOmG,EAAMnG,MACbG,QAASgG,EAAMhG,QACfW,SAAUqF,EAAMrF,YAElB,CAAE2F,gBAAcc,kBANH0H,CAObuF,IC1KIS,I,2LAEF,IAAMvW,EAAKiC,OAAOC,SAAStF,KAAKmR,MAAM9B,MAAMgJ,OAAOjV,IAE7C4S,ECPoB,SAAA5S,GAC5B,OAAO2H,aACLoH,GAAyB/O,GACzBgP,GAAyBhP,GACzBsI,GAA0BtI,GAC1B0I,GAA0B1I,IAC1B,SAACwW,EAAYC,EAAYC,EAAaC,GACpC,MAAO,sBAAIH,GAAJ,YAAmBC,GAAnB,YAAkCC,GAAlC,YAAkDC,IAAa,MDAzDC,CAAe5W,EAAf4W,CAAmB,CAChC9V,OAAQlE,KAAKmR,MAAMjN,OACnBW,QAAS7E,KAAKmR,MAAMtM,UAEhBX,EjBgB4B,SAAAd,GACpC,OAAO2H,aACLkH,IACA,SAAA/N,GACE,OAAOyH,OAAOC,OAAO1H,GAAQpB,QAAO,SAAAqB,GAClC,OAAOA,EAAM0E,KAAKzD,MAAK,SAAA0D,GAAU,OAAIA,EAAW1F,KAAOA,MACrDe,EAAMgF,KAAK/D,MAAK,SAAAgE,GAAU,OAAIA,EAAWhG,KAAOA,WiBtBvC6W,CAAuB7W,EAAvB6W,CAA2B,CAAE/V,OAAQlE,KAAKmR,MAAMjN,SACzDW,EvCqB6B,SAAAzB,GACrC,OAAO2H,aACLS,IACA,SAAA3G,GACE,OAAO8G,OAAOC,OAAO/G,GAAS/B,QAAO,SAAAoC,GACnC,OAAOA,EAAO2D,KAAKzD,MAAK,SAAA0D,GAAU,OAAIA,EAAW1F,KAAOA,MACtD8B,EAAOiE,KAAK/D,MAAK,SAAAgE,GAAU,OAAIA,EAAWhG,KAAOA,WuC3BvC8W,CAAwB9W,EAAxB8W,CAA4B,CAAErV,QAAS7E,KAAKmR,MAAMtM,UAC5DsV,ECDyB,SAAC/W,EAAI4F,GACtC,OAAO+B,aACLoH,GAAyB/O,GACzBgP,GAAyBhP,GACzBsI,GAA0BtI,GAC1B0I,GAA0B1I,IAC1B,SAACwW,EAAYC,EAAYC,EAAaC,GACpC,OAAO,YACF,IAAIK,IAAJ,CACCR,EAAWrT,OAAS,GAAKuT,EAAYvT,OAAS,EAClC,IAAXyC,EAAe,UAAY,QAAW,MAFxC,mBAGE6Q,EAAWlX,KAAI,SAAAyG,GAAU,OAAIA,EAAWC,QAH1C,YAIE0Q,EAAYpX,KAAI,SAAAyG,GAAU,OAAIA,EAAWC,WAE9CvG,QAAO,SAAAuX,GAAI,OAAa,OAATA,QDbLC,CAAoBlX,EAAI4S,EAAOhN,OAA/BsR,CAAuC,CACnDpW,OAAQlE,KAAKmR,MAAMjN,OACnBW,QAAS7E,KAAKmR,MAAMtM,UAGtB,OAAImR,EAEA,yBAAK/E,UAAU,UACb,kBAAC,GAAD,CAAUvN,KAAMQ,EAAO,IAAMlE,KAAKmR,MAAMzM,MAAMG,EAAQ,GAAGM,SAAS+C,cAClE,yBAAK+I,UAAU,mBACb,kBAAC,GAAD,CAAOvN,IAAKsS,EAAO/M,WAAYmI,IAAI,UAAUC,MAAM,QACnD,4BAAK2E,EAAO/S,MACZ,wCACA,2BAAIkX,EAAMI,KAAK,QAGhBrW,EAAOqC,OAAS,GAAK,yBAAK0K,UAAU,kBACnC,sCACA,kBAAC,GAAD,CAAiB/D,MAAOhJ,EAAQd,GAAG,YAGpCyB,EAAQ0B,OAAS,GAAK,yBAAK0K,UAAU,mBACpC,0CACA,kBAAC,GAAD,CAAiB/D,MAAOrI,EAASzB,GAAG,cAKnC,kBAAC,GAAD,U,GAtCQkO,cA2CNqC,gBACb,SAAA9I,GAAK,MAAK,CACR3G,OAAQ2G,EAAM3G,OACdQ,MAAOmG,EAAMnG,MACbG,QAASgG,EAAMhG,WAJJ8O,CAMbgG,IE7Da,I,OAAA,SAAAxI,GAAK,OAClB,yBAAKsD,OAAQtD,EAAMsD,OAAQpD,MAAOF,EAAME,MAAOqD,QAAQ,YAAYC,MAAM,8BACxE,wCACA,uBAAGC,KAAK,UAAUC,OAAO,UAAUC,cAAc,QAAQC,YAAY,KACpE,0BAAMH,KAAK,OAAOC,OAAO,UAAUG,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAC7D,0BAAMP,KAAK,OAAOC,OAAO,UAAUG,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,WCLlD,YAAAhE,GAAK,OAClB,yBAAKsD,OAAQtD,EAAMsD,OAAQpD,MAAOF,EAAME,MAAOqD,QAAQ,YAAYC,MAAM,8BACxE,iDACA,uBAAGC,KAAK,WACP,6BAASA,KAAK,UAAU4F,OAAO,iEAC/B,6BAAS5F,KAAK,UAAU4F,OAAO,oEAC/B,6BAAS5F,KAAK,UAAU4F,OAAO,uEAC/B,6BAAS5F,KAAK,UAAU4F,OAAO,oEAC/B,6BAASA,OAAO,qJCRL,YAAArJ,GAAK,OAClB,yBAAKsD,OAAQtD,EAAMsD,OAAQpD,MAAOF,EAAME,MAAOqD,QAAQ,YAAYC,MAAM,8BACxE,2CACA,uBAAGC,KAAK,WACP,0BAAM6F,EAAE,uKAAuK7F,KAAK,eCJzK,YAAAzD,GAAK,OAClB,yBAAKsD,OAAQtD,EAAMsD,OAAQpD,MAAOF,EAAME,MAAOqD,QAAQ,YAAYC,MAAM,8BACxE,4CACA,uBAAGC,KAAK,WACP,0BAAMH,OAAO,KAAKpD,MAAM,KAAKuD,KAAK,UAAU8F,EAAE,IAAIC,EAAE,MACpD,0BAAMlG,OAAO,KAAKpD,MAAM,KAAKqJ,EAAE,KAAKC,EAAE,MACtC,0BAAMlG,OAAO,KAAKpD,MAAM,KAAKqJ,EAAE,IAAIC,EAAE,OACrC,0BAAMlG,OAAO,KAAKpD,MAAM,KAAKuD,KAAK,UAAU8F,EAAE,KAAKC,EAAE,UCM1CC,I,2LAVX,OACE,yBAAK3J,UAAU,UACb,4BAAKjR,KAAKmR,MAAMzI,OAChB,2BAAI1I,KAAKmR,MAAM0J,MACd7a,KAAKmR,MAAM2J,SAAW,uBAAGvH,KAAMvT,KAAKmR,MAAM2J,QAAStH,OAAO,SAASC,IAAI,uBAAuBzT,KAAKmR,MAAM4J,UAAY,a,GANzGzJ,cCDf0J,GAAe,SAAAnQ,GAAK,OAAIA,EAAM1K,MASvB8a,GAAoB,SAAA9X,GAC/B,OAAO4H,aAR2B,SAAA5H,GAClC,OAAO4H,aACLiQ,IACA,SAAA7a,GAAI,OAAIA,EAAKgD,MAMb+X,CAAqB/X,IACrB,SAAArB,GAAY,OAAIA,EAAasK,UAIpB+O,GAAY,WACvB,OAAOpQ,aACLiQ,IACA,SAAA7a,GAAI,OAAIwL,OAAOW,KAAKnM,GAAMib,MAAK,SAAAjY,GAAQ,OAA6B,OAAzBhD,EAAKgD,GAAUpC,aCExDsa,G,+LAEF5J,SAASC,cAAc,qBAAqBY,UAAUC,IAAI,Y,6CAI1Dd,SAASC,cAAc,qBAAqBY,UAAUE,OAAO,Y,8BAI7DxS,KAAKmR,MAAMtO,U,oDAGiBoU,GAC5BjX,KAAKmR,MAAMmK,eAAX,eACKtb,KAAKmR,MAAMlD,SADhB,CAEEL,kBAAmBqJ,EAAMzD,OAAO9Q,W,+BAI1B,IDlBqBS,ECkBtB,OACD8M,EAAsBf,OAAOe,oBAC7BsL,EAEQ,IAFW5P,OAAOC,OAAOtM,GAAWwD,QAAO,SAAAK,GACvD,OAA2C,OAApC,EAAKgO,MAAMhR,KAAKgD,GAAUiJ,SAChC7F,OACGiV,EAAwBL,KAAY,CAAEhb,KAAMH,KAAKmR,MAAMhR,OACvDsb,EAA4D,IAA7C9P,OAAO2H,QAAQtT,KAAKmR,MAAMjN,QAAQqC,QACT,IAA5CoF,OAAO2H,QAAQtT,KAAKmR,MAAMzM,OAAO6B,OAEnC,OACE,yBAAK0K,UAAU,YACZhB,GAAuB,kBAAC,GAAD,CAAQvH,MAAM,oBAAoBmS,KAAK,0CAC9DU,GAAoB,kBAAC,GAAD,CAAQ7S,MAAM,kCAAkCmS,KAAK,+EACzEY,GAAgB,kBAAC,GAAD,CAAQ/S,MAAM,kBAAkBmS,KAAK,yFAAyFE,SAAS,8BAA8BD,QAAQ,qDAC7LU,GAAyB,kBAAC,GAAD,CAAQ9S,MAAM,0BAA0BmS,KAAK,6CAEvE,6BAAS5J,UAAU,kBACjB,8CACA,oGACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,wBACb,4BAAQA,UAAS,oBAAegK,GAAkB3b,EAAUC,UAA5B0b,CAAuC,CAAE9a,KAAMH,KAAKmR,MAAMhR,QAAW,UAApF,aDvCEgD,ECuCiH7D,EAAUC,UDtCnJwL,aACLiQ,IACA,SAAA7a,GAAI,OAA6B,OAAzBA,EAAKgD,GAAUpC,UCoC4I,CAAEZ,KAAMH,KAAKmR,MAAMhR,QAAW,QAAUuT,QAAS1T,KAAKmR,MAAMuK,uBACnN,kBAAC,GAAD,CAAerK,MAAO,GAAIoD,OAAQ,MAEpC,4BAAQ+E,UAAQ,EAACvI,UAAU,WACzB,kBAAC,GAAD,CAAaI,MAAO,GAAIoD,OAAQ,MAElC,4BAAQ+E,UAAQ,EAACvI,UAAU,UACzB,kBAAC,GAAD,CAAYI,MAAO,GAAIoD,OAAQ,MAEjC,uBAAGxD,UAAU,SAASsC,KAAK,mCAAmCC,OAAO,SAASC,IAAI,uBAChF,kBAAC,GAAD,CAASpC,MAAO,GAAIoD,OAAQ,SAMpC,6BAASxD,UAAU,sBACjB,wCACA,oHACA,4BAAQyC,QAAS1T,KAAK6C,MAAMsT,KAAKnW,OAAjC,SAGA,kDACA,wGACA,4BAAQ0C,MAAO1C,KAAKmR,MAAMlD,SAASL,kBAAmB+N,SAAU3b,KAAK4b,8BAA8BzF,KAAKnW,OACtG,4BAAQ0C,MAAOrD,GAAf,SACA,4BAAQqD,MAAOrD,GAAf,WACA,4BAAQqD,MAAOrD,GAAf,SACA,4BAAQqD,MAAOrD,GAAf,YAIJ,6BAAS4R,UAAU,qBACjB,uCACA,qCpElGa,SoEkGQ/B,OAAOe,qBAAuB,YAAnD,KACA,uBAAGgB,UAAU,SAAb,aACY,uBAAGsC,KAAK,mCAAmCC,OAAO,SAASC,IAAI,uBAA/D,eADZ,aAC0H,uBAAGF,KAAK,4CAA4CC,OAAO,SAASC,IAAI,uBAAxE,aAD1H,KAGA,uBAAGxC,UAAU,SAAb,wBAA0C,0BAAMA,UAAU,QAAhB,OAA1C,8I,GA/EaK,aAsFRqC,gBACb,SAAA9I,GAAK,MAAK,CACR1K,KAAM0K,EAAM1K,KACZ8N,SAAUpD,EAAMoD,SAChB/J,OAAQ2G,EAAM3G,OACdQ,MAAOmG,EAAMnG,SAEf,CAAEgX,sB3CzGiC,WACnC,OAAO,SAACnS,EAAU0B,GAChB1B,EAASjI,EAAa,sBACtBiI,EAASgE,GAAWjO,EAAUC,aAE9B,IAAIQ,GAAgBuE,UAAU3D,MAAK,SAAAyL,GACjC7C,EAASiE,GAAalO,EAAUC,UAAW6M,IAC3C7C,EvBV4B,CAChC/H,KAR0B,iBuBmBjByJ,IAAWiD,SAASL,aACvBtE,EAAS1G,SACV/B,OAAM,SAAAC,GACPC,QAAQC,IAAIF,GACZwI,EAAS+D,GAAahO,EAAUC,UAAWwB,IAC3CwI,EvBjB4B,CAChC/H,KAR0B,sBkEmHDqB,SAAOyY,erClHJ,SAAArN,GAAQ,MAAK,CACzCzM,KAH6B,kBAI7BC,QAASwM,KqCyGI0F,CAQb0H,I,qBC9GIQ,I,mBACJ,WAAY1K,GAAQ,IAAD,8BACjB,8CAAMA,KAED2K,YAAc,IAAIC,KACvBpQ,OAAOC,OAAO,EAAKuF,MAAMjN,QAAQ+I,SAAQ,SAAA9I,GACvC,EAAK2X,YAAYvJ,IAAIpO,EAAMf,GAA3B,UAAkCe,EAAMlB,KAAxC,YAAgDkB,EAAMiE,cAExD,EAAK4T,WAAa,IAAID,KACtBpQ,OAAOC,OAAO,EAAKuF,MAAMzM,OAAOuI,SAAQ,SAAAtI,GACtC,EAAKqX,WAAWzJ,IAAI5N,EAAKvB,GAAzB,UAAgCuB,EAAK1B,KAArC,YAA6C0B,EAAKyD,cAGpD,EAAKyC,MAAQ,CACX5E,MAAO,IAAIgW,gBAAgB,EAAK9K,MAAMhC,SAAS+M,QAAQha,IAAI,MAAQ,GACnEgC,OAAQ,GACRQ,MAAO,IAfQ,E,kFAoBjB1E,KAAKkc,OAAO,IAAID,gBAAgBjc,KAAKmR,MAAMhC,SAAS+M,QAAQha,IAAI,Q,6BAG3D+D,GAAQ,IAAD,OACZjG,KAAK6V,SAAS,CACZ5P,MAAOA,GAAS,GAChB/B,OAAQlE,KAAK8b,YAAYI,OAAOjW,GAAS,IACtCtD,KAAI,SAAAwZ,GAAM,OAAI,EAAKhL,MAAMjN,OAAOiY,MACnCzX,MAAO1E,KAAKgc,WAAWE,OAAOjW,GAAS,IACpCtD,KAAI,SAAAwZ,GAAM,OAAI,EAAKhL,MAAMzM,MAAMyX,U,wCAIpBlF,GAChBjX,KAAKmR,MAAMmD,QAAQ5M,QAAnB,sBAA0CuP,EAAMzD,OAAO9Q,QACvD1C,KAAKkc,OAAOjF,EAAMzD,OAAO9Q,S,+BAIzB,OACE,yBAAKuO,UAAU,QACb,8BACE,2BAAOmL,WAAS,EAAC1Z,MAAO1C,KAAK6K,MAAM5E,MAAOoW,YAAY,sBAAsBV,SAAU3b,KAAKsc,kBAAkBnG,KAAKnW,SAGnHA,KAAK6K,MAAM3G,OAAOqC,OAAS,GAAK,iCAC/B,sCACA,kBAAC,GAAD,CAAiB2G,MAAOlN,KAAK6K,MAAM3G,OAAQd,GAAG,YAG/CpD,KAAK6K,MAAMnG,MAAM6B,OAAS,GAAK,iCAC9B,wCACA,kBAAC,GAAD,CAAiB2G,MAAOlN,KAAK6K,MAAMnG,MAAOtB,GAAG,gB,GArDpCkO,cA4DJqC,gBACb,SAAA9I,GAAK,MAAK,CACR3G,OAAQ2G,EAAM3G,OACdQ,MAAOmG,EAAMnG,SAHFiP,CAKbkI,ICtEa,I,OAAA,SAAA1K,GAAK,OAClB,yBAAKwD,MAAM,6BAA6BtD,MAAOF,EAAME,MAAOoD,OAAQtD,EAAMsD,QACxE,0BAAMG,KAAK,OAAO2H,iBAAiB,KAAK9B,EAAE,wCAAwC3F,cAAc,QAAQ0H,eAAe,QAAQzH,YAAY,IAAIF,OAAO,UAAU5D,UAAU,eAC1K,2BAAOwL,iBAAe,iBAAtB,ibCaWC,G,oLAXX,OACE,yBAAKzL,UAAU,WACb,yBAAKA,UAAU,oBACb,kBAAC,GAAD,CAAeI,MAAO,GAAIoD,OAAQ,KACjCzU,KAAKmR,MAAM5P,SAAW,uBAAG0P,UAAU,SAASjR,KAAKmR,MAAM5P,e,GAN5C+P,aCHP,I,OAAA,SAAAH,GAAK,OAClB,yBAAKsD,OAAQtD,EAAMsD,OAAQpD,MAAOF,EAAME,MAAOqD,QAAQ,YAAYC,MAAM,8BACxE,0CACA,uBAAGC,KAAK,WACP,6BAASA,KAAK,OAAO4F,OAAO,2BAA2B3F,OAAO,UAAUC,cAAc,QAAQC,YAAY,MAC1G,0BAAM0F,EAAE,wGAAwG7F,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,MAC/K,0BAAMH,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAClG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,UCPzF,YAAAhE,GAAK,OAClB,yBAAKsD,OAAQtD,EAAMsD,OAAQpD,MAAOF,EAAME,MAAOqD,QAAQ,YAAYC,MAAM,8BACxE,2CACA,uBAAGC,KAAK,WACP,0BAAMA,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OACjG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OACnG,0BAAMV,OAAO,KAAKpD,MAAM,KAAKuD,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAI2F,EAAE,IAAIC,EAAE,MACxG,0BAAM/F,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACnG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACjG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACjG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,MACnG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,MACnG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACpG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACpG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAClG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,UCfvF,YAAAhE,GAAK,OAClB,yBAAKsD,OAAQtD,EAAMsD,OAAQpD,MAAOF,EAAME,MAAOqD,QAAQ,YAAYC,MAAM,8BACxE,iDACA,uBAAGC,KAAK,WACP,0BAAMA,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACpG,0BAAMP,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACnG,0BAAMV,OAAO,KAAKpD,MAAM,KAAKuD,KAAK,OAAOC,OAAO,UAAUC,cAAc,QAAQC,YAAY,IAAI2F,EAAE,IAAIC,EAAE,SCN7F,YAAAxJ,GAAK,OAClB,yBAAKsD,OAAQtD,EAAMsD,OAAQpD,MAAOF,EAAME,MAAOqD,QAAQ,YAAYC,MAAM,8BACxE,gDACA,uBAAGC,KAAK,UAAUC,OAAO,UAAUC,cAAc,QAAQC,YAAY,KACpE,4BAAQK,GAAG,KAAKC,GAAG,KAAKT,KAAK,OAAOU,EAAE,MACtC,0BAAMmF,EAAE,uXAAuX7F,KAAK,OAAOC,OAAO,eCGhZ8H,G,oLAEF,OACE,yBAAK1L,UAAU,OACb,kBAAC,IAAD,CAAMe,GAAG,QACP,kBAAC,GAAD,CAAaX,MAAO,GAAIoD,OAAQ,KAChC,uCAEF,kBAAC,IAAD,CAAM+E,SAAuD,IAA7C7N,OAAO2H,QAAQtT,KAAKmR,MAAMjN,QAAQqC,OAAcyL,GAAG,eACjE,kBAAC,GAAD,CAAWX,MAAO,GAAIoD,OAAQ,KAC9B,sCAEF,kBAAC,IAAD,CAAM+E,SAAsD,IAA5C7N,OAAO2H,QAAQtT,KAAKmR,MAAMzM,OAAO6B,OAAcyL,GAAG,cAChE,kBAAC,GAAD,CAAUX,MAAO,GAAIoD,OAAQ,KAC7B,qCAEF,kBAAC,IAAD,CAAMzC,GAAG,iBACP,kBAAC,GAAD,CAAUX,MAAO,GAAIoD,OAAQ,KAC7B,6C,GAlBQnD,aAyBHqC,gBACb,SAAA9I,GAAK,MAAK,CACR3G,OAAQ2G,EAAM3G,OACdQ,MAAOmG,EAAMnG,SAHFiP,CAKbgJ,ICbIC,G,YACJ,WAAYzL,GAAQ,IAAD,6BACjB,8CAAMA,IAIN,IAAIpR,EALa,E,kFASjB,IAAI8Q,GAAiB7Q,KAAKmR,MAAM3E,QAASxM,KAAKmR,MAAMtO,OAAOyB,WACzD,IAAI8L,GACFpQ,KAAKmR,MAAMvD,kBACX5N,KAAKmR,MAAMtD,YACX7N,KAAKmR,MAAMtO,OACXyB,Y,+BAIJ,OAAItE,KAAKmR,MAAM9C,QACN,kBAAC,GAAD,CAAS9M,QAASvB,KAAKmR,MAAM9C,UAGlC,yBAAK4C,UAAU,OACZkK,KAAY,CAAEhb,KAAMH,KAAKmR,MAAMhR,QAAW,kBAAC,IAAD,CAAU6R,GAAE,UAAKhS,KAAKmR,MAAM9B,MAAMtH,KAAtB,eAEvD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOA,KAAI,UAAK/H,KAAKmR,MAAM9B,MAAMtH,KAAtB,KAA+B8U,OAAK,EAACvF,UAAWjF,KAC3D,kBAAC,IAAD,CAAOtK,KAAI,UAAK/H,KAAKmR,MAAM9B,MAAMtH,KAAtB,WAAqCuP,UAAW/B,KAC3D,kBAAC,IAAD,CAAOxN,KAAI,UAAK/H,KAAKmR,MAAM9B,MAAMtH,KAAtB,cAAwC8U,OAAK,EAACvF,UAAWc,KACpE,kBAAC,IAAD,CAAOrQ,KAAI,UAAK/H,KAAKmR,MAAM9B,MAAMtH,KAAtB,UAAoCuP,UAAWuB,KAC1D,kBAAC,IAAD,CAAO9Q,KAAI,UAAK/H,KAAKmR,MAAM9B,MAAMtH,KAAtB,aAAuC8U,OAAK,EAACvF,UAAWwB,KACnE,kBAAC,IAAD,CAAO/Q,KAAI,UAAK/H,KAAKmR,MAAM9B,MAAMtH,KAAtB,eAAyC8U,OAAK,EAACvF,UAAW4B,KACrE,kBAAC,IAAD,CAAOnR,KAAI,UAAK/H,KAAKmR,MAAM9B,MAAMtH,KAAtB,eAAyC8U,OAAK,EAACvF,UAAWqC,KACrE,kBAAC,IAAD,CAAO5R,KAAI,UAAK/H,KAAKmR,MAAM9B,MAAMtH,KAAtB,aAAuC8U,OAAK,EAACvF,UAAW+D,KACnE,kBAAC,IAAD,CAAOtT,KAAI,UAAK/H,KAAKmR,MAAM9B,MAAMtH,KAAtB,SAAmC8U,OAAK,EAACvF,UAAWuE,KAC/D,kBAAC,IAAD,CAAOvE,UAAW7B,MAGpB,kBAAC,GAAD,W,GAvCQnE,aA8CHqC,gBACb,SAAA9I,GAAK,MAAK,CACRwD,QAASxD,EAAMwD,QACf7B,QAAS3B,EAAM2B,QACfrM,KAAM0K,EAAM1K,KACZ0N,YAAahD,EAAMqD,SAASL,YAC5BD,kBAAmB/C,EAAMoD,SAASL,qBAEpC,CAAE/K,UARW8Q,CASbiJ,IC/DaE,I,2LAbX,OACE,yBAAK7L,UAAU,WACb,iEACA,yBAAKA,UAAU,oBACb,wIACA,kBAAC,IAAD,CAAMe,GAAG,OAAOf,UAAU,kBAA1B,UACA,uBAAGsC,KAAK,mDAAmDC,OAAO,SAASC,IAAI,sBAAsBxC,UAAU,UAA/G,sB,GARYK,cCDhByL,G,8LACeC,GACbhd,KAAKmR,MAAMhC,WAAa6N,EAAU7N,UACpCD,OAAO+N,SAAS,EAAG,K,+BAKrB,OAAOjd,KAAKmR,MAAM1O,a,GARI6O,aAYX4L,eAAWH,I,OCM1BI,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAAC,KAAD,CAAahP,QAAS,kBAAC,GAAD,CAAS9M,QAAQ,eAAiB+b,UAAWC,YAAaF,KAC9E,kBAAC,IAAD,CAAQG,SAAS,WACf,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzV,KAAK,IAAI8U,OAAK,EAACvF,UAAWwF,KACjC,kBAAC,IAAD,CAAO/U,KAAK,OAAOuP,UAAWsF,KAC9B,kBAAC,IAAD,CAAOtF,UAAW7B,UAM5BhE,SAASgM,eAAe,S1CbnB,SAAkBpd,GACvB,GAA6C,kBAAmBmP,UAAW,CAGzE,GADkB,IAAIkO,IAAIrc,UAAwB6N,OAAOC,SAASoE,MACpDoK,SAAWzO,OAAOC,SAASwO,OAKvC,OAGFzO,OAAO0O,iBAAiB,QAAQ,WAC9B,IAAMrO,EAAK,UAAMlO,UAAN,sBAEP2N,KAqEV,SAAiCO,EAAOlP,GAEtCyH,MAAMyH,GACH5O,MAAK,SAAAC,GAEJ,IAAMid,EAAcjd,EAASkG,QAAQ5E,IAAI,gBAEnB,MAApBtB,EAASkd,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CvO,UAAUC,cAAcuO,MAAMrd,MAAK,SAAAgP,GACjCA,EAAasO,aAAatd,MAAK,WAC7BuO,OAAOC,SAAS+O,eAKpB5O,GAAgBC,EAAOlP,MAG1BS,OAAM,WACLE,QAAQC,IACN,oEAzFAkd,CAAwB5O,EAAOlP,GAI/BmP,UAAUC,cAAcuO,MAAMrd,MAAK,WACjCK,QAAQC,IACN,iHAMJqO,GAAgBC,EAAOlP,O0CX/BoP,K","file":"static/js/main.92a8900f.chunk.js","sourcesContent":["export const VERSION = '0.0.1'\n\nexport const AUTOMATIC_INDEXING = {\n  NEVER: 'never',\n  MONTHLY: 'monthly',\n  DAILY: 'daily',\n  ALWAYS: 'always'\n}\n\nexport const PROVIDERS = {\n  MICROSOFT: 'microsoft'\n}\n\nexport const STORAGE_PROVIDERS = {\n  [PROVIDERS.MICROSOFT]: 'OneDrive'\n}\n\nexport const ITEM_TYPES = {\n  MOVIE: 'movie',\n  SHOW: 'show',\n  SEASON: 'season',\n  EPISODE: 'episode'\n}\n\nexport const FILE_TYPES = {\n  SOURCE: 'source',\n  CAPTION: 'caption'\n}\n\nexport const SOURCE_EXTENSIONS = ['mp4', 'm4v', 'mkv', 'webm']\nexport const CAPTION_EXTENSIONS = ['vtt']\n","import { UserAgentApplication } from 'msal'\n\nclass MicrosoftAuth {\n  static config = {\n    clientID: process.env.REACT_APP_MICROSOFT_CLIENT_ID,\n    scopes: ['user.read', 'files.read.all']\n  }\n\n  constructor() {\n    this._userAgentApplication = new UserAgentApplication({\n      auth: {\n        clientId: MicrosoftAuth.config.clientID\n      }\n    })\n  }\n\n  perform() {\n    return this.silentLogIn()\n  }\n\n  silentLogIn() {\n    return this.userAgentApplication.acquireTokenSilent({\n      scopes: MicrosoftAuth.config.scopes\n    }).then(response => {\n      return response.accessToken\n    }).catch(error => {\n      console.log(error)\n      return this.popupLogIn()\n    })\n  }\n\n  popupLogIn() {\n    return this.userAgentApplication.loginPopup({\n      scopes: MicrosoftAuth.config.scopes,\n      prompt: 'select_account'\n    }).then(() => {\n      return this.userAgentApplication.acquireTokenSilent({\n        scopes: MicrosoftAuth.config.scopes\n      })\n    }).then(response => {\n      return response.accessToken\n    })\n  }\n\n  get userAgentApplication() {\n    return this._userAgentApplication\n  }\n}\n\nexport default MicrosoftAuth\n","export const LOADING_BEGIN = 'LOADING_BEGIN'\nexport const LOADING_STOP = 'LOADING_STOP'\n\nexport const loadingBegin = caption => ({\n  type: LOADING_BEGIN,\n  payload: caption\n})\n\nexport const loadingStop = () => ({\n  type: LOADING_STOP\n})\n","import { Client } from '@microsoft/microsoft-graph-client'\n\nclass OneDrive {\n  constructor(accessToken) {\n    this._client = Client.init({\n      authProvider: done => done(null, accessToken)\n    })\n  }\n\n  movies() {\n    return this.client.api('/me/drive/root:/Plaain/Movies:/children').get()\n  }\n\n  shows() {\n    return this.client.api('/me/drive/root:/Plaain/Shows:/children').get()\n  }\n\n  children(itemId) {\n    return this.client.api(`/me/drive/items/${itemId}/children`).get()\n  }\n\n  get client() {\n    return this._client\n  }\n}\n\nexport default OneDrive\n","import {\n  PROVIDERS,\n  FILE_TYPES,\n  SOURCE_EXTENSIONS,\n  CAPTION_EXTENSIONS\n} from '../../constants'\n\nclass IndexFiles {\n  constructor(oneDrive, folderId) {\n    this._oneDrive = oneDrive\n    this._folderId = folderId\n  }\n\n  perform() {\n    return this.oneDrive.children(this.folderId).then(response => {\n      return response.value.map(item => this.index(item))\n        .filter(source => source != null)\n    })\n  }\n\n  index(item) {\n    const type = IndexFiles.fileType(item.name)\n    if (item.file == null || type == null) {\n      return null\n    }\n\n    return {\n      provider: PROVIDERS.MICROSOFT,\n      id: item.id,\n      type: type,\n      name: item.name,\n      extension: IndexFiles.fileExtension(item.name),\n      information: IndexFiles.fileInformation(item.name),\n      mimeType: item.file.mimeType,\n      url: item['@microsoft.graph.downloadUrl']\n    }\n  }\n\n  static fileType(fileName) {\n    if (SOURCE_EXTENSIONS.includes(IndexFiles.fileExtension(fileName))) {\n      return FILE_TYPES.SOURCE\n    } else if (\n      CAPTION_EXTENSIONS.includes(IndexFiles.fileExtension(fileName))\n    ) {\n      return FILE_TYPES.CAPTION\n    } else {\n      return null\n    }\n  }\n\n  static fileExtension(fileName) {\n    return fileName.split('.').pop()\n  }\n\n  static fileInformation(fileName) {\n    return fileName.split('.').shift()\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get folderId() {\n    return this._folderId\n  }\n}\n\nexport default IndexFiles\n","import { PROVIDERS, ITEM_TYPES } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nimport IndexFiles from './IndexFiles'\n\nclass IndexMovies {\n  constructor(accessToken) {\n    this._oneDrive = new OneDrive(accessToken)\n  }\n\n  async perform() {\n    return await Promise.all(await this.oneDrive.movies().then(response => {\n      return response.value.map(item => this.index(item))\n    })).then(movies => movies.filter(movie => movie !== null))\n  }\n\n  async index(item) {\n    if (item.folder == null) {\n      return null\n    }\n\n    const files = await new IndexFiles(this.oneDrive, item.id).perform()\n\n    return {\n      provider: PROVIDERS.MICROSOFT,\n      type: ITEM_TYPES.MOVIE,\n      providerId: item.id,\n      name: item.name,\n      files: files\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n}\n\nexport default IndexMovies\n","import { PROVIDERS, ITEM_TYPES } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nclass IndexShows {\n  constructor(accessToken) {\n    this._oneDrive = new OneDrive(accessToken)\n  }\n\n  async perform() {\n    return await Promise.all(await this.oneDrive.shows().then(response => {\n      return response.value.map(item => this.index(item))\n    })).then(shows => shows.filter(show => show !== null))\n  }\n\n  async index(item) {\n    if (item.folder == null) {\n      return null\n    }\n\n    return {\n      provider: PROVIDERS.MICROSOFT,\n      type: ITEM_TYPES.SHOW,\n      providerId: item.id,\n      name: item.name\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n}\n\nexport default IndexShows\n","import { PROVIDERS } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nclass IndexSeasons {\n  constructor(accessToken, shows, seasons) {\n    this._oneDrive = new OneDrive(accessToken)\n    this._shows = shows\n    this._seasons = seasons\n  }\n\n  async perform() {\n    return [].concat(...await Promise.all(\n      this.shows.map(show => this.performForShow(show, this.seasons))\n    ))\n  }\n\n  async performForShow(show, seasons) {\n    return await this.oneDrive.children(show.providerId).then(response => {\n      return seasons.filter(season => season.showId === show.id).map(season => {\n        const item = response.value.find(item => {\n          return season.id === `${show.id}-${Number.parseInt(item.name)}`\n        })\n\n        if (item) {\n          return {\n            ...season,\n            provider: PROVIDERS.MICROSOFT,\n            providerId: item.id\n          }\n        } else {\n          return season\n        }\n      })\n    })\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get shows() {\n    return this._shows\n  }\n\n  get seasons() {\n    return this._seasons\n  }\n}\n\nexport default IndexSeasons\n","import { PROVIDERS } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nimport IndexFiles from './IndexFiles'\n\nclass IndexEpisodes {\n  constructor(accessToken, seasons, episodes) {\n    this._oneDrive = new OneDrive(accessToken)\n    this._seasons = seasons\n    this._episodes = episodes\n  }\n\n  async perform() {\n    return [].concat(...await Promise.all(\n      this.seasons.map(season => this.performForSeason(season, this.episodes))\n    ))\n  }\n\n  async performForSeason(season, episodes) {\n    if (season.providerId) {\n      return await this.oneDrive.children(season.providerId)\n        .then(response => this.handleResponse(response, season, episodes))\n    } else {\n      return episodes.filter(episode => episode.seasonId === season.id)\n    }\n  }\n\n  async handleResponse(response, season, episodes) {\n    return await Promise.all(\n      episodes.filter(episode => episode.seasonId === season.id)\n        .map(episode => {\n          return this.index(\n            episode,\n            response.value.find(item => {\n              return episode.id === `${season.id}-${Number.parseInt(item.name)}`\n            })\n          )\n        })\n    )\n  }\n\n  async index(episode, item) {\n    if (item) {\n      const files = await new IndexFiles(this.oneDrive, item.id).perform()\n      return {\n        ...episode,\n        provider: PROVIDERS.MICROSOFT,\n        providerId: item.id,\n        files: files\n      }\n    } else {\n      return episode\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get seasons() {\n    return this._seasons\n  }\n\n  get episodes() {\n    return this._episodes\n  }\n}\n\nexport default IndexEpisodes\n","const rp = require('request-promise')\n\nclass TMDb {\n  static config = {\n    qs: {\n      api_key: process.env.REACT_APP_TMDB_API_KEY,\n      language: 'en-US'\n    },\n    headers: {\n      'User-Agent': 'Request-Promise'\n    },\n    json: true\n  }\n\n  static base_uri = 'https://api.themoviedb.org/3'\n\n  async findMovie(query) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/search/movie`,\n      qs: {...TMDb.config.qs, query}\n    }).then(response => {\n      if (response.results.length < 1) {\n        return null\n      }\n\n      return response.results[0].id\n    })\n  }\n\n  async findShow(query) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/search/tv`,\n      qs: {...TMDb.config.qs, query}\n    }).then(response => {\n      if (response.results.length < 1) {\n        return null\n      }\n\n      return response.results[0].id\n    })\n  }\n\n  async movie(id) {\n    await TMDb.rateLimiting()\n    return rp({...TMDb.config, uri: `${TMDb.base_uri}/movie/${id}`})\n  }\n\n  async movieCredits(id) {\n    await TMDb.rateLimiting()\n    return rp({...TMDb.config, uri: `${TMDb.base_uri}/movie/${id}/credits`})\n  }\n\n  async show(id) {\n    await TMDb.rateLimiting()\n    return rp({...TMDb.config, uri: `${TMDb.base_uri}/tv/${id}`})\n  }\n\n  async season(showId, seasonNumber) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/tv/${showId}/season/${seasonNumber}`\n    })\n  }\n\n  async seasonCredits(showId, seasonNumber) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/tv/${showId}/season/${seasonNumber}/credits`\n    })\n  }\n\n  async episode(showId, seasonNumber, episodeNumber) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/tv/${showId}/season/${seasonNumber}/episode` +\n           `/${episodeNumber}`\n    })\n  }\n\n  // TMDb only allows for up to 4 requests per second:\n  // https://developers.themoviedb.org/3/getting-started/request-rate-limiting\n  static async rateLimiting() {\n    await new Promise(resolve => setTimeout(resolve, 250))\n  }\n}\n\nexport default TMDb\n","import { ITEM_TYPES } from '../../constants'\n\nimport TMDb from '../databases/TMDb'\n\nclass FetchAllSeasons {\n  constructor(shows) {\n    this._shows = shows\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    return [].concat(...await Promise.all(\n      this.shows.map(show => {\n        return this.tmdb.show(show.id).then(response => {\n          return response.seasons.map(season => ({\n            id: `${show.id}-${season.season_number}`,\n            type: ITEM_TYPES.SEASON,\n            seasonNumber: season.season_number,\n            showId: show.id,\n            providerId: null\n          }))\n        })\n      })\n    ))\n  }\n\n  get shows() {\n    return this._shows\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchAllSeasons\n","import { ITEM_TYPES } from '../../constants'\n\nimport TMDb from '../databases/TMDb'\n\nclass FetchAllEpisodes {\n  constructor(seasons) {\n    this._seasons = seasons\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    return [].concat(...await Promise.all(\n      this.seasons.map(season => {\n        return this.tmdb.season(season.showId, season.seasonNumber)\n          .then(response => {\n            return response.episodes.map(episode => ({\n              id: `${season.id}-${episode.episode_number}`,\n              type: ITEM_TYPES.EPISODE,\n              episodeNumber: episode.episode_number,\n              seasonId: season.id,\n              providerId: null\n            }))\n          })\n      })\n    ))\n  }\n\n  get seasons() {\n    return this._seasons\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchAllEpisodes\n","class Parametrize {\n  constructor(string) {\n    this._string = string\n  }\n\n  perform() {\n    return this.string.toLowerCase().replace(/\\s/g, '+')\n  }\n\n  get string() {\n    return this._string\n  }\n}\n\nexport default Parametrize\n","import TMDb from '../databases/TMDb'\nimport Parametrize from '../Parametrize'\n\nclass FetchMovie {\n  constructor(movie) {\n    this._movie = movie\n    this._tmdb = new TMDb()\n  }\n\n  perform() {\n    return this.tmdb.findMovie(this.movie.name)\n      .then(id => this.fetch(id))\n  }\n\n  async fetch(id) {\n    this.movie.id = id\n    this.movie.path = `/app/movie/${this.movie.id}`\n\n    if (this.movie.id === null) {\n      return\n    }\n\n    await Promise.all([\n      this.fetchDetails(),\n      this.fetchCredits()\n    ])\n\n    return this.movie\n  }\n\n  fetchDetails() {\n    return this.tmdb.movie(this.movie.id)\n      .then(response => {\n        this.movie.backdropUrl =\n          `https://image.tmdb.org/t/p/original${response.backdrop_path}`\n        this.movie.overview = response.overview\n        this.movie.posterUrl =\n          `https://image.tmdb.org/t/p/original${response.poster_path}`\n        this.movie.releaseDate = response.release_date\n        this.movie.runtime = response.runtime\n        this.movie.name = response.title\n        this.movie.trailerLink =\n          'https://www.youtube.com/results?search_query=' +\n          `${new Parametrize(this.movie.name).perform()}+official+trailer`\n      })\n  }\n\n  fetchCredits() {\n    return this.tmdb.movieCredits(this.movie.id)\n      .then(response => {\n        this.movie.cast = response.cast.map(castMember => ({\n          id: castMember.id,\n          character: castMember.character,\n          name: castMember.name,\n          gender: castMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${castMember.profile_path}`\n        }))\n        this.movie.crew = response.crew.map(crewMember => ({\n          id: crewMember.id,\n          job: crewMember.job,\n          name: crewMember.name,\n          gender: crewMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${crewMember.profile_path}`\n        }))\n      })\n  }\n\n  get movie() {\n    return this._movie\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchMovie\n","import FetchMovie from '../services/fetching/FetchMovie'\n\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE'\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE'\n\nexport const fetchMovie = movie => {\n  return dispatch => {\n    return new FetchMovie(movie).perform().then(fetchedMovie => {\n      dispatch(updateMovie(fetchedMovie))\n    }).catch(() => dispatch(fetchMovie(movie)))\n  }\n}\n\nexport const removeMovie = id => ({\n  type: REMOVE_MOVIE,\n  payload: id\n})\n\nexport const updateMovie = movie => ({\n  type: UPDATE_MOVIE,\n  payload: movie\n})\n","import TMDb from '../databases/TMDb'\n\nclass FetchShow {\n  constructor(show) {\n    this._show = show\n    this._tmdb = new TMDb()\n  }\n\n  perform() {\n    return this.tmdb.findShow(this.show.name).then(id => this.fetch(id))\n  }\n\n  async fetch(id) {\n    this.show.id = id\n    this.show.path = `/app/show/${this.show.id}`\n\n    if (this.show.id === null) {\n      return\n    }\n\n    await Promise.all([\n      this.fetchDetails()\n    ])\n\n    return this.show\n  }\n\n  fetchDetails() {\n    return this.tmdb.show(this.show.id)\n      .then(response => {\n        this.show.backdropUrl =\n          `https://image.tmdb.org/t/p/original${response.backdrop_path}`\n        this.show.firstAirDate = response.first_air_date\n        this.show.lastAirDate = response.last_air_date\n        this.show.name = response.name\n        this.show.overview = response.overview\n        this.show.posterUrl =\n          `https://image.tmdb.org/t/p/original${response.poster_path}`\n      })\n  }\n\n  get show() {\n    return this._show\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchShow\n","import FetchShow from '../services/fetching/FetchShow'\n\nexport const REMOVE_SHOW = 'REMOVE_SHOW'\nexport const UPDATE_SHOW = 'UPDATE_SHOW'\n\nexport const fetchShow = show => {\n  return dispatch => {\n    return new FetchShow(show).perform().then(fetchedShow => {\n      dispatch(updateShow(fetchedShow))\n    }).catch(() => dispatch(fetchShow(show)))\n  }\n}\n\nexport const removeShow = id => ({\n  type: REMOVE_SHOW,\n  payload: id\n})\n\nexport const updateShow = show => ({\n  type: UPDATE_SHOW,\n  payload: show\n})\n","import TMDb from '../databases/TMDb'\nimport Parametrize from '../Parametrize'\n\nclass FetchSeason {\n  constructor(showId, showName, season) {\n    this._show = { id: showId, name: showName }\n    this._season = season\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    this.season.id = `${this.show.id}-${this.season.seasonNumber}`\n    this.season.path = `/app/season/${this.season.id}`\n\n    await Promise.all([\n      this.fetchDetails(),\n      this.fetchCredits()\n    ])\n\n    return this.season\n  }\n\n  fetchDetails() {\n    return this.tmdb.season(this.show.id, this.season.seasonNumber)\n      .then(response => {\n        this.season.airDate = response.air_date\n        this.season.name = response.name\n        this.season.overview = response.overview\n        this.season.posterUrl =\n          `https://image.tmdb.org/t/p/original${response.poster_path}`\n        this.season.trailerLink =\n          'https://www.youtube.com/results?search_query=' +\n          `${new Parametrize(this.show.name).perform()}+` +\n          `${new Parametrize(this.season.name).perform()}+` +\n          'official+trailer&i=movies-tv'\n      })\n  }\n\n  fetchCredits() {\n    return this.tmdb.seasonCredits(this.show.id, this.season.seasonNumber)\n      .then(response => {\n        this.season.cast = response.cast.map(castMember => ({\n          id: castMember.id,\n          character: castMember.character,\n          name: castMember.name,\n          gender: castMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${castMember.profile_path}`\n        }))\n        this.season.crew = response.crew.map(crewMember => ({\n          id: crewMember.id,\n          job: crewMember.job,\n          name: crewMember.name,\n          gender: crewMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${crewMember.profile_path}`\n        }))\n      })\n  }\n\n  get show() {\n    return this._show\n  }\n\n  get season() {\n    return this._season\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchSeason\n","import { createSelector } from 'reselect'\n\nconst showsSelector = state => state.shows\n\nexport const showSelector = id => {\n  return createSelector(\n    showsSelector,\n    shows => shows[id]\n  )\n}\n","import FetchSeason from '../services/fetching/FetchSeason'\n\nimport { showSelector } from '../selectors/shows'\n\nexport const REMOVE_SEASON = 'REMOVE_SEASON'\nexport const UPDATE_SEASON = 'UPDATE_SEASON'\n\nexport const fetchSeason = season => {\n  return (dispatch, getState) => {\n    const show = showSelector(season.showId)(getState())\n    return new FetchSeason(\n      show.id,\n      show.name,\n      season\n    ).perform().then(fetchedSeason => {\n      dispatch(updateSeason(fetchedSeason))\n    }).catch(() => dispatch(fetchSeason(season)))\n  }\n}\n\nexport const removeSeason = id => ({\n  type: REMOVE_SEASON,\n  payload: id\n})\n\nexport const updateSeason = season => ({\n  type: UPDATE_SEASON,\n  payload: season\n})\n","import TMDb from '../databases/TMDb'\n\nclass FetchEpisode {\n  constructor(\n    showId,\n    showName,\n    seasonNumber,\n    seasonName,\n    episode\n  ) {\n    this._show = { id: showId, name: showName }\n    this._season = { seasonNumber, name: seasonName }\n    this._episode = episode\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    this.episode.id =\n      `${this.show.id}-${this.season.seasonNumber}-` +\n      `${this.episode.episodeNumber}`\n\n    await Promise.all([\n      this.fetchDetails()\n    ])\n\n    return this.episode\n  }\n\n  fetchDetails() {\n    return this.tmdb.episode(\n      this.show.id, this.season.seasonNumber, this.episode.episodeNumber\n    ).then(response => {\n      this.episode.airDate = response.air_date\n      this.episode.name = response.name\n      this.episode.overview = response.overview\n    })\n  }\n\n  get show() {\n    return this._show\n  }\n\n  get season() {\n    return this._season\n  }\n\n  get episode() {\n    return this._episode\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchEpisode\n","import { createSelector } from 'reselect'\n\nconst seasonsSelector = state => state.seasons\n\nexport const seasonSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => seasons[id]\n  )\n}\n\nexport const inProgressSeasonsSelector = () => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).filter(season => {\n        return season.progress !== undefined && season.progress !== 0\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const recentlyWatchedSeasonsSelector = date => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).filter(season => {\n        return season.lastWatched >= date.getTime() &&\n          (season.progress === undefined || season.progress === 0)\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const seasonsByShowSelector = showId => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons)\n        .filter(season => season.showId.toString() === showId)\n    }\n  )\n}\n\nexport const seasonsByPersonSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).filter(season => {\n        return season.cast.find(castMember => castMember.id === id) ||\n          season.crew.find(crewMember => crewMember.id === id)\n      })\n    }\n  )\n}\n\nexport const seasonsCastMemberSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).map(season => season.cast).flat()\n        .filter(castMember => castMember.id === id)\n    }\n  )\n}\n\nexport const seasonsCrewMemberSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).map(season => season.crew).flat()\n        .filter(crewMember => crewMember.id === id)\n    }\n  )\n}\n","import FetchEpisode from '../services/fetching/FetchEpisode'\n\nimport { seasonSelector } from '../selectors/seasons'\nimport { showSelector } from '../selectors/shows'\n\nexport const REMOVE_EPISODE = 'REMOVE_EPISODE'\nexport const UPDATE_EPISODE = 'UPDATE_EPISODE'\n\nexport const fetchEpisode = episode => {\n  return (dispatch, getState) => {\n    const season = seasonSelector(episode.seasonId)(getState())\n    const show = showSelector(season.showId)(getState())\n    return new FetchEpisode(\n      show.id,\n      show.name,\n      season.seasonNumber,\n      season.name,\n      episode\n    ).perform().then(fetchedEpisode => {\n      dispatch(updateEpisode(fetchedEpisode))\n    }).catch(() => dispatch(fetchEpisode(episode)))\n  }\n}\n\nexport const removeEpisode = id => ({\n  type: REMOVE_EPISODE,\n  payload: id\n})\n\nexport const updateEpisode = episode => ({\n  type: UPDATE_EPISODE,\n  payload: episode\n})\n","import { VERSION, PROVIDERS } from '../constants'\n\nimport IndexMovies from '../services/indexing/IndexMovies'\nimport IndexShows from '../services/indexing/IndexShows'\nimport IndexSeasons from '../services/indexing/IndexSeasons'\nimport IndexEpisodes from '../services/indexing/IndexEpisodes'\nimport FetchAllSeasons from '../services/fetching/FetchAllSeasons'\nimport FetchAllEpisodes from '../services/fetching/FetchAllEpisodes'\n\nimport { updateVersion } from './version'\nimport { logInExpired } from './auth'\nimport { loadingBegin, loadingStop } from './loading'\nimport { fetchMovie, removeMovie } from './movies'\nimport { fetchShow, removeShow } from './shows'\nimport { fetchSeason, removeSeason } from './seasons'\nimport { fetchEpisode, removeEpisode } from './episodes'\n\nexport const INDEX_BEGIN = 'INDEX_BEGIN'\nexport const INDEX_SUCCESS = 'INDEX_SUCCESS'\nexport const INDEX_FAILURE = 'INDEX_FAILURE'\n\nexport const index = () => {\n  return (dispatch, getState) => {\n    dispatch(loadingBegin('Indexing...'))\n    dispatch(indexBegin())\n\n    new IndexMovies(getState().auth[PROVIDERS.MICROSOFT].token).perform()\n      .then(movies => {\n        cleanupOldItems(\n          dispatch,\n          movies.map(movie => movie.id),\n          Object.keys(getState().movies),\n          removeMovie\n        )\n        return awaitFetching(dispatch, movies, fetchMovie)\n      }).then(() => {\n        return new IndexShows(\n          getState().auth[PROVIDERS.MICROSOFT].token\n        ).perform()\n      }).then(shows => {\n        cleanupOldItems(\n          dispatch,\n          shows.map(show => show.id),\n          Object.keys(getState().shows),\n          removeShow\n        )\n        return awaitFetching(dispatch, shows, fetchShow)\n      }).then(() => {\n        return new FetchAllSeasons(Object.values(getState().shows)).perform()\n      }).then(seasons => {\n        return new IndexSeasons(\n          getState().auth[PROVIDERS.MICROSOFT].token,\n          Object.values(getState().shows),\n          seasons\n        ).perform()\n      }).then(seasons => {\n        cleanupOldItems(\n          dispatch,\n          seasons.map(season => season.id),\n          Object.keys(getState().seasons),\n          removeSeason\n        )\n        return awaitFetching(dispatch, seasons, fetchSeason)\n      }).then(() => {\n        return new FetchAllEpisodes(Object.values(getState().seasons)).perform()\n      }).then(episodes => {\n        return new IndexEpisodes(\n          getState().auth[PROVIDERS.MICROSOFT].token,\n          Object.values(getState().seasons),\n          episodes\n        ).perform()\n      }).then(episodes => {\n        cleanupOldItems(\n          dispatch,\n          episodes.map(episode => episode.id),\n          Object.keys(getState().episodes),\n          removeEpisode\n        )\n        return awaitFetching(dispatch, episodes, fetchEpisode)\n      }).then(() => {\n        dispatch(updateVersion(VERSION))\n        dispatch(indexSuccess())\n        dispatch(loadingStop())\n      }).catch(error => {\n        console.log(error)\n        dispatch(indexFailure(error))\n        dispatch(loadingStop())\n\n        if (error.statusCode === 401) {\n          dispatch(logInExpired(PROVIDERS.MICROSOFT))\n        }\n      })\n  }\n}\n\nfunction cleanupOldItems(dispatch, newIds, oldIds, removeAction) {\n  oldIds.forEach(id => {\n    if (!newIds.includes(id)) {\n      dispatch(removeAction(id))\n    }\n  })\n}\n\nasync function awaitFetching(dispatch, items, fetchAction) {\n  await Promise.all(items.map(item => {\n    return dispatch(fetchAction(item))\n  }))\n  return items\n}\n\nconst indexBegin = () => ({\n  type: INDEX_BEGIN\n})\n\nconst indexSuccess = () => ({\n  type: INDEX_SUCCESS\n})\n\nconst indexFailure = error => ({\n  type: INDEX_FAILURE,\n  payload: error\n})\n","export const UPDATE_VERSION = 'UPDATE_VERSION'\n\nexport const updateVersion = version => ({\n  type: UPDATE_VERSION,\n  payload: version\n})\n","import { PROVIDERS } from '../constants'\n\nimport MicrosoftAuth from '../services/auth/MicrosoftAuth'\n\nimport { loadingBegin, loadingStop } from './loading'\nimport { index } from './indexing'\n\nexport const LOG_IN_BEGIN = 'LOG_IN_BEGIN'\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\n\nexport const authenticateMicrosoft = () => {\n  return (dispatch, getState) => {\n    dispatch(loadingBegin('Authenticating...'))\n    dispatch(logInBegin(PROVIDERS.MICROSOFT))\n\n    new MicrosoftAuth().perform().then(token => {\n      dispatch(logInSuccess(PROVIDERS.MICROSOFT, token))\n      dispatch(loadingStop())\n\n      if (!getState().indexing.lastIndexed)\n        dispatch(index())\n    }).catch(error => {\n      console.log(error)\n      dispatch(logInFailure(PROVIDERS.MICROSOFT, error))\n      dispatch(loadingStop())\n    })\n  }\n}\n\nexport const logInExpired = provider => {\n  return dispatch => dispatch(logInFailure(provider, 'expired'))\n}\n\nconst logInBegin = provider => ({\n  type: LOG_IN_BEGIN,\n  payload: provider\n})\n\nconst logInSuccess = (provider, token) => ({\n  type: LOG_IN_SUCCESS,\n  payload: { provider, token }\n})\n\nconst logInFailure = (provider, error) => ({\n  type: LOG_IN_FAILURE,\n  payload: { provider, error }\n})\n","import { PROVIDERS } from '../constants'\n\nimport { LOG_IN_BEGIN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../actions/auth'\n\nconst initialState = Object.values(PROVIDERS).reduce((o, provider) => ({\n  ...o,\n  [provider]: {\n    token: null,\n    error: null\n  }\n}), {})\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case LOG_IN_BEGIN:\n    return {\n      ...state,\n      [action.payload]: {\n        ...state[action.payload],\n        error: null\n      }\n    }\n  case LOG_IN_SUCCESS:\n    return {\n      ...state,\n      [action.payload.provider]: {\n        ...state[action.payload.provider],\n        token: action.payload.token,\n        error: null\n      }\n    }\n  case LOG_IN_FAILURE:\n    return {\n      ...state,\n      [action.payload.provider]: {\n        ...state[action.payload.provider],\n        error: action.payload.error\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { AUTOMATIC_INDEXING } from '../constants'\n\nimport { SETTINGS_UPDATE } from '../actions/settings'\n\nconst initialState = {\n  automaticIndexing: AUTOMATIC_INDEXING.NEVER\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case SETTINGS_UPDATE:\n    return {\n      ...state,\n      ...action.payload\n    }\n  default:\n    return state\n  }\n}\n","import { INDEX_BEGIN, INDEX_SUCCESS, INDEX_FAILURE } from '../actions/indexing'\n\nconst initialState = {\n  lastIndexed: 0,\n  error: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case INDEX_BEGIN:\n    return {\n      ...state,\n      error: null\n    }\n  case INDEX_SUCCESS:\n    return {\n      ...state,\n      lastIndexed: new Date().getTime()\n    }\n  case INDEX_FAILURE:\n    return {\n      ...state,\n      error: action.payload\n    }\n  default:\n    return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport version from './version'\nimport auth from './auth'\nimport settings from './settings'\nimport indexing from './indexing'\nimport loading from './loading'\nimport movies from './movies'\nimport shows from './shows'\nimport seasons from './seasons'\nimport episodes from './episodes'\n\nconst rootReducer = combineReducers({\n  version,\n  auth,\n  settings,\n  indexing,\n  loading,\n  movies,\n  shows,\n  seasons,\n  episodes\n})\n\nexport default persistReducer({\n  key: 'root',\n  storage: storage,\n  whitelist: [\n    'version',\n    'auth',\n    'settings',\n    'indexing',\n    'movies',\n    'shows',\n    'seasons',\n    'episodes'\n  ],\n  debug: process.env.NODE_ENV === 'development'\n}, rootReducer)\n","import { VERSION } from '../constants'\n\nimport { UPDATE_VERSION } from '../actions/version'\n\nconst initialState = VERSION\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case UPDATE_VERSION:\n    return action.payload\n  default:\n    return state\n  }\n}\n","export const SETTINGS_UPDATE = 'SETTINGS_UPDATE'\n\nexport const updateSettings = settings => ({\n  type: SETTINGS_UPDATE,\n  payload: settings\n})\n","import { LOADING_BEGIN, LOADING_STOP } from '../actions/loading'\n\nconst initialState = false\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case LOADING_BEGIN:\n    return action.payload\n  case LOADING_STOP:\n    return false\n  default:\n    return state\n  }\n}\n","import { REMOVE_MOVIE, UPDATE_MOVIE } from '../actions/movies'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_MOVIE: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: movie, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_MOVIE:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { REMOVE_SHOW, UPDATE_SHOW } from '../actions/shows'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_SHOW: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: show, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_SHOW:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { REMOVE_SEASON, UPDATE_SEASON } from '../actions/seasons'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_SEASON: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: season, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_SEASON:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { REMOVE_EPISODE, UPDATE_EPISODE } from '../actions/episodes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_EPISODE: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: episode, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_EPISODE:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport persistedReducer from './reducers'\n\nexport default createStore(\n  persistedReducer,\n  applyMiddleware(thunk)\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still\n        // exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // This is used to notify users that a new version of the app will\n              // available after a reload.\n              window.newVersionAvailable = true\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { AUTOMATIC_INDEXING } from '../constants'\n\nclass AutomaticIndexing {\n  constructor(setting, lastIndexed, indexAction) {\n    this._setting = setting\n    this._lastIndexed = lastIndexed\n    this._indexAction = indexAction\n  }\n\n  perform() {\n    if (this.setting === AUTOMATIC_INDEXING.NEVER) {\n      return false\n    }\n\n    if (\n      this.setting === AUTOMATIC_INDEXING.ALWAYS ||\n      new Date().getFullYear() !== new Date(this.lastIndexed).getFullYear() ||\n      new Date().getMonth() !== new Date(this.lastIndexed).getMonth() ||\n      (this.setting !== AUTOMATIC_INDEXING.MONTHLY &&\n        new Date().getDate() !== new Date(this.lastIndexed).getDate())\n    ) {\n      this.indexAction()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  get setting() {\n    return this._setting\n  }\n\n  get lastIndexed() {\n    return this._lastIndexed\n  }\n\n  get indexAction() {\n    return this._indexAction\n  }\n}\n\nexport default AutomaticIndexing\n","import { VERSION } from '../constants'\n\nclass IndexAfterUpdate {\n  constructor(versionUsedForLastIndex, indexAction) {\n    this._versionUsedForLastIndex = versionUsedForLastIndex\n    this._indexAction = indexAction\n  }\n\n  perform() {\n    if (this.versionUsedForLastIndex !== VERSION) {\n      this.indexAction()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  get versionUsedForLastIndex() {\n    return this._versionUsedForLastIndex\n  }\n\n  get indexAction() {\n    return this._indexAction\n  }\n}\n\nexport default IndexAfterUpdate\n","import React, { Component } from 'react'\nimport './Cover.scss'\n\nclass Cover extends Component {\n  render() {\n    return (\n      <img className='Cover' src={this.props.url} alt={this.props.alt} width={this.props.width} />\n    )\n  }\n}\n\nexport default Cover\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Swiper from 'swiper'\nimport 'swiper/swiper.scss'\nimport './HorizontalSlide.scss'\n\nimport Cover from './Cover'\n\nclass HorizontalSlide extends Component {\n  componentDidMount() {\n    new Swiper(\n      document.querySelector(\n        `.HorizontalSlide#${this.props.id} .swiper-container`\n      ), {\n        spaceBetween: 15,\n        slidesPerView: 'auto',\n        slidesOffsetBefore: 20,\n        slidesOffsetAfter: 20,\n        grabCursor: true\n      }\n    )\n  }\n\n  render() {\n    return (\n      <div className='HorizontalSlide' id={this.props.id}>\n        <div className='swiper-container'>\n          <div className='swiper-wrapper'>\n            {this.props.items.length ? (\n              this.props.items.map(item => {\n                return (\n                  <div className='swiper-slide' key={item.id}>\n                    <Link to={item.path}>\n                      <Cover url={item.posterUrl || '/cover.png'} alt={item.name} width='100%' />\n                    </Link>\n                  </div>\n                )\n              })\n            ) : (\n              <div className='swiper-slide'>\n                <h3>Nothing found.</h3>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default HorizontalSlide\n","import { createSelector } from 'reselect'\n\nconst moviesSelector = state => state.movies\n\nexport const movieSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => movies[id]\n  )\n}\n\nexport const inProgressMoviesSelector = () => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).filter(movie => {\n        return movie.progress !== undefined &&\n          movie.progress !== 0 &&\n          movie.progress / 60 < movie.runtime * 0.95\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const recentlyWatchedMoviesSelector = date => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).filter(movie => {\n        return movie.lastWatched >= date.getTime() &&\n          (movie.progress === undefined ||\n            movie.progress === 0 ||\n            movie.progress / 60 >= movie.runtime * 0.95)\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const moviesByPersonSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).filter(movie => {\n        return movie.cast.find(castMember => castMember.id === id) ||\n          movie.crew.find(crewMember => crewMember.id === id)\n      })\n    }\n  )\n}\n\nexport const moviesCastMemberSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).map(movie => movie.cast).flat()\n        .filter(castMember => castMember.id === id)\n    }\n  )\n}\n\nexport const moviesCrewMemberSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).map(movie => movie.crew).flat()\n        .filter(crewMember => crewMember.id === id)\n    }\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './ForYou.scss'\n\nimport { PROVIDERS } from '../constants'\n\nimport { index } from '../actions/indexing'\n\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nimport {\n  inProgressMoviesSelector,\n  recentlyWatchedMoviesSelector\n} from '../selectors/movies'\nimport {\n  inProgressSeasonsSelector,\n  recentlyWatchedSeasonsSelector\n} from '../selectors/seasons'\n\nclass ForYou extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:first-child').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:first-child').classList.remove('active')\n  }\n\n  render() {\n    const oneMonthAgo = new Date()\n    oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1)\n    const inProgress = [\n      ...inProgressMoviesSelector()({ movies: this.props.movies }),\n      ...inProgressSeasonsSelector()({ seasons: this.props.seasons })\n    ].sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    const recentlyWatched = [\n      ...recentlyWatchedMoviesSelector(oneMonthAgo)({\n        movies: this.props.movies\n      }),\n      ...recentlyWatchedSeasonsSelector(oneMonthAgo)({\n        seasons: this.props.seasons\n      })\n    ].sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n\n    if (\n      inProgress.length > 0 ||\n        recentlyWatched.length > 0\n    ) {\n      return (\n        <div className='ForYou'>\n          {inProgress.length > 0 && <section>\n            <h2>Continue watching</h2>\n            <HorizontalSlide items={inProgress} id='inProgress' />\n          </section>}\n\n          {recentlyWatched.length > 0 && <section>\n            <h2>Recently watched</h2>\n            <HorizontalSlide items={recentlyWatched} id='recentlyWatched' />\n          </section>}\n        </div>\n      )\n    } else if (\n      Object.values(PROVIDERS).filter(provider => {\n        return this.props.auth[provider].token !== null\n      }).length === 0\n    ) {\n      return (\n        <div className='ForYou'>\n          <h2>Get started</h2>\n          <p>To watch your movies and TV shows, you first have to sign in with the cloud service that hosts your media.</p>\n          <Link to='/app/settings' className='button'>\n            Authenticate\n          </Link>\n          <p className='small'>Note that Plaain may <span className='bold'>not</span> be used to stream pirated content or publicly share your private media library. You may only connect to your private cloud storage.</p>\n        </div>\n      )\n    } else if (\n      Object.entries(this.props.movies).length === 0 &&\n        Object.entries(this.props.shows).length === 0\n    ) {\n      return (\n        <div className='ForYou'>\n          <h2>Get started</h2>\n          <p>You signed into a cloud service, but we didn&apos;t find any movies or TV shows.</p>\n          <p>It&apos;s likely that you just have to move some of your files around and create some folders to make it work.</p>\n          <p>Reference the getting started guide to learn how to organize your files so that Plaain finds them. After you&apos;re done, just re-index.</p>\n          <div className='ForYou__buttons'>\n            <a className='button primary' href='https://github.com/jonhue/plaain#getting-started' target='_blank' rel='noopener noreferrer'>Getting started</a>\n            <button onClick={this.props.index}>Index</button>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className='ForYou'>\n          <h2>Get started</h2>\n          <p>Here, you&apos;ll be able to find your recently watched movie or the show you didn&apos;t finish yet.</p>\n          <div className='ForYou__buttons'>\n            {Object.entries(this.props.movies).length > 0 && <Link to='/app/movies' className='button'>\n              Discover your movies\n            </Link>}\n            {Object.entries(this.props.shows).length > 0 && <Link to='/app/shows' className='button'>\n              Discover your shows\n            </Link>}\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows,\n    seasons: state.seasons,\n    auth: state.auth\n  }),\n  { index }\n)(ForYou)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './ItemGrid.scss'\n\nimport Cover from './Cover'\n\nclass ItemGrid extends Component {\n  render() {\n    return (\n      <div className='ItemGrid' id={this.props.id}>\n        {this.props.items.length ? this.props.items.map(item => {\n          return (\n            <div className='ItemGrid__item' key={item.id}>\n              <Link to={item.path}>\n                <Cover url={item.posterUrl || '/cover.png'} alt={item.name} width='100%' />\n              </Link>\n            </div>\n          )\n        }) : (\n          <div className='ItemGrid__item'>\n            <h3>Nothing found.</h3>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default ItemGrid\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Swiper from 'swiper'\nimport 'swiper/swiper.scss'\nimport './VerticalSlide.scss'\n\nimport Cover from './Cover'\n\nclass VerticalSlide extends Component {\n  componentDidMount() {\n    new Swiper(\n      document.querySelector(\n        `.VerticalSlide#${this.props.id} .swiper-container`\n      ), {\n        direction: 'vertical',\n        slidesPerView: 'auto',\n        grabCursor: true,\n        effect: 'coverflow',\n        coverflowEffect: {\n          rotate: 0,\n          stretch: 425,\n          depth: 150,\n          modifier: 1,\n          slideShadows : false\n        },\n        history: {\n          replaceState: true,\n          key: this.props.path\n        }\n      }\n    )\n  }\n\n  render() {\n    return (\n      <div className='VerticalSlide' id={this.props.id}>\n        <div className='swiper-container'>\n          <div className='swiper-wrapper'>\n            {this.props.items.length ? this.props.items.map(item => {\n              return (\n                <div className='swiper-slide' data-history={item.id} key={item.id}>\n                  <Link to={item.path}>\n                    <Cover url={item.posterUrl || '/cover.png'} alt={item.name} width='100%' />\n                  </Link>\n                </div>\n              )\n            }) : (\n              <div className='swiper-slide'>\n                <h3>Nothing found.</h3>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default VerticalSlide\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>zoom</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"22\" x2=\"15.656\" y1=\"22\" y2=\"15.656\"/>\n  \t\t<circle cx=\"10\" cy=\"10\" fill=\"none\" r=\"8\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\"/>\n  \t</g>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Movies.scss'\n\nimport ItemGrid from '../components/ItemGrid'\nimport VerticalSlide from '../components/VerticalSlide'\nimport ZoomIcon from '../components/Nucleo/icons/zoom.jsx'\n\nclass Movies extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.remove('active')\n  }\n\n  render() {\n    return (\n      <div className='Movies'>\n        {Object.entries(this.props.movies).length > 0 && (\n          <div className='Movies__wrapper'>\n            <div className='Movies__find'>\n              <Link to='/app/find'>\n                <ZoomIcon width={24} height={24} />\n              </Link>\n            </div>\n            {window.innerWidth < 600 ? <VerticalSlide items={Object.values(this.props.movies).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='movies' path='movies' /> : <ItemGrid items={Object.values(this.props.movies).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='movies' />}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies\n  })\n)(Movies)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './NotFound.scss'\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className='NotFound'>\n        <h2>You want to get lost?</h2>\n        <p>This path went astray... If you do want to get lost, we recommend <a href='https://www.imdb.com/title/tt6969502/' target='_blank' rel='noopener noreferrer'>Get Lost! ny Mirjam de With</a>.</p>\n        <p>If all you&apos;re looking for is to get back on track: you can <Link to='/app'>find home this way</Link>.</p>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport './Backdrop.scss'\n\nclass Backdrop extends Component {\n  render() {\n    return (\n      <picture className='Backdrop'>\n        <img src={this.props.url} alt='backdrop' />\n      </picture>\n    )\n  }\n}\n\nexport default Backdrop\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './PersonList.scss'\n\nclass PersonList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      wrapped: true\n    }\n  }\n\n  toggle() {\n    this.setState({\n      wrapped: !this.state.wrapped\n    })\n  }\n\n  render() {\n    return (\n      <div className='PersonList'>\n        {this.props.people\n          .slice(0, this.state.wrapped ? 10 : this.props.people.length)\n          .map((person, index) => {\n            return <p key={index}><Link to={`/app/person/${person.id}`}>{person.name}</Link> · <span>{person[this.props.attribute]}</span></p>\n          })}\n        <span onClick={this.toggle.bind(this)}>{this.state.wrapped ? 'Show more' : 'Show less'}</span>\n      </div>\n    )\n  }\n}\n\nexport default PersonList\n","import React, { Component } from 'react'\nimport ISO6391 from 'iso-639-1'\n\nclass PlyrCaption extends Component {\n  render() {\n    return (\n      <track\n        kind='captions'\n        label={this.props.caption.information}\n        src={this.props.caption.url}\n        srcLang={ISO6391.getCode(this.props.caption.information) || 'en'}\n        default={this.props.default} />\n    )\n  }\n}\n\nexport default PlyrCaption\n","import React, { Component } from 'react'\n\nclass PlyrSource extends Component {\n  render() {\n    return (\n      <source\n        src={this.props.source.url}\n        type={this.props.source.mimeType}\n        size={this.props.source.information} />\n    )\n  }\n}\n\nexport default PlyrSource\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Plyr from 'plyr'\nimport './PlyrPlayer.scss'\n\nimport { FILE_TYPES } from '../constants'\n\nimport PlyrCaption from './PlyrPlayer/PlyrCaption'\nimport PlyrSource from './PlyrPlayer/PlyrSource'\n\nimport { logInExpired } from '../actions/auth'\n\nclass PlyrPlayer extends Component {\n  componentDidMount() {\n    this.player = new Plyr(document.querySelector('#player'), {\n      debug: process.env.NODE_ENV === 'development'\n    })\n\n    this.player.on('error', error => {\n      console.log(error)\n\n      this.props.logInExpired(this.props.item.provider)\n    })\n\n    this.player.on('timeupdate', event => {\n      if (event.detail.plyr.currentTime !== 0 ) {\n        this.props.updateItemAction({\n          id: this.props.item.id,\n          lastWatched: new Date().getTime(),\n          progress: event.detail.plyr.currentTime\n        })\n      }\n    })\n\n    this.player.on('exitfullscreen', () => {\n      const component = document.querySelector('.PlyrPlayer')\n\n      if (component && !component.dataset.preventExit) {\n        this.player.stop()\n        component.style.display = 'none'\n\n        if (this.props.exitedAction) {\n          this.props.exitedAction()\n        }\n      }\n    })\n\n    this.player.on('ended', () => {\n      this.player.fullscreen.exit()\n      document.querySelector('.PlyrPlayer').style.display = 'none'\n\n      if (this.props.endedAction) {\n        this.props.endedAction()\n      }\n    })\n  }\n\n  render() {\n    if (\n      this.props.item.files\n        .filter(file => file.type === FILE_TYPES.SOURCE).length === 0\n    ) {\n      return null\n    }\n\n    return (\n      <div className='PlyrPlayer'>\n        <video\n          src={this.props.item.files\n            .filter(file => file.type === FILE_TYPES.SOURCE)[0].url}\n          id='player' crossOrigin='true' playsInline controls>\n          {this.props.item.files.filter(file => file.type === FILE_TYPES.SOURCE)\n            .map((source, index) => {\n              return <PlyrSource source={source} key={index} />\n            })}\n          {this.props.item.files\n            .filter(file => file.type === FILE_TYPES.CAPTION)\n            .map((caption, index) => {\n              return (\n                <PlyrCaption\n                  caption={caption}\n                  default={index === 0}\n                  key={index} />\n              )\n            })}\n          <a href={this.props.item.files.filter(file => file.type === FILE_TYPES.SOURCE)[0].src} download>Download</a>\n        </video>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { logInExpired }\n)(PlyrPlayer)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Movie.scss'\n\nimport { FILE_TYPES, STORAGE_PROVIDERS } from '../constants'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport PersonList from '../components/PersonList'\nimport PlyrPlayer from '../components/PlyrPlayer'\n\nimport { updateMovie } from '../actions/movies'\n\nimport { movieSelector } from '../selectors/movies'\n\nclass Movie extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      movie: movieSelector(this.props.match.params.id)({\n        movies: this.props.movies\n      })\n    }\n  }\n\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.remove('active')\n  }\n\n  continue() {\n    this.watch(this.state.movie.progress)\n  }\n\n  watch(progress = 0) {\n    const player = document.querySelector('.PlyrPlayer')\n    const plyr = player.querySelector('#player').plyr\n    player.dataset.preventExit = true\n    // Wait until Plyr is ready to start playing\n    setTimeout(() => {\n      player.style.display = 'block'\n      plyr.fullscreen.enter()\n      plyr.play()\n      plyr.currentTime = progress\n      setTimeout(() => { delete player.dataset.preventExit}, 100) // Fixing #232\n    }, 100)\n  }\n\n  finishedMovie() {\n    this.props.updateMovie({\n      id: this.state.movie.id,\n      progress: 0\n    })\n  }\n\n  render() {\n    if (this.state.movie) {\n      return (\n        <div className='Movie'>\n          {this.state.movie.files.filter(file => file.type === FILE_TYPES.SOURCE).length > 0 && <PlyrPlayer item={this.state.movie} updateItemAction={this.props.updateMovie} endedAction={this.finishedMovie.bind(this)} />}\n          <Backdrop url={this.state.movie.backdropUrl} />\n          <div className='Movie__details'>\n            <Cover url={this.state.movie.posterUrl} alt='poster' width='50%' />\n            <h1>{this.state.movie.name}</h1>\n            <div className='Movie__information'>\n              <p className='small'>{new Date(this.state.movie.releaseDate).getFullYear()}</p>\n              <p className='small'>{Math.floor(this.state.movie.runtime / 60) !== 0 && `${Math.floor(this.state.movie.runtime / 60)}h`} {this.state.movie.runtime % 60 !== 0 && `${this.state.movie.runtime % 60}m`}</p>\n            </div>\n            <div className='Movie__actions'>\n              {this.state.movie.files.filter(file => file.type === FILE_TYPES.SOURCE).length > 0 && this.state.movie.progress !== undefined && this.state.movie.progress !== 0 && this.state.movie.progress / 60 < this.state.movie.runtime && <button className='primary' id='continue' onClick={this.continue.bind(this)}>Continue</button>}\n              {this.state.movie.files.filter(file => file.type === FILE_TYPES.SOURCE).length > 0 && <button className={this.state.movie.progress === undefined || this.state.movie.progress === 0 || this.state.movie.progress / 60 >= this.state.movie.runtime ? 'primary' : ''} id='watch' onClick={() => this.watch()}>Watch</button>}\n              <a className='button' id='trailer' href={this.state.movie.trailerLink} target='_blank' rel='noopener noreferrer'>Play trailer</a>\n            </div>\n            <p className='Movie__overview'>{this.state.movie.overview}</p>\n            <div className='Movie__people'>\n              <div className='Movie__people__cast'>\n                <h4>Starring</h4>\n                <PersonList people={this.state.movie.cast} attribute='character' />\n              </div>\n              <div className='Movie__people__crew'>\n                <h4>Crew</h4>\n                <PersonList people={this.state.movie.crew} attribute='job' />\n              </div>\n            </div>\n          </div>\n          <div className='Movie__sources'>\n            <div>\n              <h4>Sources</h4>\n              <p className='small'>Hosted on {STORAGE_PROVIDERS[this.state.movie.provider]}</p>\n              <div>\n                <div className='Movie__sources__versions'>\n                  <h5>Versions</h5>\n                  {this.state.movie.files\n                    .filter(file => file.type === FILE_TYPES.SOURCE)\n                    .map((file, index) => {\n                      return <p className='small' key={index}>{file.information}</p>\n                    })}\n                  {this.state.movie.files\n                    .filter(file => file.type === FILE_TYPES.SOURCE)\n                    .length === 0 && <p className='small'>-</p>}\n                </div>\n                <div className='Movie__sources__captions'>\n                  <h5>Subtitles</h5>\n                  {this.state.movie.files\n                    .filter(file => file.type === FILE_TYPES.CAPTION)\n                    .map((file, index) => {\n                      return <p className='small' key={index}>{file.information}</p>\n                    })}\n                  {this.state.movie.files\n                    .filter(file => file.type === FILE_TYPES.CAPTION)\n                    .length === 0 && <p className='small'>-</p>}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies\n  }),\n  { updateMovie }\n)(Movie)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Shows.scss'\n\nimport ItemGrid from '../components/ItemGrid'\nimport VerticalSlide from '../components/VerticalSlide'\nimport ZoomIcon from '../components/Nucleo/icons/zoom.jsx'\n\nclass Shows extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.remove('active')\n  }\n\n  render() {\n    return (\n      <div className='Shows'>\n        {Object.entries(this.props.shows).length > 0 && (\n          <div className='Shows__wrapper'>\n            <div className='Shows__find'>\n              <Link to='/app/find'>\n                <ZoomIcon width={24} height={24} />\n              </Link>\n            </div>\n            {window.innerWidth < 600 ? <VerticalSlide items={Object.values(this.props.shows).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='shows' path='shows' /> : <ItemGrid items={Object.values(this.props.shows).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='shows' />}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    shows: state.shows\n  })\n)(Shows)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Show.scss'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nimport { showSelector } from '../selectors/shows'\nimport { seasonsByShowSelector } from '../selectors/seasons'\n\nclass Show extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.remove('active')\n  }\n\n  render() {\n    const show = showSelector(this.props.match.params.id)({\n      shows: this.props.shows\n    })\n    const seasons = seasonsByShowSelector(this.props.match.params.id)({\n      seasons: this.props.seasons\n    })\n\n    if (show) {\n      return (\n        <div className='Show'>\n          <Backdrop url={show.backdropUrl} />\n          <div className='Show__details'>\n            <Cover url={show.posterUrl} alt='poster' width='50%' />\n            <h1>{show.name}</h1>\n            <div className='Show__information'>\n              <p className='small'>{new Date(show.firstAirDate).getFullYear()} - {new Date(show.lastAirDate).getFullYear()}</p>\n            </div>\n            <p className='Show__overview'>{show.overview}</p>\n          </div>\n          {seasons.length > 0 && <div className='Show__seasons'>\n            <h2>Seasons</h2>\n            <HorizontalSlide items={seasons.sort((a, b) => (a.seasonNumber < b.seasonNumber) ? -1 : 1)} id='seasons' />\n          </div>}\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    shows: state.shows,\n    seasons: state.seasons\n  })\n)(Show)\n","import { createSelector } from 'reselect'\n\nconst episodesSelector = state => state.episodes\n\nexport const episodeSelector = id => {\n  return createSelector(\n    episodesSelector,\n    episodes => episodes[id]\n  )\n}\n\nexport const episodesBySeasonSelector = seasonId => {\n  return createSelector(\n    episodesSelector,\n    episodes => {\n      return Object.values(episodes)\n        .filter(episode => episode.seasonId === seasonId)\n    }\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Season.scss'\n\nimport { FILE_TYPES } from '../constants'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport PersonList from '../components/PersonList'\nimport PlyrPlayer from '../components/PlyrPlayer'\n\nimport { updateSeason } from '../actions/seasons'\nimport { updateEpisode } from '../actions/episodes'\n\nimport { showSelector } from '../selectors/shows'\nimport { seasonSelector } from '../selectors/seasons'\nimport { episodesBySeasonSelector } from '../selectors/episodes'\n\nclass Season extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      season: seasonSelector(this.props.match.params.id)({\n        seasons: this.props.seasons\n      }),\n      episodes: episodesBySeasonSelector(this.props.match.params.id)({\n        episodes: this.props.episodes\n      }),\n      watchableEpisodes: episodesBySeasonSelector(this.props.match.params.id)({\n        episodes: this.props.episodes\n      }).filter(episode => {\n        return episode.provider !== undefined &&\n          episode.files.filter(file => file.type === FILE_TYPES.SOURCE)\n            .length !== 0\n      }),\n      episodesWrapped: true\n    }\n    this.state.currentEpisodeNumber =\n      this.state.watchableEpisodes.length > 0 &&\n      this.state.watchableEpisodes[0].episodeNumber\n  }\n\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.remove('active')\n  }\n\n  toggleEpisodes() {\n    this.setState({\n      episodesWrapped: !this.state.episodesWrapped\n    })\n  }\n\n  continue() {\n    this.watch(\n      this.state.season.progress || 0,\n      this.state.episodes[this.state.season.progress - 1].progress || 0\n    )\n  }\n\n  watch(episodeNumber, progress = 0) {\n    this.setState({\n      currentEpisodeNumber: episodeNumber\n    })\n\n    this.props.updateSeason({\n      id: this.state.season.id,\n      lastWatched: new Date().getTime(),\n      progress: episodeNumber\n    })\n\n    const player = document.querySelector('.PlyrPlayer')\n    const plyr = player.querySelector('#player').plyr\n    player.dataset.preventExit = true\n    // Wait until Plyr is ready to start playing after the sources changed\n    setTimeout(() => {\n      player.style.display = 'block'\n      plyr.fullscreen.enter()\n      plyr.play()\n      plyr.currentTime = progress\n      setTimeout(() => { delete player.dataset.preventExit}, 100) // Fixing #232\n    }, 100)\n  }\n\n  stoppedEpisode() {\n    // this.forceUpdate()\n  }\n\n  finishedEpisode() {\n    this.props.updateEpisode({\n      id: this.state.episodes[this.state.currentEpisodeNumber - 1].id,\n      progress: 0\n    })\n\n    let episodeNumber = 0\n    if (\n      this.state.episodes[this.state.currentEpisodeNumber].files\n        .filter(file => file.type === FILE_TYPES.SOURCE).length > 0\n    ) {\n      episodeNumber = this.state.currentEpisodeNumber + 1\n    }\n\n    this.props.updateSeason({\n      id: this.state.season.id,\n      progress: episodeNumber\n    })\n\n    // this.forceUpdate()\n  }\n\n  render() {\n    if (this.state.season) {\n      return (\n        <div className='Season'>\n          {this.state.watchableEpisodes.length > 0 && <PlyrPlayer item={this.state.episodes[this.state.currentEpisodeNumber - 1]} updateItemAction={this.props.updateEpisode} exitedAction={this.stoppedEpisode.bind(this)} endedAction={this.finishedEpisode.bind(this)} />}\n          <Backdrop url={showSelector(this.state.season.showId)({ shows: this.props.shows }).backdropUrl} />\n          <div className='Season__details'>\n            <Cover url={this.state.season.posterUrl} alt='poster' width='50%' />\n            <h1>Season {this.state.season.seasonNumber}</h1>\n            <div className='Season__information'>\n              <p className='small'>{showSelector(this.state.season.showId)({ shows: this.props.shows }).name}</p>\n              <p className='small'>{new Date(this.state.season.airDate).getFullYear()}</p>\n            </div>\n            <div className='Season__actions'>\n              {this.state.watchableEpisodes.length > 0 && this.state.movie.progress !== undefined && this.state.season.progress !== 0 && <button className='primary' id='continue' onClick={this.continue.bind(this)}>Continue episode {this.state.season.progress}</button>}\n              {this.state.watchableEpisodes.length > 0 && this.state.season.progress !== 1 && <button className={this.state.movie.progress === undefined || this.state.season.progress === 0 ? 'primary' : ''} id='watch' onClick={() => this.watch(this.state.watchableEpisodes[0].episodeNumber)}>Watch episode {this.state.watchableEpisodes[0].episodeNumber}</button>}\n              <a className='button' id='trailer' href={this.state.season.trailerLink} target='_blank' rel='noopener noreferrer'>Play trailer</a>\n            </div>\n            <div className='Season__episodes'>\n              <div>\n                {this.state.episodes\n                  .sort((a, b) => (a.episodeNumber < b.episodeNumber) ? -1 : 1)\n                  .slice(\n                    0,\n                    this.state.episodesWrapped ? 0 : this.state.episodes.length\n                  )\n                  .map((episode, index) => {\n                    return (\n                      <div disabled={this.state.episodes[episode.episodeNumber - 1].provider === undefined || this.state.episodes[episode.episodeNumber - 1].files.filter(file => file.type === FILE_TYPES.SOURCE).length === 0} className='Season__episode' onClick={() => this.watch(episode.episodeNumber)} key={index}>\n                        <div className='Season__episode__number'>{episode.episodeNumber}</div>\n                        <div className='Season__episode__details'>\n                          <h2>{episode.name}</h2>\n                          <p className='small'>Aired {new Date(episode.airDate).toDateString()}</p>\n                          <p>{episode.overview}</p>\n                        </div>\n                      </div>\n                    )\n                  })}\n              </div>\n              {this.state.episodes.length > 0 && <span onClick={this.toggleEpisodes.bind(this)}>{this.state.episodesWrapped ? 'Show all episodes' : 'Hide episodes'}</span>}\n            </div>\n            <p className='Season__overview'>{this.state.season.overview}</p>\n            <div className='Season__people'>\n              <div className='Season__people__cast'>\n                <h4>Starring</h4>\n                <PersonList people={this.state.season.cast} attribute='character' />\n              </div>\n              <div className='Season__people__crew'>\n                <h4>Crew</h4>\n                <PersonList people={this.state.season.crew} attribute='job' />\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    shows: state.shows,\n    seasons: state.seasons,\n    episodes: state.episodes\n  }),\n  { updateSeason, updateEpisode }\n)(Season)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Person.scss'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nimport { moviesByPersonSelector } from '../selectors/movies'\nimport { seasonsByPersonSelector } from '../selectors/seasons'\nimport { personSelector, personRolesSelector } from '../selectors/people'\n\nclass Person extends Component {\n  render() {\n    const id = Number.parseInt(this.props.match.params.id)\n\n    const person = personSelector(id)({\n      movies: this.props.movies,\n      seasons: this.props.seasons\n    })\n    const movies = moviesByPersonSelector(id)({ movies: this.props.movies })\n    const seasons = seasonsByPersonSelector(id)({ seasons: this.props.seasons })\n    const roles = personRolesSelector(id, person.gender)({\n      movies: this.props.movies,\n      seasons: this.props.seasons\n    })\n\n    if (person) {\n      return (\n        <div className='Person'>\n          <Backdrop url={(movies[0] || this.props.shows[seasons[0].showId]).backdropUrl} />\n          <div className='Person__details'>\n            <Cover url={person.profileUrl} alt='profile' width='50%' />\n            <h1>{person.name}</h1>\n            <h5>Known as</h5>\n            <p>{roles.join(', ')}</p>\n          </div>\n\n          {movies.length > 0 && <div className='Person__movies'>\n            <h2>Movies</h2>\n            <HorizontalSlide items={movies} id='movies' />\n          </div>}\n\n          {seasons.length > 0 && <div className='Person__seasons'>\n            <h2>TV seasons</h2>\n            <HorizontalSlide items={seasons} id='seasons' />\n          </div>}\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows,\n    seasons: state.seasons\n  })\n)(Person)\n","import { createSelector } from 'reselect'\n\nimport {\n  moviesCastMemberSelector,\n  moviesCrewMemberSelector\n} from '../selectors/movies'\nimport {\n  seasonsCastMemberSelector,\n  seasonsCrewMemberSelector\n} from '../selectors/seasons'\n\nexport const personSelector = id => {\n  return createSelector(\n    moviesCastMemberSelector(id),\n    moviesCrewMemberSelector(id),\n    seasonsCastMemberSelector(id),\n    seasonsCrewMemberSelector(id),\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      return [...moviesCast, ...moviesCrew, ...seasonsCast, ...seasonsCrew][0]\n    }\n  )\n}\n\nexport const personRolesSelector = (id, gender) => {\n  return createSelector(\n    moviesCastMemberSelector(id),\n    moviesCrewMemberSelector(id),\n    seasonsCastMemberSelector(id),\n    seasonsCrewMemberSelector(id),\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      return [\n        ...new Set([\n          ((moviesCast.length > 0 || seasonsCast.length > 0) ?\n            (gender === 1 ? 'Actress' : 'Actor') : null),\n          ...moviesCrew.map(crewMember => crewMember.job),\n          ...seasonsCrew.map(crewMember => crewMember.job)\n        ])\n      ].filter(role => role !== null)\n    }\n  )\n}\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>e add</title>\n  \t<g fill=\"#ffffff\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"3\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" x1=\"16\" x2=\"16\" y1=\"2\" y2=\"30\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" x1=\"30\" x2=\"2\" y1=\"16\" y2=\"16\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>logo dropbox 2</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<polygon fill=\"#ffffff\" points=\"9.41319,1.11824 0,7.26432 6.50879,12.47649 15.99985,6.61586 \"/>\n  \t\t<polygon fill=\"#ffffff\" points=\"0,17.68899 9.41319,23.83504 15.99985,18.33712 6.50879,12.47649 \"/>\n  \t\t<polygon fill=\"#ffffff\" points=\"15.99985,18.33712 22.58681,23.83504 32,17.68899 25.49121,12.47649 \"/>\n  \t\t<polygon fill=\"#ffffff\" points=\"32,7.26432 22.58681,1.11824 15.99985,6.61586 25.49121,12.47649 \"/>\n  \t\t<polygon points=\"16.01932,19.51992 9.41319,25.00165 6.58635,23.15606 6.58635,25.22512 16.01932,30.88176 25.45226,25.22512 25.45226,23.15606 22.62543,25.00165 \"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>google 2</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<path d=\"M30.383,13.273H16.065v6.136H24.18c-1.3,4.091-4.5,5.455-8.18,5.455a8.864,8.864,0,1,1,5.691-15.65L26.15,4.967A15,15,0,1,0,16,31C24.271,31,31.747,25.545,30.383,13.273Z\" fill=\"#ffffff\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>microsoft</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<rect height=\"14\" width=\"14\" fill=\"#ffffff\" x=\"1\" y=\"1\"/>\n  \t\t<rect height=\"14\" width=\"14\" x=\"17\" y=\"1\"/>\n  \t\t<rect height=\"14\" width=\"14\" x=\"1\" y=\"17\"/>\n  \t\t<rect height=\"14\" width=\"14\" fill=\"#ffffff\" x=\"17\" y=\"17\"/>\n  \t</g>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport './Banner.scss'\n\nclass Banner extends Component {\n  render() {\n    return (\n      <div className='Banner'>\n        <h2>{this.props.title}</h2>\n        <p>{this.props.text}</p>\n        {this.props.linkUrl && <a href={this.props.linkUrl} target='_blank' rel='noopener noreferrer'>{this.props.linkText || 'Help'}</a>}\n      </div>\n    )\n  }\n}\n\nexport default Banner\n","import { createSelector } from 'reselect'\n\nconst authSelector = state => state.auth\n\nexport const authProviderSelector = provider => {\n  return createSelector(\n    authSelector,\n    auth => auth[provider]\n  )\n}\n\nexport const authTokenSelector = provider => {\n  return createSelector(\n    authProviderSelector(provider),\n    authProvider => authProvider.token\n  )\n}\n\nexport const authError = () => {\n  return createSelector(\n    authSelector,\n    auth => Object.keys(auth).some(provider => auth[provider].error !== null)\n  )\n}\n\nexport const authProviderError = provider => {\n  return createSelector(\n    authSelector,\n    auth => auth[provider].error !== null\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Settings.scss'\n\nimport { VERSION, PROVIDERS, AUTOMATIC_INDEXING } from '../constants'\n\nimport { authenticateMicrosoft } from '../actions/auth'\nimport { index } from '../actions/indexing'\nimport { updateSettings } from '../actions/settings'\n\nimport AddIcon from '../components/Nucleo/icons/add.jsx'\nimport DropboxIcon from '../components/Nucleo/icons/dropbox.jsx'\nimport GoogleIcon from '../components/Nucleo/icons/google.jsx'\nimport MicrosoftIcon from '../components/Nucleo/icons/microsoft.jsx'\n\nimport Banner from '../components/Banner'\n\nimport {\n  authTokenSelector,\n  authError,\n  authProviderError\n} from '../selectors/auth'\n\nclass Settings extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:last-child').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:last-child').classList.remove('active')\n  }\n\n  index() {\n    this.props.index()\n  }\n\n  handleAutomaticIndexingChange(event) {\n    this.props.updateSettings({\n      ...this.props.settings,\n      automaticIndexing: event.target.value\n    })\n  }\n\n  render() {\n    const newVersionAvailable = window.newVersionAvailable\n    const notAuthenticated = Object.values(PROVIDERS).filter(provider => {\n      return this.props.auth[provider].token !== null\n    }).length === 0\n    const authenticationExpired = authError()({ auth: this.props.auth })\n    const noMediaFound = Object.entries(this.props.movies).length === 0 &&\n      Object.entries(this.props.shows).length === 0\n\n    return (\n      <div className='Settings'>\n        {newVersionAvailable && <Banner title='Update available!' text='Restart the app to apply the changes.' />}\n        {notAuthenticated && <Banner title='Authenticate with cloud service' text='To get started, authenticate with the cloud service that hosts your media.' />}\n        {noMediaFound && <Banner title='No media found!' text=\"We indexed all your authenticated services, but weren't able to find any source files.\" linkText='Getting started with Plaain' linkUrl='https://github.com/jonhue/plaain#getting-started' />}\n        {authenticationExpired && <Banner title='Authentication expired!' text='Reauthenticate with the failing service.' />}\n\n        <section className='Settings__auth'>\n          <h2>Authentication</h2>\n          <p>Sign into your cloud to add your movies and TV shows to your library.</p>\n          <div className='Settings__auth__scroll'>\n            <div className='Settings__auth__flex'>\n              <button className={`microsoft ${authTokenSelector(PROVIDERS.MICROSOFT)({ auth: this.props.auth }) && 'primary'} ${authProviderError(PROVIDERS.MICROSOFT)({ auth: this.props.auth }) && 'warn'}`} onClick={this.props.authenticateMicrosoft}>\n                <MicrosoftIcon width={32} height={32} />\n              </button>\n              <button disabled className='dropbox'>\n                <DropboxIcon width={32} height={32} />\n              </button>\n              <button disabled className='google'>\n                <GoogleIcon width={32} height={32} />\n              </button>\n              <a className='button' href='https://github.com/jonhue/plaain' target='_blank' rel='noopener noreferrer'>\n                <AddIcon width={32} height={32} />\n              </a>\n            </div>\n          </div>\n        </section>\n\n        <section className='Settings__indexing'>\n          <h2>Indexing</h2>\n          <p>Index to look for new media on your linked services and to fetch the latest metadata.</p>\n          <button onClick={this.index.bind(this)}>\n            Index\n          </button>\n          <h5>Automatic indexing</h5>\n          <p>Index automatically when you launch Plaain after a given time has passed.</p>\n          <select value={this.props.settings.automaticIndexing} onChange={this.handleAutomaticIndexingChange.bind(this)}>\n            <option value={AUTOMATIC_INDEXING.NEVER}>Never</option>\n            <option value={AUTOMATIC_INDEXING.MONTHLY}>Monthly</option>\n            <option value={AUTOMATIC_INDEXING.DAILY}>Daily</option>\n            <option value={AUTOMATIC_INDEXING.ALWAYS}>Always</option>\n          </select>\n        </section>\n\n        <section className='Settings__version'>\n          <h2>Version</h2>\n          <p>Plaain {VERSION}{!window.newVersionAvailable && ' (latest)'}.</p>\n          <p className='small'>\n            Plaain is <a href='https://github.com/jonhue/plaain' target='_blank' rel='noopener noreferrer'>open-source</a>. See the <a href='https://github.com/jonhue/plaain/releases' target='_blank' rel='noopener noreferrer'>changelog</a>.\n          </p>\n          <p className='small'>Note that Plaain may <span className='bold'>not</span> be used to stream pirated content or publicly share your private media library. You may only connect to your private cloud storage.</p>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    auth: state.auth,\n    settings: state.settings,\n    movies: state.movies,\n    shows: state.shows\n  }),\n  { authenticateMicrosoft, index, updateSettings }\n)(Settings)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport FlexSearch from 'flexsearch'\nimport './Find.scss'\n\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nclass Find extends Component {\n  constructor(props) {\n    super(props)\n\n    this.moviesIndex = new FlexSearch()\n    Object.values(this.props.movies).forEach(movie => {\n      this.moviesIndex.add(movie.id, `${movie.name};${movie.overview}`)\n    })\n    this.showsIndex = new FlexSearch()\n    Object.values(this.props.shows).forEach(show => {\n      this.showsIndex.add(show.id, `${show.name};${show.overview}`)\n    })\n\n    this.state = {\n      query: new URLSearchParams(this.props.location.search).get('q') || '',\n      movies: [],\n      shows: [],\n    }\n  }\n\n  componentDidMount() {\n    this.search(new URLSearchParams(this.props.location.search).get('q'))\n  }\n\n  search(query) {\n    this.setState({\n      query: query || '',\n      movies: this.moviesIndex.search(query || '')\n        .map(result => this.props.movies[result]),\n      shows: this.showsIndex.search(query || '')\n        .map(result => this.props.shows[result])\n    })\n  }\n\n  handleInputChange(event) {\n    this.props.history.replace(`/app/find?q=${event.target.value}`)\n    this.search(event.target.value)\n  }\n\n  render() {\n    return (\n      <div className='Find'>\n        <form>\n          <input autoFocus value={this.state.query} placeholder=\"Search your library\" onChange={this.handleInputChange.bind(this)} />\n        </form>\n\n        {this.state.movies.length > 0 && <section>\n          <h2>Movies</h2>\n          <HorizontalSlide items={this.state.movies} id='movies' />\n        </section>}\n\n        {this.state.shows.length > 0 && <section>\n          <h2>TV shows</h2>\n          <HorizontalSlide items={this.state.shows} id='shows' />\n        </section>}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows\n  })\n)(Find)\n","import React from 'react'\n\nexport default props => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height}>\n    <path fill=\"none\" strokeMiterlimit=\"10\" d=\"M2.5 26.5h4l4-6 8 20 10-32 8 26 6-8h4\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#ff2fc1\" className=\"unPUVPIZ_0\"></path>\n    <style data-made-with=\"vivus-instant\">{`.unPUVPIZ_0{stroke-dasharray:108 110;stroke-dashoffset:109;animation:unPUVPIZ_draw_0 750ms ease-in-out 0ms infinite,unPUVPIZ_fade 750ms linear 0ms infinite;}@keyframes unPUVPIZ_draw{100%{stroke-dashoffset:0;}}@keyframes unPUVPIZ_fade{0%{stroke-opacity:1;}100%{stroke-opacity:1;}100%{stroke-opacity:0;}}@keyframes unPUVPIZ_draw_0{0%{stroke-dashoffset: 109}66.66666666666666%{ stroke-dashoffset: 0;}100%{ stroke-dashoffset: 0;}}`}</style>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport './Loading.scss'\n\nimport SoundWaveIcon from '../components/Nucleo/icons/soundWave.jsx'\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className='Loading'>\n        <div className='Loading__wrapper'>\n          <SoundWaveIcon width={48} height={48} />\n          {this.props.caption && <p className='small'>{this.props.caption}</p>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Loading\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>popcorn</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<polygon fill=\"none\" points=\"21 7 3 7 5 23 19 23 21 7\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\"/>\n  \t\t<path d=\"M19,5a3,3,0,0,0-3-3,2.97,2.97,0,0,0-1.47.4,2.986,2.986,0,0,0-5.06,0A2.97,2.97,0,0,0,8,2,3,3,0,0,0,5,5\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"9\" x2=\"8\" y1=\"23\" y2=\"7\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"15\" x2=\"16\" y1=\"23\" y2=\"7\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>movie 61</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"1\" y1=\"1\" y2=\"23\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"23\" x2=\"23\" y1=\"1\" y2=\"23\"/>\n  \t\t<rect height=\"22\" width=\"14\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x=\"5\" y=\"1\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"23\" y1=\"12\" y2=\"12\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"8\" y2=\"8\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"4\" y2=\"4\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"8\" y2=\"8\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"4\" y2=\"4\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"20\" y2=\"20\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"16\" y2=\"16\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"20\" y2=\"20\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"16\" y2=\"16\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>desktop screen</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"12\" x2=\"12\" y1=\"22\" y2=\"18\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"6\" x2=\"18\" y1=\"22\" y2=\"22\"/>\n  \t\t<rect height=\"16\" width=\"22\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x=\"1\" y=\"2\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>settings gear</title>\n  \t<g fill=\"#ffffff\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\">\n  \t\t<circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"3\"/>\n  \t\t<path d=\"M20,12a8.049,8.049,0,0,0-.188-1.713l2.714-2.055-2-3.464L17.383,6.094a7.987,7.987,0,0,0-2.961-1.719L14,1H10L9.578,4.375A7.987,7.987,0,0,0,6.617,6.094L3.474,4.768l-2,3.464,2.714,2.055a7.9,7.9,0,0,0,0,3.426L1.474,15.768l2,3.464,3.143-1.326a7.987,7.987,0,0,0,2.961,1.719L10,23h4l.422-3.375a7.987,7.987,0,0,0,2.961-1.719l3.143,1.326,2-3.464-2.714-2.055A8.049,8.049,0,0,0,20,12Z\" fill=\"none\" stroke=\"#ffffff\"/>\n  \t</g>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Nav.scss'\n\nimport PopcornIcon from './Nucleo/icons/popcorn.jsx'\nimport MovieIcon from './Nucleo/icons/movie.jsx'\nimport ShowIcon from './Nucleo/icons/show.jsx'\nimport GearIcon from './Nucleo/icons/gear.jsx'\n\nclass Nav extends Component {\n  render() {\n    return (\n      <div className='Nav'>\n        <Link to='/app'>\n          <PopcornIcon width={24} height={24} />\n          <p>For you</p>\n        </Link>\n        <Link disabled={Object.entries(this.props.movies).length === 0} to='/app/movies'>\n          <MovieIcon width={24} height={24} />\n          <p>Movies</p>\n        </Link>\n        <Link disabled={Object.entries(this.props.shows).length === 0} to='/app/shows'>\n          <ShowIcon width={24} height={24} />\n          <p>Shows</p>\n        </Link>\n        <Link to='/app/settings'>\n          <GearIcon width={24} height={24} />\n          <p>Settings</p>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows\n  })\n)(Nav)\n","import React, { Component } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport './App.scss'\n\nimport { index } from './actions/indexing'\n\nimport AutomaticIndexing from './services/AutomaticIndexing'\nimport IndexAfterUpdate from './services/IndexAfterUpdate'\nimport MicrosoftAuth from './services/auth/MicrosoftAuth'\n\nimport ForYou from './scenes/ForYou'\nimport Movies from './scenes/Movies'\nimport Movie from './scenes/Movie'\nimport Shows from './scenes/Shows'\nimport Show from './scenes/Show'\nimport Season from './scenes/Season'\nimport Person from './scenes/Person'\nimport Settings from './scenes/Settings'\nimport Find from './scenes/Find'\nimport Loading from './scenes/Loading'\nimport NotFound from './scenes/NotFound'\n\nimport Nav from './components/Nav'\n\nimport { authError } from './selectors/auth'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    // this is required for the login popup to close;\n    // see https://github.com/AzureAD/microsoft-authentication-library-for-js/issues/174\n    new MicrosoftAuth()\n  }\n\n  componentDidMount() {\n    new IndexAfterUpdate(this.props.version, this.props.index).perform() ||\n      new AutomaticIndexing(\n        this.props.automaticIndexing,\n        this.props.lastIndexed,\n        this.props.index\n      ).perform()\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <Loading caption={this.props.loading} />\n    } else {\n      return (\n        <div className='App'>\n          {authError()({ auth: this.props.auth }) && <Redirect to={`${this.props.match.path}/settings`} />}\n\n          <Switch>\n            <Route path={`${this.props.match.path}/`} exact component={ForYou} />\n            <Route path={`${this.props.match.path}/movies`} component={Movies} />\n            <Route path={`${this.props.match.path}/movie/:id`} exact component={Movie} />\n            <Route path={`${this.props.match.path}/shows`} component={Shows} />\n            <Route path={`${this.props.match.path}/show/:id`} exact component={Show} />\n            <Route path={`${this.props.match.path}/season/:id`} exact component={Season} />\n            <Route path={`${this.props.match.path}/person/:id`} exact component={Person} />\n            <Route path={`${this.props.match.path}/settings`} exact component={Settings} />\n            <Route path={`${this.props.match.path}/find`} exact component={Find} />\n            <Route component={NotFound} />\n          </Switch>\n\n          <Nav />\n        </div>\n      )\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    loading: state.loading,\n    version: state.version,\n    auth: state.auth,\n    lastIndexed: state.indexing.lastIndexed,\n    automaticIndexing: state.settings.automaticIndexing\n  }),\n  { index }\n)(App)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Welcome.scss'\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <div className='Welcome'>\n        <h1>Your movies & TV shows. Anywhere.</h1>\n        <div className='Welcome__details'>\n          <h3>Plaain lets you stream and maintain your media library from anywhere. No server needed, no fee required.</h3>\n          <Link to='/app' className='button primary'>Launch</Link>\n          <a href='https://github.com/jonhue/plaain#getting-started' target='_blank' rel='noopener noreferrer' className='button'>How it works</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Welcome\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default withRouter(ScrollToTop)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport { persistStore } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './App'\nimport Welcome from './scenes/Welcome'\nimport NotFound from './scenes/NotFound'\nimport Loading from './scenes/Loading'\n\nimport ScrollToTop from './components/ScrollToTop'\n\nimport './index.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loading caption='Loading...' />} persistor={persistStore(store)}>\n      <Router basename='/plaain'>\n        <ScrollToTop>\n          <Switch>\n            <Route path='/' exact component={Welcome} />\n            <Route path='/app' component={App} />\n            <Route component={NotFound} />\n          </Switch>\n        </ScrollToTop>\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}